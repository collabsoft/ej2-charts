{"version":3,"file":"ej2-charts.es2015.js","sources":["../src/es6/common/model/theme.js","../src/es6/common/model/base.js","../src/es6/common/utils/helper.js","../src/es6/chart/utils/double-range.js","../src/es6/chart/axis/double-axis.js","../src/es6/common/model/constants.js","../src/es6/chart/model/chart-base.js","../src/es6/chart/axis/axis.js","../src/es6/chart/axis/cartesian-panel.js","../src/es6/chart/utils/get-data.js","../src/es6/chart/series/chart-series.js","../src/es6/common/model/data.js","../src/es6/chart/series/marker-explode.js","../src/es6/chart/series/marker.js","../src/es6/common/legend/legend.js","../src/es6/chart/technical-indicators/technical-indicator.js","../src/es6/common/utils/export.js","../src/es6/chart/chart.js","../src/es6/chart/axis/axis-helper.js","../src/es6/chart/axis/date-time-axis.js","../src/es6/chart/axis/category-axis.js","../src/es6/chart/axis/logarithmic-axis.js","../src/es6/chart/axis/date-time-category-axis.js","../src/es6/chart/axis/strip-line.js","../src/es6/chart/series/line-base.js","../src/es6/chart/series/line-series.js","../src/es6/chart/series/column-base.js","../src/es6/chart/series/column-series.js","../src/es6/chart/series/multi-colored-base.js","../src/es6/chart/series/area-series.js","../src/es6/chart/series/bar-series.js","../src/es6/chart/axis/polar-radar-panel.js","../src/es6/chart/series/polar-series.js","../src/es6/chart/series/radar-series.js","../src/es6/chart/series/stacking-bar-series.js","../src/es6/chart/series/candle-series.js","../src/es6/chart/series/stacking-column-series.js","../src/es6/chart/series/step-line-series.js","../src/es6/chart/series/step-area-series.js","../src/es6/chart/series/stacking-area-series.js","../src/es6/chart/series/scatter-series.js","../src/es6/chart/series/range-column-series.js","../src/es6/chart/series/waterfall-series.js","../src/es6/chart/series/hilo-series.js","../src/es6/chart/series/hilo-open-close-series.js","../src/es6/chart/series/range-area-series.js","../src/es6/chart/series/bubble-series.js","../src/es6/chart/series/spline-base.js","../src/es6/chart/series/spline-series.js","../src/es6/chart/series/spline-area-series.js","../src/es6/chart/technical-indicators/indicator-base.js","../src/es6/chart/technical-indicators/sma-indicator.js","../src/es6/chart/technical-indicators/ema-indicator.js","../src/es6/chart/technical-indicators/tma-indicator.js","../src/es6/chart/technical-indicators/ad-indicator.js","../src/es6/chart/technical-indicators/atr-indicator.js","../src/es6/chart/technical-indicators/momentum-indicator.js","../src/es6/chart/technical-indicators/rsi-indicator.js","../src/es6/chart/technical-indicators/stochastic-indicator.js","../src/es6/chart/technical-indicators/bollinger-bands.js","../src/es6/chart/technical-indicators/macd-indicator.js","../src/es6/chart/trend-lines/trend-line.js","../src/es6/chart/user-interaction/crosshair.js","../src/es6/common/user-interaction/tooltip.js","../src/es6/chart/user-interaction/tooltip.js","../src/es6/chart/user-interaction/zooming-toolkit.js","../src/es6/chart/user-interaction/zooming.js","../src/es6/common/user-interaction/selection.js","../src/es6/chart/user-interaction/selection.js","../src/es6/chart/series/data-label.js","../src/es6/chart/series/error-bar.js","../src/es6/chart/legend/legend.js","../src/es6/common/annotation/annotation.js","../src/es6/chart/annotation/annotation.js","../src/es6/chart/series/box-and-whisker-series.js","../src/es6/chart/series/multi-colored-area-series.js","../src/es6/chart/series/multi-colored-line-series.js","../src/es6/chart/axis/multi-level-labels.js","../src/es6/chart/index.js","../src/es6/accumulation-chart/model/acc-base.js","../src/es6/accumulation-chart/renderer/accumulation-base.js","../src/es6/accumulation-chart/renderer/pie-base.js","../src/es6/accumulation-chart/renderer/pie-series.js","../src/es6/accumulation-chart/accumulation.js","../src/es6/accumulation-chart/renderer/triangular-base.js","../src/es6/accumulation-chart/renderer/funnel-series.js","../src/es6/accumulation-chart/renderer/pyramid-series.js","../src/es6/accumulation-chart/renderer/legend.js","../src/es6/accumulation-chart/renderer/dataLabel.js","../src/es6/accumulation-chart/user-interaction/tooltip.js","../src/es6/accumulation-chart/user-interaction/selection.js","../src/es6/accumulation-chart/annotation/annotation.js","../src/es6/accumulation-chart/index.js","../src/es6/common/index.js","../src/es6/index.js"],"sourcesContent":["/**\n * Specifies Chart Themes\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.axisLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.axisTitleFont = {\n        size: '14px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.chartTitleFont = {\n        size: '15px',\n        fontWeight: '500',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.crosshairLabelFont = {\n        size: '13px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.tooltipLabelFont = {\n        size: '13px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.legendLabelFont = {\n        size: '13px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.stripLineLabelFont = {\n        size: '12px',\n        fontWeight: 'Regular',\n        color: '#353535',\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n})(Theme || (Theme = {}));\n/** @private */\nexport function getSeriesColor(theme) {\n    let palette;\n    switch (theme) {\n        case 'Fabric':\n            palette = ['#4472c4', '#ed7d31', '#ffc000', '#70ad47', '#5b9bd5',\n                '#c1c1c1', '#6f6fe2', '#e269ae', '#9e480e', '#997300'];\n            break;\n        case 'Bootstrap':\n            palette = ['#a16ee5', '#f7ce69', '#55a5c2', '#7ddf1e', '#ff6ea6',\n                '#7953ac', '#b99b4f', '#407c92', '#5ea716', '#b91c52'];\n            break;\n        case 'Highcontrast':\n            palette = ['#79ECE4', '#E98272', '#DFE6B6', '#C6E773', '#BA98FF',\n                '#FA83C3', '#00C27A', '#43ACEF', '#D681EF', '#D8BC6E'];\n            break;\n        default:\n            palette = ['#00bdae', '#404041', '#357cd2', '#e56590', '#f8b883',\n                '#70ad47', '#dd8abd', '#7f84e8', '#7bb4eb', '#ea7a57'];\n            break;\n    }\n    return palette;\n}\n/** @private */\nexport function getThemeColor(theme) {\n    let style;\n    switch (theme) {\n        case 'Highcontrast':\n            style = {\n                axisLabel: '#ffffff',\n                axisTitle: '#ffffff',\n                axisLine: '#ffffff',\n                majorGridLine: '#BFBFBF',\n                minorGridLine: '#969696',\n                majorTickLine: '#BFBFBF',\n                minorTickLine: '#969696',\n                chartTitle: '#ffffff',\n                legendLabel: '#ffffff',\n                background: '#000000',\n                areaBorder: '#ffffff',\n                errorBar: '#ffffff',\n                crosshairLine: '#ffffff',\n                crosshairFill: '#ffffff',\n                crosshairLabel: '#000000',\n                tooltipFill: '#ffffff',\n                tooltipBoldLabel: '#000000',\n                tooltipLightLabel: '#000000',\n                tooltipHeaderLine: '#969696',\n                markerShadow: '#BFBFBF',\n                selectionRectFill: 'rgba(255, 217, 57, 0.3)',\n                selectionRectStroke: '#ffffff',\n                selectionCircleStroke: '#FFD939'\n            };\n            break;\n        default:\n            style = {\n                axisLabel: '#686868',\n                axisTitle: '#424242',\n                axisLine: '#b5b5b5',\n                majorGridLine: '#dbdbdb',\n                minorGridLine: '#eaeaea',\n                majorTickLine: '#b5b5b5',\n                minorTickLine: '#d6d6d6',\n                chartTitle: '#424242',\n                legendLabel: '#353535',\n                background: '#FFFFFF',\n                areaBorder: 'Gray',\n                errorBar: '#000000',\n                crosshairLine: '#4f4f4f',\n                crosshairFill: '#4f4f4f',\n                crosshairLabel: '#e5e5e5',\n                tooltipFill: 'rgba(0, 8, 22, 0.75)',\n                tooltipBoldLabel: '#ffffff',\n                tooltipLightLabel: '#dbdbdb',\n                tooltipHeaderLine: '#ffffff',\n                markerShadow: null,\n                selectionRectFill: 'rgba(41, 171, 226, 0.1)',\n                selectionRectStroke: '#29abe2',\n                selectionCircleStroke: '#29abe2'\n            };\n            break;\n    }\n    return style;\n}\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\nimport { Theme } from '../model/theme';\n/**\n * Defines the appearance of the connectors\n */\nexport class Connector extends ChildProperty {\n}\n__decorate([\n    Property('Line')\n], Connector.prototype, \"type\", void 0);\n__decorate([\n    Property(null)\n], Connector.prototype, \"color\", void 0);\n__decorate([\n    Property(1)\n], Connector.prototype, \"width\", void 0);\n__decorate([\n    Property(null)\n], Connector.prototype, \"length\", void 0);\n__decorate([\n    Property('')\n], Connector.prototype, \"dashArray\", void 0);\n/**\n * Configures the fonts in charts.\n */\nexport class Font extends ChildProperty {\n}\n__decorate([\n    Property('16px')\n], Font.prototype, \"size\", void 0);\n__decorate([\n    Property('')\n], Font.prototype, \"color\", void 0);\n__decorate([\n    Property('Segoe UI')\n], Font.prototype, \"fontFamily\", void 0);\n__decorate([\n    Property('Normal')\n], Font.prototype, \"fontWeight\", void 0);\n__decorate([\n    Property('Normal')\n], Font.prototype, \"fontStyle\", void 0);\n__decorate([\n    Property(1)\n], Font.prototype, \"opacity\", void 0);\n__decorate([\n    Property('Center')\n], Font.prototype, \"textAlignment\", void 0);\n__decorate([\n    Property('Trim')\n], Font.prototype, \"textOverflow\", void 0);\n/**\n * Configures the borders in the chart.\n */\nexport class Border extends ChildProperty {\n}\n__decorate([\n    Property('')\n], Border.prototype, \"color\", void 0);\n__decorate([\n    Property(1)\n], Border.prototype, \"width\", void 0);\n/**\n * Configures the chart area.\n */\nexport class ChartArea extends ChildProperty {\n}\n__decorate([\n    Complex({}, Border)\n], ChartArea.prototype, \"border\", void 0);\n__decorate([\n    Property('transparent')\n], ChartArea.prototype, \"background\", void 0);\n__decorate([\n    Property(1)\n], ChartArea.prototype, \"opacity\", void 0);\n/**\n * Configures the chart margins.\n */\nexport class Margin extends ChildProperty {\n}\n__decorate([\n    Property(10)\n], Margin.prototype, \"left\", void 0);\n__decorate([\n    Property(10)\n], Margin.prototype, \"right\", void 0);\n__decorate([\n    Property(10)\n], Margin.prototype, \"top\", void 0);\n__decorate([\n    Property(10)\n], Margin.prototype, \"bottom\", void 0);\n/**\n * Configures the animation behavior for chart series.\n */\nexport class Animation extends ChildProperty {\n}\n__decorate([\n    Property(true)\n], Animation.prototype, \"enable\", void 0);\n__decorate([\n    Property(1000)\n], Animation.prototype, \"duration\", void 0);\n__decorate([\n    Property(0)\n], Animation.prototype, \"delay\", void 0);\n/** @private */\nexport class Indexes extends ChildProperty {\n}\n__decorate([\n    Property(0)\n], Indexes.prototype, \"series\", void 0);\n__decorate([\n    Property(0)\n], Indexes.prototype, \"point\", void 0);\n/**\n * Column series rounded corner options\n */\nexport class CornerRadius extends ChildProperty {\n}\n__decorate([\n    Property(0)\n], CornerRadius.prototype, \"topLeft\", void 0);\n__decorate([\n    Property(0)\n], CornerRadius.prototype, \"topRight\", void 0);\n__decorate([\n    Property(0)\n], CornerRadius.prototype, \"bottomLeft\", void 0);\n__decorate([\n    Property(0)\n], CornerRadius.prototype, \"bottomRight\", void 0);\n/**\n * @private\n */\nexport class Index {\n    constructor(seriesIndex, pointIndex) {\n        this.series = seriesIndex;\n        this.point = pointIndex;\n    }\n}\n/**\n * Configures the Empty Points of series\n */\nexport class EmptyPointSettings extends ChildProperty {\n}\n__decorate([\n    Property(null)\n], EmptyPointSettings.prototype, \"fill\", void 0);\n__decorate([\n    Complex({ color: 'transparent', width: 0 }, Border)\n], EmptyPointSettings.prototype, \"border\", void 0);\n__decorate([\n    Property('Gap')\n], EmptyPointSettings.prototype, \"mode\", void 0);\n/**\n * Configures the ToolTips in the chart.\n */\nexport class TooltipSettings extends ChildProperty {\n}\n__decorate([\n    Property(false)\n], TooltipSettings.prototype, \"enable\", void 0);\n__decorate([\n    Property(false)\n], TooltipSettings.prototype, \"shared\", void 0);\n__decorate([\n    Property(null)\n], TooltipSettings.prototype, \"fill\", void 0);\n__decorate([\n    Property(null)\n], TooltipSettings.prototype, \"header\", void 0);\n__decorate([\n    Property(0.75)\n], TooltipSettings.prototype, \"opacity\", void 0);\n__decorate([\n    Complex(Theme.tooltipLabelFont, Font)\n], TooltipSettings.prototype, \"textStyle\", void 0);\n__decorate([\n    Property(null)\n], TooltipSettings.prototype, \"format\", void 0);\n__decorate([\n    Property(null)\n], TooltipSettings.prototype, \"template\", void 0);\n__decorate([\n    Property(true)\n], TooltipSettings.prototype, \"enableAnimation\", void 0);\n__decorate([\n    Complex({ color: '#cccccc', width: 0.5 }, Border)\n], TooltipSettings.prototype, \"border\", void 0);\n","import { SvgRenderer, Animation, compile as templateComplier } from '@syncfusion/ej2-base';\nimport { merge, extend, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { createElement, remove } from '@syncfusion/ej2-base';\nimport { Index } from '../../common/model/base';\n/**\n * Methods for calculating the text size.\n */\n/**\n * Function to measure the height and width of the text.\n * @param  {string} text\n * @param  {FontModel} font\n * @param  {string} id\n * @returns no\n * @private\n */\nexport function measureText(text, font) {\n    let htmlObject = document.getElementById('chartmeasuretext');\n    if (htmlObject === null) {\n        htmlObject = createElement('text', { id: 'chartmeasuretext' });\n        document.body.appendChild(htmlObject);\n    }\n    htmlObject.innerHTML = text;\n    htmlObject.style.position = 'absolute';\n    htmlObject.style.fontSize = font.size;\n    htmlObject.style.fontWeight = font.fontWeight;\n    htmlObject.style.fontStyle = font.fontStyle;\n    htmlObject.style.fontFamily = font.fontFamily;\n    htmlObject.style.visibility = 'hidden';\n    htmlObject.style.top = '-100';\n    htmlObject.style.left = '0';\n    htmlObject.style.whiteSpace = 'nowrap';\n    // For bootstrap line height issue\n    htmlObject.style.lineHeight = 'normal';\n    return new Size(htmlObject.clientWidth, htmlObject.clientHeight);\n}\n/**\n * Function to sort the dataSource, by default it sort the data in ascending order.\n * @param  {Object} data\n * @param  {string} fields\n * @param  {boolean} isDescending\n * @returns Object\n */\nexport function sort(data, fields, isDescending) {\n    let sortData = extend([], data, null);\n    sortData.sort((a, b) => {\n        let first = 0;\n        let second = 0;\n        for (let i = 0; i < fields.length; i++) {\n            first += a[fields[i]];\n            second += b[fields[i]];\n        }\n        if ((!isDescending && first < second) || (isDescending && first > second)) {\n            return -1;\n        }\n        else if (first === second) {\n            return 0;\n        }\n        return 1;\n    });\n    return sortData;\n}\n/** @private */\nexport function rotateTextSize(font, text, angle, chart) {\n    let renderer = new SvgRenderer(chart.element.id);\n    let box;\n    let options;\n    let htmlObject;\n    options = {\n        'font-size': font.size,\n        'font-style': font.fontStyle,\n        'font-family': font.fontFamily,\n        'font-weight': font.fontWeight,\n        'transform': 'rotate(' + angle + ', 0, 0)',\n        'text-anchor': 'middle'\n    };\n    htmlObject = renderer.createText(options, text);\n    if (!chart.delayRedraw) {\n        chart.element.appendChild(chart.svgObject);\n    }\n    chart.svgObject.appendChild(htmlObject);\n    box = htmlObject.getBoundingClientRect();\n    remove(htmlObject);\n    if (!chart.delayRedraw) {\n        remove(chart.svgObject);\n    }\n    return new Size((box.right - box.left), (box.bottom - box.top));\n}\n/** @private */\nexport function removeElement(id) {\n    let element = getElement(id);\n    if (element) {\n        remove(element);\n    }\n}\n/** @private */\nexport function logBase(value, base) {\n    return Math.log(value) / Math.log(base);\n}\n/** @private */\nexport function showTooltip(text, x, y, areaWidth, id, element, isTouch) {\n    //let id1: string = 'EJ2_legend_tooltip';\n    let tooltip = document.getElementById(id);\n    let width = measureText(text, {\n        fontFamily: 'Segoe UI', size: '12px',\n        fontStyle: 'Normal', fontWeight: 'Regular'\n    }).width + 5;\n    x = (x + width > areaWidth) ? x - width : x;\n    if (!tooltip) {\n        tooltip = createElement('div', {\n            innerHTML: text,\n            id: id,\n            styles: 'top:' + (y + 15).toString() + 'px;left:' + (x + 15).toString() +\n                'px;background-color: rgb(255, 255, 255) !important; color:black !important; ' +\n                'position:absolute;border:1px solid rgb(112, 112, 112); padding-left : 3px; padding-right : 2px;' +\n                'padding-bottom : 2px; padding-top : 2px; font-size:12px; font-family: \"Segoe UI\"'\n        });\n        element.appendChild(tooltip);\n    }\n    else {\n        tooltip.innerHTML = text;\n        tooltip.style.top = (y + 15).toString() + 'px';\n        tooltip.style.left = (x + 15).toString() + 'px';\n    }\n    if (isTouch) {\n        setTimeout(() => { removeElement(id); }, 1500);\n    }\n}\n/** @private */\nexport function inside(value, range) {\n    return (value < range.max) && (value > range.min);\n}\n/** @private */\nexport function withIn(value, range) {\n    return (value <= range.max) && (value >= range.min);\n}\n/** @private */\nexport function withInRange(previousPoint, currentPoint, nextPoint, series) {\n    let mX2 = series.logWithIn(currentPoint.xValue, series.xAxis);\n    let mX1 = previousPoint ? series.logWithIn(previousPoint.xValue, series.xAxis) : mX2;\n    let mX3 = nextPoint ? series.logWithIn(nextPoint.xValue, series.xAxis) : mX2;\n    let xStart = Math.floor(series.xAxis.visibleRange.min);\n    let xEnd = Math.ceil(series.xAxis.visibleRange.max);\n    return ((mX1 >= xStart && mX1 <= xEnd) || (mX2 >= xStart && mX2 <= xEnd) ||\n        (mX3 >= xStart && mX3 <= xEnd) || (xStart >= mX1 && xStart <= mX3));\n}\n/** @private */\nexport function sum(values) {\n    let sum = 0;\n    for (let value of values) {\n        sum += value;\n    }\n    return sum;\n}\n/** @private */\nexport function subArraySum(values, first, last, index, series) {\n    let sum = 0;\n    if (index !== null) {\n        for (let i = (first + 1); i < last; i++) {\n            if (index.indexOf(i) === -1) {\n                sum += values[i][series.yName];\n            }\n        }\n    }\n    else {\n        for (let i = (first + 1); i < last; i++) {\n            if (!isNullOrUndefined(values[i][series.yName])) {\n                sum += values[i][series.yName];\n            }\n        }\n    }\n    return sum;\n}\n/** @private */\nexport function subtractThickness(rect, thickness) {\n    rect.x += thickness.left;\n    rect.y += thickness.top;\n    rect.width -= thickness.left + thickness.right;\n    rect.height -= thickness.top + thickness.bottom;\n    return rect;\n}\n/** @private */\nexport function subtractRect(rect, thickness) {\n    rect.x += thickness.x;\n    rect.y += thickness.y;\n    rect.width -= thickness.x + thickness.width;\n    rect.height -= thickness.y + thickness.height;\n    return rect;\n}\n/** @private */\nexport function degreeToLocation(degree, radius, center) {\n    let radian = (degree * Math.PI) / 180;\n    return new ChartLocation(Math.cos(radian) * radius + center.x, Math.sin(radian) * radius + center.y);\n}\nfunction getAccumulationLegend(locX, locY, r, height, width, mode) {\n    let cartesianlarge = degreeToLocation(270, r, new ChartLocation(locX, locY));\n    let cartesiansmall = degreeToLocation(270, r, new ChartLocation(locX + (width / 10), locY));\n    return 'M' + ' ' + locX + ' ' + locY + ' ' + 'L' + ' ' + (locX + r) + ' ' + (locY) + ' ' + 'A' + ' ' + (r) + ' ' + (r) +\n        ' ' + 0 + ' ' + 1 + ' ' + 1 + ' ' + cartesianlarge.x + ' ' + cartesianlarge.y + ' ' + 'Z' + ' ' + 'M' + ' ' + (locX +\n        (width / 10)) + ' ' + (locY - (height / 10)) + ' ' + 'L' + (locX + (r)) + ' ' + (locY - height / 10) + ' ' + 'A' + ' '\n        + (r) + ' ' + (r) + ' ' + 0 + ' ' + 0 + ' ' + 0 + ' ' + cartesiansmall.x + ' ' + cartesiansmall.y + ' ' + 'Z';\n}\n/** @private */\nexport function getAngle(center, point) {\n    let angle = Math.atan2((point.y - center.y), (point.x - center.x));\n    angle = angle < 0 ? (6.283 + angle) : angle;\n    return angle * (180 / Math.PI);\n}\n/** @private */\nexport function subArray(values, index) {\n    let subArray = [];\n    for (let i = 0; i <= index - 1; i++) {\n        subArray.push(values[i]);\n    }\n    return subArray;\n}\n/** @private */\nexport function valueToCoefficient(value, axis) {\n    let range = axis.visibleRange;\n    let result = (value - range.min) / (range.delta);\n    return axis.isInversed ? (1 - result) : result;\n}\n/** @private */\nexport function TransformToVisible(x, y, xAxis, yAxis, isInverted, series) {\n    x = (xAxis.valueType === 'Logarithmic' ? logBase(x > 1 ? x : 1, xAxis.logBase) : x);\n    y = (yAxis.valueType === 'Logarithmic' ?\n        logBase(y > 1 ? y : 1, yAxis.logBase) : y);\n    x += xAxis.valueType === 'Category' && xAxis.labelPlacement === 'BetweenTicks' && series.type !== 'Radar' ? 0.5 : 0;\n    let radius = series.chart.radius * valueToCoefficient(y, yAxis);\n    let point = CoefficientToVector(valueToPolarCoefficient(x, xAxis), series.chart.primaryXAxis.startAngle);\n    return {\n        x: (series.clipRect.width / 2 + series.clipRect.x) + radius * point.x,\n        y: (series.clipRect.height / 2 + series.clipRect.y) + radius * point.y\n    };\n}\n/**\n * method to find series, point index by element id\n * @private\n */\nexport function indexFinder(id, isPoint = false) {\n    let ids = ['NaN', 'NaN'];\n    if (id.indexOf('_Point_') > -1) {\n        ids = id.split('_Series_')[1].split('_Point_');\n    }\n    else if (id.indexOf('_shape_') > -1 && (!isPoint || (isPoint && id.indexOf('_legend_') === -1))) {\n        ids = id.split('_shape_');\n        ids[0] = '0';\n    }\n    else if (id.indexOf('_text_') > -1 && (!isPoint || (isPoint && id.indexOf('_legend_') === -1))) {\n        ids = id.split('_text_');\n        ids[0] = '0';\n    }\n    return new Index(parseInt(ids[0], 10), parseInt(ids[1], 10));\n}\n/** @private */\nexport function CoefficientToVector(coefficient, startAngle) {\n    startAngle = startAngle < 0 ? startAngle + 360 : startAngle;\n    let angle = Math.PI * (1.5 - 2 * coefficient);\n    angle = angle + (startAngle * Math.PI) / 180;\n    return { x: Math.cos(angle), y: Math.sin(angle) };\n}\n/** @private */\nexport function valueToPolarCoefficient(value, axis) {\n    let range = axis.visibleRange;\n    let delta;\n    let length;\n    if (axis.valueType !== 'Category') {\n        delta = (range.max - (axis.valueType === 'DateTime' ? axis.dateTimeInterval : range.interval)) - range.min;\n        length = axis.visibleLabels.length - 1;\n        delta = delta === 0 ? 1 : delta;\n    }\n    else {\n        delta = range.delta;\n        length = axis.visibleLabels.length;\n    }\n    return axis.isInversed ? ((value - range.min) / delta) * (1 - 1 / (length)) :\n        1 - ((value - range.min) / delta) * (1 - 1 / (length));\n}\n/** @private */\nexport class Mean {\n    constructor(verticalStandardMean, verticalSquareRoot, horizontalStandardMean, horizontalSquareRoot, verticalMean, horizontalMean) {\n        this.verticalStandardMean = verticalStandardMean;\n        this.horizontalStandardMean = horizontalStandardMean;\n        this.verticalSquareRoot = verticalSquareRoot;\n        this.horizontalSquareRoot = horizontalSquareRoot;\n        this.verticalMean = verticalMean;\n        this.horizontalMean = horizontalMean;\n    }\n}\n/** @private */\nexport class PolarArc {\n    constructor(startAngle, endAngle, innerRadius, radius, currentXPosition) {\n        this.startAngle = startAngle;\n        this.endAngle = endAngle;\n        this.innerRadius = innerRadius;\n        this.radius = radius;\n        this.currentXPosition = currentXPosition;\n    }\n}\n/** @private */\nexport function createTooltip(id, text, top, left, fontSize) {\n    let tooltip = getElement(id);\n    let style = 'top:' + top.toString() + 'px;' +\n        'left:' + left.toString() + 'px;' +\n        'color:black !important' +\n        'background:#FFFFFF !important' + ';' +\n        'position:absolute;border:1px solid #707070;font-size:' + fontSize + ';border-radius:2px;';\n    if (!tooltip) {\n        tooltip = createElement('div', {\n            id: id, innerHTML: '&nbsp;' + text + '&nbsp;', styles: style\n        });\n        document.body.appendChild(tooltip);\n    }\n    else {\n        tooltip.setAttribute('innerHTML', '&nbsp;' + text + '&nbsp;');\n        tooltip.setAttribute('styles', style);\n    }\n}\n/** @private */\nexport function createZoomingLabels(chart, axis, parent, index, isVertical, rect) {\n    let margin = 5;\n    let opposedPosition = axis.opposedPosition;\n    let anchor = isVertical ? 'start' : 'auto';\n    let size;\n    let chartRect = chart.availableSize.width;\n    let x;\n    let y;\n    let rx = 3;\n    let arrowLocation;\n    let direction;\n    for (let i = 0; i < 2; i++) {\n        size = measureText(i ? axis.endLabel : axis.startLabel, axis.labelStyle);\n        if (isVertical) {\n            arrowLocation = i ? new ChartLocation(rect.x, rect.y + rx) :\n                new ChartLocation(axis.rect.x, (rect.y + rect.height - rx));\n            x = (rect.x + (opposedPosition ? (rect.width + margin) : -(size.width + margin + margin)));\n            y = (rect.y + (i ? 0 : rect.height - size.height - margin));\n            x += (x < 0 || ((chartRect) < (x + size.width + margin))) ? (opposedPosition ? -(size.width / 2) : size.width / 2) : 0;\n            direction = findDirection(rx, rx, new Rect(x, y, size.width + margin, size.height + margin), arrowLocation, margin, false, false, !opposedPosition, arrowLocation.x, arrowLocation.y + (i ? -rx : rx));\n        }\n        else {\n            arrowLocation = i ? new ChartLocation((rect.x + rect.width - rx), (rect.y + rect.height)) :\n                new ChartLocation(rect.x + rx, (rect.y + rect.height));\n            x = (rect.x + (i ? (rect.width - size.width - margin) : 0));\n            y = (opposedPosition ? (rect.y - size.height - 10) : (rect.y + rect.height + margin));\n            direction = findDirection(rx, rx, new Rect(x, y, size.width + margin, size.height + margin), arrowLocation, margin, opposedPosition, !opposedPosition, false, arrowLocation.x + (i ? rx : -rx), arrowLocation.y);\n        }\n        x = x + (margin / 2);\n        y = y + (3 * (size.height / 4)) + (margin / 2);\n        parent.appendChild(chart.renderer.drawPath(new PathOption(chart.element.id + '_Zoom_' + index + '_AxisLabel_Shape_' + i, chart.themeStyle.crosshairFill, 2, chart.themeStyle.crosshairFill, 1, null, direction)));\n        textElement(new TextOption(chart.element.id + '_Zoom_' + index + '_AxisLabel_' + i, x, y, anchor, i ? axis.endLabel : axis.startLabel), { color: chart.themeStyle.crosshairLabel, fontFamily: 'Segoe UI', fontWeight: 'Regular', size: '11px' }, chart.themeStyle.crosshairLabel, parent);\n    }\n    return parent;\n}\n//Within bounds\n/** @private */\nexport function withInBounds(x, y, bounds, width = 0, height = 0) {\n    return (x >= bounds.x - width && x <= bounds.x + bounds.width + width && y >= bounds.y - height\n        && y <= bounds.y + bounds.height + height);\n}\n/** @private */\nexport function getValueXByPoint(value, size, axis) {\n    let actualValue = !axis.isInversed ? value / size : (1 - (value / size));\n    return actualValue * (axis.visibleRange.delta) + axis.visibleRange.min;\n}\n/** @private */\nexport function getValueYByPoint(value, size, axis) {\n    let actualValue = axis.isInversed ? value / size : (1 - (value / size));\n    return actualValue * (axis.visibleRange.delta) + axis.visibleRange.min;\n}\n/** @private */\nexport function findClipRect(series) {\n    let rect = series.clipRect;\n    if (series.chart.requireInvertedAxis) {\n        rect.x = series.yAxis.rect.x;\n        rect.y = series.xAxis.rect.y;\n        rect.width = series.yAxis.rect.width;\n        rect.height = series.xAxis.rect.height;\n    }\n    else {\n        rect.x = series.xAxis.rect.x;\n        rect.y = series.yAxis.rect.y;\n        rect.width = series.xAxis.rect.width;\n        rect.height = series.yAxis.rect.height;\n    }\n}\n/** @private */\nexport function firstToLowerCase(str) {\n    return str.substr(0, 1).toLowerCase() + str.substr(1);\n}\n/** @private */\nexport function getMinPointsDelta(axis, seriesCollection) {\n    let minDelta = Number.MAX_VALUE;\n    let xValues;\n    let minVal;\n    seriesCollection.forEach((series, index) => {\n        xValues = [];\n        if (series.visible &&\n            (axis.name === series.xAxisName || (axis.name === 'primaryXAxis' && series.xAxisName === null)\n                || (axis.name === series.chart.primaryXAxis.name && !series.xAxisName))) {\n            xValues = series.points.map((point, index) => {\n                return point.xValue;\n            });\n            xValues.sort((first, second) => { return first - second; });\n            if (xValues.length === 1) {\n                minVal = xValues[0] - ((!isNullOrUndefined(series.xMin) && series.xAxis.valueType !== 'DateTime') ?\n                    series.xMin : axis.visibleRange.min);\n                if (minVal !== 0) {\n                    minDelta = Math.min(minDelta, minVal);\n                }\n            }\n            else {\n                xValues.forEach((value, index, xValues) => {\n                    if (index > 0 && value) {\n                        minVal = value - xValues[index - 1];\n                        if (minVal !== 0) {\n                            minDelta = Math.min(minDelta, minVal);\n                        }\n                    }\n                });\n            }\n        }\n    });\n    if (minDelta === Number.MAX_VALUE) {\n        minDelta = 1;\n    }\n    return minDelta;\n}\n/** @private */\nexport function getAnimationFunction(effect) {\n    let functionName;\n    switch (effect) {\n        case 'Linear':\n            functionName = linear;\n            break;\n    }\n    return functionName;\n}\n/**\n * Animation Effect Calculation Started Here\n * @param currentTime\n * @param startValue\n * @param endValue\n * @param duration\n * @private\n */\nexport function linear(currentTime, startValue, endValue, duration) {\n    return -endValue * Math.cos(currentTime / duration * (Math.PI / 2)) + endValue + startValue;\n}\n/**\n * Animation Effect Calculation End\n * @private\n */\nexport function markerAnimate(element, delay, duration, series, pointIndex, point, isLabel) {\n    let centerX = point.x;\n    let centerY = point.y;\n    let height = 0;\n    element.style.visibility = 'hidden';\n    new Animation({}).animate(element, {\n        duration: duration,\n        delay: delay,\n        progress: (args) => {\n            if (args.timeStamp > args.delay) {\n                args.element.style.visibility = 'visible';\n                height = ((args.timeStamp - args.delay) / args.duration);\n                element.setAttribute('transform', 'translate(' + centerX\n                    + ' ' + centerY + ') scale(' + height + ') translate(' + (-centerX) + ' ' + (-centerY) + ')');\n            }\n        },\n        end: (model) => {\n            element.style.visibility = '';\n            element.removeAttribute('transform');\n            if ((series.type === 'Scatter' || series.type === 'Bubble') && !isLabel && (pointIndex === series.points.length - 1)) {\n                series.chart.trigger('animationComplete', { series: series });\n            }\n        }\n    });\n}\n/**\n * Animation for template\n * @private\n */\nexport function templateAnimate(element, delay, duration, name, isRemove) {\n    new Animation({}).animate(element, {\n        duration: duration,\n        delay: delay,\n        name: name,\n        progress: (args) => {\n            args.element.style.visibility = 'visible';\n        },\n        end: (args) => {\n            if (isRemove) {\n                remove(args.element);\n            }\n            else {\n                args.element.style.visibility = 'visible';\n            }\n        },\n    });\n}\n/** @private */\nexport function drawSymbol(location, shape, size, url, options, label) {\n    let functionName = 'Path';\n    let renderer = new SvgRenderer('');\n    let temp = calculateShapes(location, size, shape, options, url);\n    let htmlObject = renderer['draw' + temp.functionName](temp.renderOption);\n    htmlObject.setAttribute('aria-label', label);\n    return htmlObject;\n}\n/** @private */\nexport function calculateShapes(location, size, shape, options, url) {\n    let path;\n    let functionName = 'Path';\n    let width = size.width;\n    let height = size.height;\n    let locX = location.x;\n    let locY = location.y;\n    let x = location.x + (-width / 2);\n    let y = location.y + (-height / 2);\n    switch (shape) {\n        case 'Circle':\n        case 'Bubble':\n            functionName = 'Ellipse';\n            merge(options, { 'rx': width / 2, 'ry': height / 2, 'cx': locX, 'cy': locY });\n            break;\n        case 'Cross':\n            path = 'M' + ' ' + x + ' ' + locY + ' ' + 'L' + ' ' + (locX + (width / 2)) + ' ' + locY + ' ' +\n                'M' + ' ' + locX + ' ' + (locY + (height / 2)) + ' ' + 'L' + ' ' + locX + ' ' +\n                (locY + (-height / 2));\n            merge(options, { 'd': path });\n            break;\n        case 'HorizontalLine':\n            path = 'M' + ' ' + x + ' ' + locY + ' ' + 'L' + ' ' + (locX + (width / 2)) + ' ' + locY;\n            merge(options, { 'd': path });\n            break;\n        case 'VerticalLine':\n            path = 'M' + ' ' + locX + ' ' + (locY + (height / 2)) + ' ' + 'L' + ' ' + locX + ' ' + (locY + (-height / 2));\n            merge(options, { 'd': path });\n            break;\n        case 'Diamond':\n            path = 'M' + ' ' + x + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + locY + ' z';\n            merge(options, { 'd': path });\n            break;\n        case 'Rectangle':\n        case 'Hilo':\n        case 'HiloOpenClose':\n        case 'Candle':\n        case 'Waterfall':\n        case 'BoxAndWhisker':\n        case 'StepArea':\n            path = 'M' + ' ' + x + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (-height / 2)) + ' z';\n            merge(options, { 'd': path });\n            break;\n        case 'Pyramid':\n        case 'Triangle':\n            path = 'M' + ' ' + x + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (height / 2)) + ' z';\n            merge(options, { 'd': path });\n            break;\n        case 'Funnel':\n        case 'InvertedTriangle':\n            path = 'M' + ' ' + (locX + (width / 2)) + ' ' + (locY - (height / 2)) + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + (locX - (width / 2)) + ' ' + (locY - (height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY - (height / 2)) + ' z';\n            merge(options, { 'd': path });\n            break;\n        case 'Pentagon':\n            let eq = 72;\n            let xValue;\n            let yValue;\n            for (let i = 0; i <= 5; i++) {\n                xValue = (width / 2) * Math.cos((Math.PI / 180) * (i * eq));\n                yValue = (height / 2) * Math.sin((Math.PI / 180) * (i * eq));\n                if (i === 0) {\n                    path = 'M' + ' ' + (locX + xValue) + ' ' + (locY + yValue) + ' ';\n                }\n                else {\n                    path = path.concat('L' + ' ' + (locX + xValue) + ' ' + (locY + yValue) + ' ');\n                }\n            }\n            path = path.concat('Z');\n            merge(options, { 'd': path });\n            break;\n        case 'Image':\n            functionName = 'Image';\n            merge(options, { 'href': url, 'height': height, 'width': width, x: x, y: y });\n            break;\n    }\n    options = calculateLegendShapes(location, new Size(width, height), shape, options).renderOption;\n    return { renderOption: options, functionName: functionName };\n}\n/** @private */\nexport function getRectLocation(startLocation, endLocation, outerRect) {\n    let x;\n    let y;\n    x = (endLocation.x < outerRect.x) ? outerRect.x :\n        (endLocation.x > (outerRect.x + outerRect.width)) ? outerRect.x + outerRect.width : endLocation.x;\n    y = (endLocation.y < outerRect.y) ? outerRect.y :\n        (endLocation.y > (outerRect.y + outerRect.height)) ? outerRect.y + outerRect.height : endLocation.y;\n    return new Rect((x > startLocation.x ? startLocation.x : x), (y > startLocation.y ? startLocation.y : y), Math.abs(x - startLocation.x), Math.abs(y - startLocation.y));\n}\n/** @private */\nexport function minMax(value, min, max) {\n    return value > max ? max : (value < min ? min : value);\n}\n/** @private */\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/** @private */\nexport function getTemplateFunction(template) {\n    let templateFn = null;\n    let e;\n    try {\n        if (document.querySelectorAll(template).length) {\n            templateFn = templateComplier(document.querySelector(template).innerHTML.trim());\n        }\n    }\n    catch (e) {\n        templateFn = templateComplier(template);\n    }\n    return templateFn;\n}\n/** @private */\nexport function createTemplate(childElement, pointIndex, content, chart, point, series) {\n    let templateFn;\n    let templateElement;\n    templateFn = getTemplateFunction(content);\n    try {\n        if (templateFn && templateFn({ chart: chart, series: series, point: point }).length) {\n            templateElement = templateFn({ chart: chart, series: series, point: point });\n            while (templateElement.length > 0) {\n                childElement.appendChild(templateElement[0]);\n            }\n        }\n    }\n    catch (e) {\n        return childElement;\n    }\n    return childElement;\n}\n/** @private */\nexport function getFontStyle(font) {\n    let style = '';\n    style = 'font-size:' + font.size +\n        '; font-style:' + font.fontStyle + '; font-weight:' + font.fontWeight +\n        '; font-family:' + font.fontFamily + ';opacity:' + font.opacity +\n        '; color:' + font.color + ';';\n    return style;\n}\n/** @private */\nexport function measureElementRect(element) {\n    let bounds;\n    document.body.appendChild(element);\n    bounds = element.getBoundingClientRect();\n    removeElement(element.id);\n    return bounds;\n}\n/** @private */\nexport function findlElement(elements, id) {\n    let element;\n    for (let i = 0, length = elements.length; i < length; i++) {\n        if (elements[i].id.indexOf(id) > -1) {\n            element = elements[i];\n            continue;\n        }\n    }\n    return element;\n}\n/** @private */\nexport function getPoint(x, y, xAxis, yAxis, isInverted, series) {\n    x = ((xAxis.valueType === 'Logarithmic') ? logBase(((x > 1) ? x : 1), xAxis.logBase) : x);\n    y = ((yAxis.valueType === 'Logarithmic') ? logBase(((y > 1) ? y : 1), yAxis.logBase) : y);\n    x = valueToCoefficient(x, xAxis);\n    y = valueToCoefficient(y, yAxis);\n    let xLength = (isInverted ? xAxis.rect.height : xAxis.rect.width);\n    let yLength = (isInverted ? yAxis.rect.width : yAxis.rect.height);\n    let locationX = isInverted ? y * (yLength) : x * (xLength);\n    let locationY = isInverted ? (1 - x) * (xLength) : (1 - y) * (yLength);\n    return new ChartLocation(locationX, locationY);\n}\n/** @private */\nexport function appendElement(child, parent) {\n    if (child && child.hasChildNodes() && parent) {\n        parent.appendChild(child);\n    }\n    else {\n        return null;\n    }\n}\n/** @private */\nexport function getDraggedRectLocation(x1, y1, x2, y2, outerRect) {\n    let width = Math.abs(x1 - x2);\n    let height = Math.abs(y1 - y2);\n    let x = Math.max(checkBounds(Math.min(x1, x2), width, outerRect.x, outerRect.width), outerRect.x);\n    let y = Math.max(checkBounds(Math.min(y1, y2), height, outerRect.y, outerRect.height), outerRect.y);\n    return new Rect(x, y, Math.min(width, outerRect.width), Math.min(height, outerRect.height));\n}\n/** @private */\nexport function checkBounds(start, size, min, max) {\n    if (start < min) {\n        start = min;\n    }\n    else if ((start + size) > (max + min)) {\n        start = (max + min) - size;\n    }\n    return start;\n}\n/** @private */\nexport function getLabelText(currentPoint, series, chart) {\n    let labelFormat = series.yAxis.labelFormat;\n    let text = [];\n    let customLabelFormat = labelFormat.match('{value}') !== null;\n    switch (series.seriesType) {\n        case 'XY':\n            text.push(currentPoint.text || currentPoint.yValue.toString());\n            break;\n        case 'HighLow':\n            text.push(currentPoint.text || Math.max(currentPoint.high, currentPoint.low).toString());\n            text.push(currentPoint.text || Math.min(currentPoint.high, currentPoint.low).toString());\n            break;\n        case 'HighLowOpenClose':\n            text.push(currentPoint.text || Math.max(currentPoint.high, currentPoint.low).toString());\n            text.push(currentPoint.text || Math.min(currentPoint.high, currentPoint.low).toString());\n            text.push(currentPoint.text || Math.max(currentPoint.open, currentPoint.close).toString());\n            text.push(currentPoint.text || Math.min(currentPoint.open, currentPoint.close).toString());\n            break;\n        case 'BoxPlot':\n            text.push(currentPoint.text || currentPoint.median.toString());\n            text.push(currentPoint.text || currentPoint.maximum.toString());\n            text.push(currentPoint.text || currentPoint.minimum.toString());\n            text.push(currentPoint.text || currentPoint.upperQuartile.toString());\n            text.push(currentPoint.text || currentPoint.lowerQuartile.toString());\n            for (let liers of currentPoint.outliers) {\n                text.push(currentPoint.text || liers.toString());\n            }\n            break;\n    }\n    if (labelFormat && !currentPoint.text) {\n        for (let i = 0; i < text.length; i++) {\n            text[i] = customLabelFormat ? labelFormat.replace('{value}', series.yAxis.format(parseFloat(text[i]))) :\n                series.yAxis.format(parseFloat(text[i]));\n        }\n    }\n    return text;\n}\n/** @private */\nexport function stopTimer(timer) {\n    window.clearInterval(timer);\n}\n/** @private */\nexport function isCollide(rect, collections, clipRect) {\n    let isCollide;\n    let currentRect = new Rect(rect.x + clipRect.x, rect.y + clipRect.y, rect.width, rect.height);\n    isCollide = collections.some((rect) => {\n        return (currentRect.x < rect.x + rect.width && currentRect.x + currentRect.width > rect.x &&\n            currentRect.y < rect.y + rect.height && currentRect.height + currentRect.y > rect.y);\n    });\n    return isCollide;\n}\n/** @private */\nexport function isOverlap(currentRect, rect) {\n    return (currentRect.x < rect.x + rect.width && currentRect.x + currentRect.width > rect.x &&\n        currentRect.y < rect.y + rect.height && currentRect.height + currentRect.y > rect.y);\n}\n/** @private */\nexport function containsRect(currentRect, rect) {\n    return (currentRect.x <= rect.x && currentRect.x + currentRect.width >= rect.x + rect.width &&\n        currentRect.y <= rect.y && currentRect.height + currentRect.y >= rect.y + rect.height);\n}\n/** @private */\nexport function calculateRect(location, textSize, margin) {\n    return new Rect((location.x - (textSize.width / 2) - margin.left), (location.y - (textSize.height / 2) - margin.top), textSize.width + margin.left + margin.right, textSize.height + margin.top + margin.bottom);\n}\n/** @private */\nexport function convertToHexCode(value) {\n    return '#' + componentToHex(value.r) + componentToHex(value.g) + componentToHex(value.b);\n}\n/** @private */\nexport function componentToHex(value) {\n    let hex = value.toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n}\n/** @private */\nexport function convertHexToColor(hex) {\n    let result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? new ColorValue(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) :\n        new ColorValue(255, 255, 255);\n}\n/** @private */\nexport function colorNameToHex(color) {\n    let element;\n    color = color === 'transparent' ? 'white' : color;\n    element = document.getElementById('chartmeasuretext');\n    element.style.color = color;\n    color = window.getComputedStyle(element).color;\n    let exp = /^(rgb|hsl)(a?)[(]\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*(?:,\\s*([\\d.]+)\\s*)?[)]$/;\n    let isRGBValue = exp.exec(color);\n    return convertToHexCode(new ColorValue(parseInt(isRGBValue[3], 10), parseInt(isRGBValue[4], 10), parseInt(isRGBValue[5], 10)));\n}\n/** @private */\nexport function getSaturationColor(color, factor) {\n    color = colorNameToHex(color);\n    color = color.replace(/[^0-9a-f]/gi, '');\n    if (color.length < 6) {\n        color = color[0] + color[0] + color[1] + color[1] + color[2] + color[2];\n    }\n    factor = factor || 0;\n    // convert to decimal and change luminosity\n    let rgb = '#';\n    let colorCode;\n    for (let i = 0; i < 3; i++) {\n        colorCode = parseInt(color.substr(i * 2, 2), 16);\n        colorCode = Math.round(Math.min(Math.max(0, colorCode + (colorCode * factor)), 255));\n        rgb += ('00' + colorCode.toString(16)).substr(colorCode.toString(16).length);\n    }\n    return rgb;\n}\n/** @private */\nexport function getMedian(values) {\n    let half = Math.floor(values.length / 2);\n    return values.length % 2 ? values[half] : ((values[half - 1] + values[half]) / 2.0);\n}\n/** @private */\n// tslint:disable-next-line:max-func-body-length\nexport function calculateLegendShapes(location, size, shape, options) {\n    let padding = 10;\n    let path = '';\n    let height = size.height;\n    let width = size.width;\n    let locX = location.x;\n    let locY = location.y;\n    switch (shape) {\n        case 'MultiColoredLine':\n        case 'Line':\n            path = 'M' + ' ' + (locX + (-width / 2)) + ' ' + (locY) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY);\n            merge(options, { 'd': path });\n            break;\n        case 'StepLine':\n            options.fill = 'transparent';\n            path = 'M' + ' ' + (locX + (-width / 2) - (padding / 4)) + ' ' + (locY + (height / 2)) + ' ' + 'L' + ' ' + (locX +\n                (-width / 2) + (width / 10)) + ' ' + (locY + (height / 2)) + ' ' + 'L' + ' ' + (locX + (-width / 2) + (width / 10))\n                + ' ' + (locY) + ' ' + 'L' + ' ' + (locX + (-width / 10)) + ' ' + (locY) + ' ' + 'L' + ' ' + (locX + (-width / 10))\n                + ' ' + (locY + (height / 2)) + ' ' + 'L' + ' ' + (locX + (width / 5)) + ' ' + (locY + (height / 2)) + ' ' + 'L' +\n                ' ' + (locX + (width / 5)) + ' ' + (locY + (-height / 2)) + ' ' + 'L' + ' ' + (locX + (width / 2)) + ' ' + (locY +\n                (-height / 2)) + 'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' + 'L' + '' + (locX + (width / 2)\n                + (padding / 4)) + ' ' + (locY + (height / 2));\n            merge(options, { 'd': path });\n            break;\n        case 'RightArrow':\n            let space = 2;\n            path = 'M' + ' ' + (locX + (-width / 2)) + ' ' + (locY - (height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY) + ' ' + 'L' + ' ' +\n                (locX + (-width / 2)) + ' ' + (locY + (height / 2)) + ' L' + ' ' + (locX + (-width / 2)) + ' ' +\n                (locY + (height / 2) - space) + ' ' + 'L' + ' ' + (locX + (width / 2) - (2 * space)) + ' ' + (locY) +\n                ' L' + (locX + (-width / 2)) + ' ' + (locY - (height / 2) + space) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'LeftArrow':\n            options.fill = options.stroke;\n            options.stroke = 'transparent';\n            space = 2;\n            path = 'M' + ' ' + (locX + (width / 2)) + ' ' + (locY - (height / 2)) + ' ' +\n                'L' + ' ' + (locX + (-width / 2)) + ' ' + (locY) + ' ' + 'L' + ' ' +\n                (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' + 'L' + ' ' +\n                (locX + (width / 2)) + ' ' + (locY + (height / 2) - space) + ' L' + ' ' + (locX + (-width / 2) + (2 * space))\n                + ' ' + (locY) + ' L' + (locX + (width / 2)) + ' ' + (locY - (height / 2) + space) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Column':\n        case 'StackingColumn':\n        case 'StackingColumn100':\n        case 'RangeColumn':\n            path = 'M' + ' ' + (locX - 3 * (width / 5)) + ' ' + (locY - (height / 5)) + ' ' + 'L' + ' ' +\n                (locX + 3 * (-width / 10)) + ' ' + (locY - (height / 5)) + ' ' + 'L' + ' ' +\n                (locX + 3 * (-width / 10)) + ' ' + (locY + (height / 2)) + ' ' + 'L' + ' ' + (locX - 3 *\n                (width / 5)) + ' ' + (locY + (height / 2)) + ' ' + 'Z' + ' ' + 'M' + ' ' +\n                (locX + (-width / 10) - (width / 20)) + ' ' + (locY - (height / 4) - (padding / 2))\n                + ' ' + 'L' + ' ' + (locX + (width / 10) + (width / 20)) + ' ' + (locY - (height / 4) -\n                (padding / 2)) + ' ' + 'L' + ' ' + (locX + (width / 10) + (width / 20)) + ' ' + (locY\n                + (height / 2)) + ' ' + 'L' + ' ' + (locX + (-width / 10) - (width / 20)) + ' ' + (locY +\n                (height / 2)) + ' ' + 'Z' + ' ' + 'M' + ' ' + (locX + 3 * (width / 10)) + ' ' + (locY) + ' ' +\n                'L' + ' ' + (locX + 3 * (width / 5)) + ' ' + (locY) + ' ' + 'L' + ' '\n                + (locX + 3 * (width / 5)) + ' ' + (locY + (height / 2)) + ' ' + 'L' + ' '\n                + (locX + 3 * (width / 10)) + ' ' + (locY + (height / 2)) + ' ' + 'Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Bar':\n        case 'StackingBar':\n        case 'StackingBar100':\n            path = 'M' + ' ' + (locX + (-width / 2) + (-padding / 4)) + ' ' + (locY - 3 * (height / 5)) + ' '\n                + 'L' + ' ' + (locX + 3 * (width / 10)) + ' ' + (locY - 3 * (height / 5)) + ' ' + 'L' + ' ' +\n                (locX + 3 * (width / 10)) + ' ' + (locY - 3 * (height / 10)) + ' ' + 'L' + ' ' +\n                (locX - (width / 2) + (-padding / 4)) + ' ' + (locY - 3 * (height / 10)) + ' ' + 'Z' + ' '\n                + 'M' + ' ' + (locX + (-width / 2) + (-padding / 4)) + ' ' + (locY - (height / 5)\n                + (padding / 20)) + ' ' + 'L' + ' ' + (locX + (width / 2) + (padding / 4)) + ' ' + (locY\n                - (height / 5) + (padding / 20)) + ' ' + 'L' + ' ' + (locX + (width / 2) + (padding / 4))\n                + ' ' + (locY + (height / 10) + (padding / 20)) + ' ' + 'L' + ' ' + (locX - (width / 2)\n                + (-padding / 4)) + ' ' + (locY + (height / 10) + (padding / 20)) + ' ' + 'Z' + ' ' + 'M'\n                + ' ' + (locX - (width / 2) + (-padding / 4)) + ' ' + (locY + (height / 5)\n                + (padding / 10)) + ' ' + 'L' + ' ' + (locX + (-width / 4)) + ' ' + (locY + (height / 5)\n                + (padding / 10)) + ' ' + 'L' + ' ' + (locX + (-width / 4)) + ' ' + (locY + (height / 2)\n                + (padding / 10)) + ' ' + 'L' + ' ' + (locX - (width / 2) + (-padding / 4))\n                + ' ' + (locY + (height / 2) + (padding / 10)) + ' ' + 'Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Spline':\n            options.fill = 'transparent';\n            path = 'M' + ' ' + (locX - (width / 2)) + ' ' + (locY + (height / 5)) + ' ' + 'Q' + ' '\n                + locX + ' ' + (locY - height) + ' ' + locX + ' ' + (locY + (height / 5))\n                + ' ' + 'M' + ' ' + locX + ' ' + (locY + (height / 5)) + ' ' + 'Q' + ' ' + (locX\n                + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' + (locX + (width / 2)) + ' '\n                + (locY - (height / 2));\n            merge(options, { 'd': path });\n            break;\n        case 'Area':\n        case 'MultiColoredArea':\n        case 'RangeArea':\n        case 'StackingArea':\n        case 'StackingArea100':\n            path = 'M' + ' ' + (locX - (width / 2) - (padding / 4)) + ' ' + (locY + (height / 2))\n                + ' ' + 'L' + ' ' + (locX + (-width / 4) + (-padding / 8)) + ' ' + (locY - (height / 2))\n                + ' ' + 'L' + ' ' + (locX) + ' ' + (locY + (height / 4)) + ' ' + 'L' + ' ' + (locX\n                + (width / 4) + (padding / 8)) + ' ' + (locY + (-height / 2) + (height / 4)) + ' '\n                + 'L' + ' ' + (locX + (height / 2) + (padding / 4)) + ' ' + (locY + (height / 2)) + ' ' + 'Z';\n            merge(options, { 'd': path });\n            break;\n        case 'SplineArea':\n            path = 'M' + ' ' + (locX - (width / 2)) + ' ' + (locY + (height / 5)) + ' ' + 'Q' + ' ' + locX\n                + ' ' + (locY - height) + ' ' + locX + ' ' + (locY + (height / 5)) + ' ' + 'Z' + ' ' + 'M'\n                + ' ' + locX + ' ' + (locY + (height / 5)) + ' ' + 'Q' + ' ' + (locX + (width / 2)) + ' '\n                + (locY + (height / 2)) + ' ' + (locX + (width / 2)) + ' '\n                + (locY - (height / 2)) + ' ' + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Pie':\n        case 'Doughnut':\n            options.stroke = 'transparent';\n            let r = Math.min(height, width) / 2;\n            path = getAccumulationLegend(locX, locY, r, height, width, shape);\n            merge(options, { 'd': path });\n            break;\n    }\n    return { renderOption: options };\n}\n/** @private */\nexport function textTrim(maxWidth, text, font) {\n    let label = text;\n    let size = measureText(text, font).width;\n    if (size > maxWidth) {\n        let textLength = text.length;\n        for (let i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth) {\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/** @private */\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/** @private */\nexport function findDirection(rX, rY, rect, arrowLocation, arrowPadding, top, bottom, left, tipX, tipY, tipRadius) {\n    let direction = '';\n    let startX = rect.x;\n    let startY = rect.y;\n    let width = rect.x + rect.width;\n    let height = rect.y + rect.height;\n    tipRadius = tipRadius ? tipRadius : 0;\n    if (top) {\n        direction = direction.concat('M' + ' ' + (startX) + ' ' + (startY + rY) + ' Q ' + startX + ' '\n            + startY + ' ' + (startX + rX) + ' ' + startY + ' ' +\n            ' L' + ' ' + (width - rX) + ' ' + (startY) + ' Q ' + width + ' '\n            + startY + ' ' + (width) + ' ' + (startY + rY));\n        direction = direction.concat(' L' + ' ' + (width) + ' ' + (height - rY) + ' Q ' + width + ' '\n            + (height) + ' ' + (width - rX) + ' ' + (height));\n        if (arrowPadding !== 0) {\n            direction = direction.concat(' L' + ' ' + (arrowLocation.x + arrowPadding / 2) + ' ' + (height));\n            direction = direction.concat(' L' + ' ' + (tipX + tipRadius) + ' ' + (height + arrowPadding - tipRadius));\n            direction += ' Q' + ' ' + (tipX) + ' ' + (height + arrowPadding) + ' ' + (tipX - tipRadius) +\n                ' ' + (height + arrowPadding - tipRadius);\n        }\n        if ((arrowLocation.x - arrowPadding / 2) > startX) {\n            direction = direction.concat(' L' + ' ' + (arrowLocation.x - arrowPadding / 2) + ' ' + height +\n                ' L' + ' ' + (startX + rX) + ' ' + height + ' Q ' + startX + ' '\n                + height + ' ' + (startX) + ' ' + (height - rY) + ' z');\n        }\n        else {\n            if (arrowPadding === 0) {\n                direction = direction.concat(' L' + ' ' + (startX + rX) + ' ' + height + ' Q ' + startX + ' '\n                    + height + ' ' + (startX) + ' ' + (height - rY) + ' z');\n            }\n            else {\n                direction = direction.concat(' L' + ' ' + (startX) + ' ' + (height + rY) + ' z');\n            }\n        }\n    }\n    else if (bottom) {\n        direction = direction.concat('M' + ' ' + (startX) + ' ' + (startY + rY) + ' Q ' + startX + ' '\n            + (startY) + ' ' + (startX + rX) + ' ' + (startY) + ' L' + ' ' + (arrowLocation.x - arrowPadding / 2) + ' ' + (startY));\n        direction = direction.concat(' L' + ' ' + (tipX - tipRadius) + ' ' + (arrowLocation.y + tipRadius));\n        direction += ' Q' + ' ' + (tipX) + ' ' + (arrowLocation.y) + ' ' + (tipX + tipRadius) + ' ' + (arrowLocation.y + tipRadius);\n        direction = direction.concat(' L' + ' ' + (arrowLocation.x + arrowPadding / 2) + ' ' + (startY) + ' L' + ' '\n            + (width - rX) + ' ' + (startY) + ' Q ' + (width) + ' ' + (startY) + ' ' + (width) + ' ' + (startY + rY));\n        direction = direction.concat(' L' + ' ' + (width) + ' ' + (height - rY) + ' Q ' + (width) + ' '\n            + (height) + ' ' + (width - rX) + ' ' + (height) +\n            ' L' + ' ' + (startX + rX) + ' ' + (height) + ' Q ' + (startX) + ' '\n            + (height) + ' ' + (startX) + ' ' + (height - rY) + ' z');\n    }\n    else if (left) {\n        direction = direction.concat('M' + ' ' + (startX) + ' ' + (startY + rY) + ' Q ' + startX + ' '\n            + (startY) + ' ' + (startX + rX) + ' ' + (startY));\n        direction = direction.concat(' L' + ' ' + (width - rX) + ' ' + (startY) + ' Q ' + (width) + ' '\n            + (startY) + ' ' + (width) + ' ' + (startY + rY) + ' L' + ' ' + (width) + ' ' + (arrowLocation.y - arrowPadding / 2));\n        direction = direction.concat(' L' + ' ' + (width + arrowPadding - tipRadius) + ' ' + (tipY - tipRadius));\n        direction += ' Q ' + (width + arrowPadding) + ' ' + (tipY) + ' ' + (width + arrowPadding - tipRadius) + ' ' + (tipY + tipRadius);\n        direction = direction.concat(' L' + ' ' + (width) + ' ' + (arrowLocation.y + arrowPadding / 2) +\n            ' L' + ' ' + (width) + ' ' + (height - rY) + ' Q ' + width + ' ' + (height) + ' ' + (width - rX) + ' ' + (height));\n        direction = direction.concat(' L' + ' ' + (startX + rX) + ' ' + (height) + ' Q ' + startX + ' '\n            + (height) + ' ' + (startX) + ' ' + (height - rY) + ' z');\n    }\n    else {\n        direction = direction.concat('M' + ' ' + (startX + rX) + ' ' + (startY) + ' Q ' + (startX) + ' '\n            + (startY) + ' ' + (startX) + ' ' + (startY + rY) + ' L' + ' ' + (startX) + ' ' + (arrowLocation.y - arrowPadding / 2));\n        direction = direction.concat(' L' + ' ' + (startX - arrowPadding + tipRadius) + ' ' + (tipY - tipRadius));\n        direction += ' Q ' + (startX - arrowPadding) + ' ' + (tipY) + ' ' + (startX - arrowPadding + tipRadius) + ' ' + (tipY + tipRadius);\n        direction = direction.concat(' L' + ' ' + (startX) + ' ' + (arrowLocation.y + arrowPadding / 2) +\n            ' L' + ' ' + (startX) + ' ' + (height - rY) + ' Q ' + startX + ' '\n            + (height) + ' ' + (startX + rX) + ' ' + (height));\n        direction = direction.concat(' L' + ' ' + (width - rX) + ' ' + (height) + ' Q ' + width + ' '\n            + (height) + ' ' + (width) + ' ' + (height - rY) +\n            ' L' + ' ' + (width) + ' ' + (startY + rY) + ' Q ' + width + ' '\n            + (startY) + ' ' + (width - rX) + ' ' + (startY) + ' z');\n    }\n    return direction;\n}\n/** @private */\nexport function textElement(options, font, color, parent, isMinus = false) {\n    let renderOptions = {};\n    let htmlObject;\n    let tspanElement;\n    let renderer = new SvgRenderer('');\n    let text;\n    let height;\n    renderOptions = {\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color,\n        'font-size': font.size,\n        'font-style': font.fontStyle,\n        'font-family': font.fontFamily,\n        'font-weight': font.fontWeight,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine\n    };\n    text = typeof options.text === 'string' ? options.text : isMinus ? options.text[options.text.length - 1] : options.text[0];\n    htmlObject = renderer.createText(renderOptions, text);\n    if (typeof options.text !== 'string' && options.text.length > 1) {\n        for (let i = 1, len = options.text.length; i < len; i++) {\n            height = (measureText(options.text[i], font).height);\n            tspanElement = renderer.createTSpan({\n                'x': options.x, 'id': options.id,\n                'y': (options.y) + ((isMinus) ? -(i * height) : (i * height))\n            }, isMinus ? options.text[options.text.length - (i + 1)] : options.text[i]);\n            htmlObject.appendChild(tspanElement);\n        }\n    }\n    parent.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Method to calculate the width and height of the chart\n */\nexport function calculateSize(chart) {\n    let containerWidth = chart.element.clientWidth;\n    let containerHeight = chart.element.clientHeight;\n    chart.availableSize = new Size(stringToNumber(chart.width, containerWidth) || containerWidth || 600, stringToNumber(chart.height, containerHeight) || containerHeight || 450);\n}\nexport function createSvg(chart) {\n    chart.renderer = new SvgRenderer(chart.element.id);\n    calculateSize(chart);\n    chart.svgObject = chart.renderer.createSvg({\n        id: chart.element.id + '_svg',\n        width: chart.availableSize.width,\n        height: chart.availableSize.height\n    });\n}\n/**\n * To calculate chart title and height\n * @param title\n * @param style\n * @param width\n */\nexport function getTitle(title, style, width) {\n    let titleCollection = [];\n    switch (style.textOverflow) {\n        case 'Wrap':\n            titleCollection = textWrap(title, width, style);\n            break;\n        case 'Trim':\n            titleCollection.push(textTrim(width, title, style));\n            break;\n        default:\n            titleCollection.push(title);\n            break;\n    }\n    return titleCollection;\n}\n/**\n * Method to calculate x position of title\n */\nexport function titlePositionX(chartSize, leftPadding, rightPadding, titleStyle) {\n    let positionX;\n    if (titleStyle.textAlignment === 'Near') {\n        positionX = leftPadding;\n    }\n    else if (titleStyle.textAlignment === 'Center') {\n        positionX = chartSize.width / 2;\n    }\n    else {\n        positionX = chartSize.width - rightPadding;\n    }\n    return positionX;\n}\n/**\n * Method to find new text and element size based on textOverflow\n */\nexport function textWrap(currentLabel, maximumWidth, font) {\n    let textCollection = currentLabel.split(' ');\n    let label = '';\n    let labelCollection = [];\n    let text;\n    for (let i = 0, len = textCollection.length; i < len; i++) {\n        text = textCollection[i];\n        if (measureText(label.concat(text), font).width < maximumWidth) {\n            label = label.concat((label === '' ? '' : ' ') + text);\n        }\n        else {\n            if (label !== '') {\n                labelCollection.push(textTrim(maximumWidth, label, font));\n                label = text;\n            }\n            else {\n                labelCollection.push(textTrim(maximumWidth, text, font));\n                text = '';\n            }\n        }\n        if (label && i === len - 1) {\n            labelCollection.push(textTrim(maximumWidth, label, font));\n        }\n    }\n    return labelCollection;\n}\n/** @private */\nexport class CustomizeOption {\n    constructor(id) {\n        this.id = id;\n    }\n}\n/** @private */\nexport class StackValues {\n    constructor(startValue, endValue) {\n        this.startValues = startValue;\n        this.endValues = endValue;\n    }\n}\n/** @private */\nexport class TextOption extends CustomizeOption {\n    constructor(id, x, y, anchor, text, transform = '', baseLine) {\n        super(id);\n        this.transform = '';\n        this.baseLine = 'auto';\n        this.x = x;\n        this.y = y;\n        this.anchor = anchor;\n        this.text = text;\n        this.transform = transform;\n        this.baseLine = baseLine;\n    }\n}\n/** @private */\nexport class PathOption extends CustomizeOption {\n    constructor(id, fill, width, color, opacity, dashArray, d) {\n        super(id);\n        this.opacity = opacity;\n        this.fill = fill;\n        this.stroke = color;\n        this['stroke-width'] = width;\n        this['stroke-dasharray'] = dashArray;\n        this.d = d;\n    }\n}\n/** @private */\nexport class RectOption extends PathOption {\n    constructor(id, fill, border, opacity, rect, rx, ry, transform, dashArray) {\n        super(id, fill, border.width, border.color, opacity, dashArray);\n        this.y = rect.y;\n        this.x = rect.x;\n        this.height = rect.height;\n        this.width = rect.width;\n        this.rx = rx ? rx : 0;\n        this.ry = ry ? ry : 0;\n        this.transform = transform ? transform : '';\n    }\n}\n/** @private */\nexport class CircleOption extends PathOption {\n    constructor(id, fill, border, opacity, cx, cy, r) {\n        super(id, fill, border.width, border.color, opacity);\n        this.cy = cy;\n        this.cx = cx;\n        this.r = r;\n    }\n}\n/** @private */\nexport class PolygonOption {\n    constructor(id, points, fill) {\n        this.id = id;\n        this.points = points;\n        this.fill = fill;\n    }\n}\n/** @private */\nexport class Size {\n    constructor(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n}\n/** @private */\nexport class Rect {\n    constructor(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n}\n/** @private */\nexport class ChartLocation {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n}\n/** @private */\nexport class Thickness {\n    constructor(left, right, top, bottom) {\n        this.left = left;\n        this.right = right;\n        this.top = top;\n        this.bottom = bottom;\n    }\n}\n/** @private */\nexport class ColorValue {\n    constructor(r, g, b) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n    }\n}\n/** @private */\nexport class PointData {\n    constructor(point, series, index = 0) {\n        this.point = point;\n        this.series = series;\n        this.lierIndex = index;\n    }\n}\n/** @private */\nexport class AccPointData {\n    constructor(point, series, index = 0) {\n        this.point = point;\n        this.series = series;\n    }\n}\n/** @private */\nexport class ControlPoints {\n    constructor(controlPoint1, controlPoint2) {\n        this.controlPoint1 = controlPoint1;\n        this.controlPoint2 = controlPoint2;\n    }\n}\n","/**\n * Numeric Range.\n * @private\n */\nexport class DoubleRange {\n    //private mIsEmpty: boolean;\n    /** @private */\n    get start() {\n        return this.mStart;\n    }\n    /** @private */\n    get end() {\n        return this.mEnd;\n    }\n    /*\n      get isEmpty(): boolean {\n         return this.mIsEmpty;\n     }*/\n    /** @private */\n    get delta() {\n        return (this.mEnd - this.mStart);\n    }\n    /** @private */\n    get median() {\n        return this.mStart + (this.mEnd - this.mStart) / 2;\n    }\n    constructor(start, end) {\n        /*\n          if (!isNaN(start) && !isNaN(end)) {\n           this.mIsEmpty = true;\n          } else {\n              this.mIsEmpty = false;\n          }*/\n        if (start < end) {\n            this.mStart = start;\n            this.mEnd = end;\n        }\n        else {\n            this.mStart = end;\n            this.mEnd = start;\n        }\n    }\n}\n","import { getMinPointsDelta } from '../../common/utils/helper';\nimport { DoubleRange } from '../utils/double-range';\nimport { withIn, logBase } from '../../common/utils/helper';\n/**\n * Numeric module is used to render numeric axis.\n */\nexport class Double {\n    /**\n     * Constructor for the dateTime module.\n     * @private\n     */\n    constructor(chart) {\n        this.chart = chart;\n    }\n    /**\n     * Numeric Nice Interval for the axis.\n     * @private\n     */\n    calculateNumericNiceInterval(axis, delta, size) {\n        let actualDesiredIntervalsCount = axis.getActualDesiredIntervalsCount(size);\n        let niceInterval = delta / actualDesiredIntervalsCount;\n        if (axis.desiredIntervals != null) {\n            return niceInterval;\n        }\n        let minInterval = Math.pow(10, Math.floor(logBase(niceInterval, 10)));\n        for (let interval of axis.intervalDivs) {\n            let currentInterval = minInterval * interval;\n            if (actualDesiredIntervalsCount < (delta / currentInterval)) {\n                break;\n            }\n            niceInterval = currentInterval;\n        }\n        return niceInterval;\n    }\n    /**\n     * Actual Range for the axis.\n     * @private\n     */\n    getActualRange(axis, size) {\n        this.initializeDoubleRange(axis);\n        axis.actualRange.interval = axis.interval || this.calculateNumericNiceInterval(axis, axis.doubleRange.delta, size);\n        axis.actualRange.min = axis.doubleRange.start;\n        axis.actualRange.max = axis.doubleRange.end;\n    }\n    /**\n     * Range for the axis.\n     * @private\n     */\n    initializeDoubleRange(axis) {\n        //Axis Min\n        if (axis.minimum !== null) {\n            this.min = axis.minimum;\n        }\n        else if (this.min === null || this.min === Number.POSITIVE_INFINITY) {\n            this.min = 0;\n        }\n        // Axis Max\n        if (axis.maximum !== null) {\n            this.max = axis.maximum;\n        }\n        else if (this.max === null || this.max === Number.NEGATIVE_INFINITY) {\n            this.max = 5;\n        }\n        if (this.min === this.max) {\n            this.max = axis.valueType.indexOf('Category') > -1 ? this.max : this.min + 1;\n        }\n        axis.doubleRange = new DoubleRange(this.min, this.max);\n        axis.actualRange = {};\n    }\n    /**\n     * The function to calculate the range and labels for the axis.\n     * @return {void}\n     * @private\n     */\n    calculateRangeAndInterval(size, axis) {\n        this.calculateRange(axis, size);\n        this.getActualRange(axis, size);\n        this.applyRangePadding(axis, size);\n        this.calculateVisibleLabels(axis, this.chart);\n    }\n    /**\n     * Calculate Range for the axis.\n     * @private\n     */\n    calculateRange(axis, size) {\n        /*! Generate axis range */\n        let series;\n        this.min = null;\n        this.max = null;\n        if (!axis.setRange()) {\n            for (let series of axis.series) {\n                if (!series.visible) {\n                    continue;\n                }\n                this.paddingInterval = 0;\n                if ((series.type.indexOf('Column') > -1 && axis.orientation === 'Horizontal')\n                    || (series.type.indexOf('Bar') > -1 && axis.orientation === 'Vertical')) {\n                    if ((series.xAxis.valueType === 'Double' || series.xAxis.valueType === 'DateTime')\n                        && series.xAxis.rangePadding === 'Auto') {\n                        this.paddingInterval = getMinPointsDelta(series.xAxis, axis.series) / 2;\n                    }\n                }\n                //For xRange\n                if (axis.orientation === 'Horizontal') {\n                    if (this.chart.requireInvertedAxis) {\n                        this.findMinMax(series.yMin, series.yMax);\n                    }\n                    else {\n                        this.findMinMax(series.xMin - this.paddingInterval, series.xMax + this.paddingInterval);\n                    }\n                }\n                // For yRange\n                if (axis.orientation === 'Vertical') {\n                    if (this.chart.requireInvertedAxis) {\n                        this.findMinMax(series.xMin - this.paddingInterval, series.xMax + this.paddingInterval);\n                    }\n                    else {\n                        this.findMinMax(series.yMin, series.yMax);\n                    }\n                }\n            }\n        }\n    }\n    findMinMax(min, max) {\n        if (this.min === null || this.min > min) {\n            this.min = min;\n        }\n        if (this.max === null || this.max < max) {\n            this.max = max;\n        }\n    }\n    /**\n     * Apply padding for the range.\n     * @private\n     */\n    applyRangePadding(axis, size) {\n        let range;\n        let start = axis.actualRange.min;\n        let end = axis.actualRange.max;\n        if (!axis.setRange()) {\n            let interval = axis.actualRange.interval;\n            let padding = axis.getRangePadding(this.chart);\n            if (padding === 'Additional' || padding === 'Round') {\n                this.findAdditional(axis, start, end, interval);\n            }\n            else if (padding === 'Normal') {\n                this.findNormal(axis, start, end, interval, size);\n            }\n            else {\n                this.updateActualRange(axis, start, end, interval);\n            }\n        }\n        axis.actualRange.delta = axis.actualRange.max - axis.actualRange.min;\n        this.calculateVisibleRange(size, axis);\n    }\n    updateActualRange(axis, minimum, maximum, interval) {\n        axis.actualRange.min = axis.minimum != null ? axis.minimum : minimum;\n        axis.actualRange.max = axis.maximum != null ? axis.maximum : maximum;\n        axis.actualRange.interval = axis.interval != null ? axis.interval : interval;\n    }\n    findAdditional(axis, start, end, interval) {\n        let minimum;\n        let maximum;\n        minimum = Math.floor(start / interval) * interval;\n        maximum = Math.ceil(end / interval) * interval;\n        if (axis.rangePadding === 'Additional') {\n            minimum -= interval;\n            maximum += interval;\n        }\n        this.updateActualRange(axis, minimum, maximum, interval);\n    }\n    findNormal(axis, start, end, interval, size) {\n        let remaining;\n        let minimum;\n        let maximum;\n        let startValue = start;\n        if (start < 0) {\n            startValue = 0;\n            minimum = start + (start / 20);\n            remaining = interval + (minimum % interval);\n            if ((0.365 * interval) >= remaining) {\n                minimum -= interval;\n            }\n            if (minimum % interval < 0) {\n                minimum = (minimum - interval) - (minimum % interval);\n            }\n        }\n        else {\n            minimum = start < ((5.0 / 6.0) * end) ? 0 : (start - (end - start) / 2);\n            if (minimum % interval > 0) {\n                minimum -= (minimum % interval);\n            }\n        }\n        maximum = (end > 0) ? (end + (end - startValue) / 20) : (end - (end - startValue) / 20);\n        remaining = interval - (maximum % interval);\n        if ((0.365 * interval) >= remaining) {\n            maximum += interval;\n        }\n        if (maximum % interval > 0) {\n            maximum = (maximum + interval) - (maximum % interval);\n        }\n        axis.doubleRange = new DoubleRange(minimum, maximum);\n        if (minimum === 0) {\n            interval = this.calculateNumericNiceInterval(axis, axis.doubleRange.delta, size);\n            maximum = Math.ceil(maximum / interval) * interval;\n        }\n        this.updateActualRange(axis, minimum, maximum, interval);\n    }\n    /**\n     * Calculate visible range for axis.\n     * @private\n     */\n    calculateVisibleRange(size, axis) {\n        axis.visibleRange = {\n            max: axis.actualRange.max, min: axis.actualRange.min,\n            delta: axis.actualRange.delta, interval: axis.actualRange.interval\n        };\n        if (axis.zoomFactor < 1 || axis.zoomPosition > 0) {\n            axis.calculateVisibleRange(size);\n            axis.visibleRange.interval = (axis.enableAutoIntervalOnZooming && axis.valueType !== 'Category') ?\n                this.calculateNumericNiceInterval(axis, axis.doubleRange.delta, size)\n                : axis.visibleRange.interval;\n        }\n        axis.triggerRangeRender(this.chart, axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.interval);\n    }\n    /**\n     * Calculate label for the axis.\n     * @private\n     */\n    calculateVisibleLabels(axis, chart) {\n        /*! Generate axis labels */\n        axis.visibleLabels = [];\n        let tempInterval = axis.visibleRange.min;\n        if (axis.zoomFactor < 1 || axis.zoomPosition > 0 || this.paddingInterval) {\n            tempInterval = axis.visibleRange.min - (axis.visibleRange.min % axis.visibleRange.interval);\n        }\n        let format = this.getFormat(axis);\n        let isCustom = format.match('{value}') !== null;\n        axis.format = chart.intl.getNumberFormat({\n            format: isCustom ? '' : format,\n            useGrouping: chart.useGroupingSeparator\n        });\n        axis.startLabel = axis.format(axis.visibleRange.min);\n        axis.endLabel = axis.format(axis.visibleRange.max);\n        for (; tempInterval <= axis.visibleRange.max; tempInterval += axis.visibleRange.interval) {\n            if (withIn(tempInterval, axis.visibleRange)) {\n                axis.triggerLabelRender(chart, tempInterval, this.formatValue(axis, isCustom, format, tempInterval), axis.labelStyle);\n            }\n        }\n        axis.getMaxLabelWidth(chart);\n    }\n    /**\n     * Format of the axis label.\n     * @private\n     */\n    getFormat(axis) {\n        if (axis.labelFormat) {\n            return axis.labelFormat;\n        }\n        return axis.isStack100 ? '{value}%' : '';\n    }\n    /**\n     * Formatted the axis label.\n     * @private\n     */\n    formatValue(axis, isCustom, format, tempInterval) {\n        return isCustom ? format.replace('{value}', axis.format(tempInterval))\n            : axis.format(tempInterval);\n    }\n}\n","/**\n * Specifies the chart constant value\n */\n/** @private */\nexport const loaded = 'loaded';\n/** @private */\nexport const load = 'load';\n/** @private */\nexport const animationComplete = 'animationComplete';\n/** @private */\nexport const legendRender = 'legendRender';\n/** @private */\nexport const textRender = 'textRender';\n/** @private */\nexport const pointRender = 'pointRender';\n/** @private */\nexport const seriesRender = 'seriesRender';\n/** @private */\nexport const axisLabelRender = 'axisLabelRender';\n/** @private */\nexport const axisRangeCalculated = 'axisRangeCalculated';\n/** @private */\nexport const axisMultiLabelRender = 'axisMultiLabelRender';\n/** @private */\nexport const tooltipRender = 'tooltipRender';\n/** @private */\nexport const chartMouseMove = 'chartMouseMove';\n/** @private */\nexport const chartMouseClick = 'chartMouseClick';\n/** @private */\nexport const pointClick = 'pointClick';\n/** @private */\nexport const pointMove = 'pointMove';\n/** @private */\nexport const chartMouseLeave = 'chartMouseLeave';\n/** @private */\nexport const chartMouseDown = 'chartMouseDown';\n/** @private */\nexport const chartMouseUp = 'chartMouseUp';\n/** @private */\nexport const zoomComplete = 'zoomComplete';\n/** @private */\nexport const dragComplete = 'dragComplete';\n/** @private */\nexport const resized = 'resized';\n/** @private */\nexport const beforePrint = 'beforePrint';\n/** @private */\nexport const annotationRender = 'annotationRender';\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Complex, Collection } from '@syncfusion/ej2-base';\nimport { Theme } from '../../common/model/theme';\nimport { Font, Border } from '../../common/model/base';\n/**\n * Configures the Annotation for chart.\n */\nexport class ChartAnnotationSettings extends ChildProperty {\n}\n__decorate([\n    Property('0')\n], ChartAnnotationSettings.prototype, \"x\", void 0);\n__decorate([\n    Property('0')\n], ChartAnnotationSettings.prototype, \"y\", void 0);\n__decorate([\n    Property(null)\n], ChartAnnotationSettings.prototype, \"content\", void 0);\n__decorate([\n    Property('Center')\n], ChartAnnotationSettings.prototype, \"horizontalAlignment\", void 0);\n__decorate([\n    Property('Pixel')\n], ChartAnnotationSettings.prototype, \"coordinateUnits\", void 0);\n__decorate([\n    Property('Chart')\n], ChartAnnotationSettings.prototype, \"region\", void 0);\n__decorate([\n    Property('Middle')\n], ChartAnnotationSettings.prototype, \"verticalAlignment\", void 0);\n__decorate([\n    Property(null)\n], ChartAnnotationSettings.prototype, \"xAxisName\", void 0);\n__decorate([\n    Property(null)\n], ChartAnnotationSettings.prototype, \"yAxisName\", void 0);\n__decorate([\n    Property(null)\n], ChartAnnotationSettings.prototype, \"description\", void 0);\n/**\n * label border properties.\n */\nexport class LabelBorder extends ChildProperty {\n}\n__decorate([\n    Property('')\n], LabelBorder.prototype, \"color\", void 0);\n__decorate([\n    Property(1)\n], LabelBorder.prototype, \"width\", void 0);\n__decorate([\n    Property('Rectangle')\n], LabelBorder.prototype, \"type\", void 0);\n/**\n * categories for multi level labels\n */\nexport class MultiLevelCategories extends ChildProperty {\n}\n__decorate([\n    Property(null)\n], MultiLevelCategories.prototype, \"start\", void 0);\n__decorate([\n    Property(null)\n], MultiLevelCategories.prototype, \"end\", void 0);\n__decorate([\n    Property('')\n], MultiLevelCategories.prototype, \"text\", void 0);\n__decorate([\n    Property(null)\n], MultiLevelCategories.prototype, \"maximumTextWidth\", void 0);\n/**\n * Strip line properties\n */\nexport class StripLineSettings extends ChildProperty {\n}\n__decorate([\n    Property(true)\n], StripLineSettings.prototype, \"visible\", void 0);\n__decorate([\n    Property(false)\n], StripLineSettings.prototype, \"startFromAxis\", void 0);\n__decorate([\n    Property(null)\n], StripLineSettings.prototype, \"start\", void 0);\n__decorate([\n    Property(null)\n], StripLineSettings.prototype, \"end\", void 0);\n__decorate([\n    Property(null)\n], StripLineSettings.prototype, \"size\", void 0);\n__decorate([\n    Property('#808080')\n], StripLineSettings.prototype, \"color\", void 0);\n__decorate([\n    Complex({ color: 'transparent', width: 1 }, Border)\n], StripLineSettings.prototype, \"border\", void 0);\n__decorate([\n    Property('')\n], StripLineSettings.prototype, \"text\", void 0);\n__decorate([\n    Property(null)\n], StripLineSettings.prototype, \"rotation\", void 0);\n__decorate([\n    Property('Middle')\n], StripLineSettings.prototype, \"horizontalAlignment\", void 0);\n__decorate([\n    Property('Middle')\n], StripLineSettings.prototype, \"verticalAlignment\", void 0);\n__decorate([\n    Complex(Theme.stripLineLabelFont, Font)\n], StripLineSettings.prototype, \"textStyle\", void 0);\n__decorate([\n    Property('Behind')\n], StripLineSettings.prototype, \"zIndex\", void 0);\n__decorate([\n    Property(1)\n], StripLineSettings.prototype, \"opacity\", void 0);\n/**\n * MultiLevelLabels properties\n */\nexport class MultiLevelLabels extends ChildProperty {\n}\n__decorate([\n    Property('Center')\n], MultiLevelLabels.prototype, \"alignment\", void 0);\n__decorate([\n    Property('Wrap')\n], MultiLevelLabels.prototype, \"overflow\", void 0);\n__decorate([\n    Complex(Theme.axisLabelFont, Font)\n], MultiLevelLabels.prototype, \"textStyle\", void 0);\n__decorate([\n    Complex({ color: null, width: 1, type: 'Rectangle' }, LabelBorder)\n], MultiLevelLabels.prototype, \"border\", void 0);\n__decorate([\n    Collection([], MultiLevelCategories)\n], MultiLevelLabels.prototype, \"categories\", void 0);\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection, extend } from '@syncfusion/ej2-base';\nimport { Font, Border } from '../../common/model/base';\nimport { Size, Rect, measureText, rotateTextSize, firstToLowerCase, valueToCoefficient, inside } from '../../common/utils/helper';\nimport { DoubleRange } from '../utils/double-range';\nimport { Double } from '../axis/double-axis';\nimport { Theme } from '../../common/model/theme';\nimport { axisLabelRender, axisRangeCalculated } from '../../common/model/constants';\nimport { StripLineSettings, MultiLevelLabels, LabelBorder } from '../model/chart-base';\nimport { textWrap } from '../../common/utils/helper';\nconst axisPadding = 10;\n/**\n * Configures the `rows` of the chart.\n */\nexport class Row extends ChildProperty {\n    constructor() {\n        /**\n         * The height of the row as a string accept input both as '100px' and '100%'.\n         * If specified as '100%, row renders to the full height of its chart.\n         * @default '100%'\n         */\n        super(...arguments);\n        /** @private */\n        this.axes = [];\n        /** @private */\n        this.nearSizes = [];\n        /** @private */\n        this.farSizes = [];\n    }\n    /**\n     * Measure the row size\n     * @return {void}\n     * @private\n     */\n    computeSize(axis, clipRect) {\n        let width = 0;\n        let innerPadding = 5;\n        if (axis.visible) {\n            width += (axis.findTickSize(axis.crossInAxis) +\n                axis.findLabelSize(axis.crossInAxis, innerPadding) + axis.lineStyle.width / 2);\n        }\n        if (axis.opposedPosition) {\n            this.farSizes.push(width);\n        }\n        else {\n            this.nearSizes.push(width);\n        }\n    }\n}\n__decorate([\n    Property('100%')\n], Row.prototype, \"height\", void 0);\n__decorate([\n    Complex({}, Border)\n], Row.prototype, \"border\", void 0);\n/**\n * Configures the `columns` of the chart.\n */\nexport class Column extends ChildProperty {\n    constructor() {\n        /**\n         * The width of the column as a string accepts input both as like '100px' or '100%'.\n         * If specified as '100%, column renders to the full width of its chart.\n         * @default '100%'\n         */\n        super(...arguments);\n        /** @private */\n        this.axes = [];\n        /** @private */\n        this.nearSizes = [];\n        /** @private */\n        this.farSizes = [];\n        /** @private */\n        this.padding = 0;\n    }\n    /**\n     * Measure the column size\n     * @return {void}\n     * @private\n     */\n    computeSize(axis, clipRect) {\n        let height = 0;\n        let innerPadding = 5;\n        if (axis.visible) {\n            height += (axis.findTickSize(axis.crossInAxis) +\n                axis.findLabelSize(axis.crossInAxis, innerPadding) + axis.lineStyle.width / 2);\n        }\n        if (axis.opposedPosition) {\n            this.farSizes.push(height);\n        }\n        else {\n            this.nearSizes.push(height);\n        }\n    }\n}\n__decorate([\n    Property('100%')\n], Column.prototype, \"width\", void 0);\n__decorate([\n    Complex({}, Border)\n], Column.prototype, \"border\", void 0);\n/**\n * Configures the major grid lines in the `axis`.\n */\nexport class MajorGridLines extends ChildProperty {\n}\n__decorate([\n    Property(1)\n], MajorGridLines.prototype, \"width\", void 0);\n__decorate([\n    Property('')\n], MajorGridLines.prototype, \"dashArray\", void 0);\n__decorate([\n    Property(null)\n], MajorGridLines.prototype, \"color\", void 0);\n/**\n * Configures the minor grid lines in the `axis`.\n */\nexport class MinorGridLines extends ChildProperty {\n}\n__decorate([\n    Property(0.7)\n], MinorGridLines.prototype, \"width\", void 0);\n__decorate([\n    Property('')\n], MinorGridLines.prototype, \"dashArray\", void 0);\n__decorate([\n    Property(null)\n], MinorGridLines.prototype, \"color\", void 0);\n/**\n * Configures the axis line of a chart.\n */\nexport class AxisLine extends ChildProperty {\n}\n__decorate([\n    Property(1)\n], AxisLine.prototype, \"width\", void 0);\n__decorate([\n    Property('')\n], AxisLine.prototype, \"dashArray\", void 0);\n__decorate([\n    Property(null)\n], AxisLine.prototype, \"color\", void 0);\n/**\n * Configures the major tick lines.\n */\nexport class MajorTickLines extends ChildProperty {\n}\n__decorate([\n    Property(1)\n], MajorTickLines.prototype, \"width\", void 0);\n__decorate([\n    Property(5)\n], MajorTickLines.prototype, \"height\", void 0);\n__decorate([\n    Property(null)\n], MajorTickLines.prototype, \"color\", void 0);\n/**\n * Configures the minor tick lines.\n */\nexport class MinorTickLines extends ChildProperty {\n}\n__decorate([\n    Property(0.7)\n], MinorTickLines.prototype, \"width\", void 0);\n__decorate([\n    Property(5)\n], MinorTickLines.prototype, \"height\", void 0);\n__decorate([\n    Property(null)\n], MinorTickLines.prototype, \"color\", void 0);\n/**\n * Configures the crosshair ToolTip.\n */\nexport class CrosshairTooltip extends ChildProperty {\n}\n__decorate([\n    Property(false)\n], CrosshairTooltip.prototype, \"enable\", void 0);\n__decorate([\n    Property(null)\n], CrosshairTooltip.prototype, \"fill\", void 0);\n__decorate([\n    Complex(Theme.crosshairLabelFont, Font)\n], CrosshairTooltip.prototype, \"textStyle\", void 0);\n/**\n * Configures the axes in the chart.\n */\nexport class Axis extends ChildProperty {\n    constructor() {\n        /**\n         * Options to customize the axis label.\n         */\n        super(...arguments);\n        /** @private */\n        this.visibleLabels = [];\n        /** @private */\n        this.series = [];\n        /** @private */\n        this.rect = new Rect(undefined, undefined, 0, 0);\n        /** @private */\n        this.axisBottomLine = null;\n        /** @private */\n        this.intervalDivs = [10, 5, 2, 1];\n        /** @private */\n        this.angle = this.labelRotation;\n        /** @private */\n        this.isStack100 = false;\n        /** @private */\n        this.crossAt = null;\n        /** @private */\n        this.updatedRect = null;\n        /** @private */\n        this.multiLevelLabelHeight = 0;\n    }\n    /**\n     * The function used to find tick size.\n     * @return {number}\n     * @private\n     */\n    findTickSize(crossAxis) {\n        if (this.tickPosition === 'Inside') {\n            return 0;\n        }\n        if (crossAxis && (!crossAxis.visibleRange || this.isInside(crossAxis.visibleRange))) {\n            return 0;\n        }\n        return this.majorTickLines.height;\n    }\n    /**\n     * The function used to find axis position.\n     * @return {number}\n     * @private\n     */\n    isInside(range) {\n        return (inside(this.crossAt, range) ||\n            (!this.opposedPosition && this.crossAt >= range.max) || (this.opposedPosition && this.crossAt <= range.min));\n    }\n    /**\n     * The function used to find label Size.\n     * @return {number}\n     * @private\n     */\n    findLabelSize(crossAxis, innerPadding) {\n        let titleSize = 0;\n        if (this.title) {\n            titleSize = measureText(this.title, this.titleStyle).height + innerPadding;\n        }\n        if (this.labelPosition === 'Inside') {\n            return titleSize + innerPadding;\n        }\n        let diff;\n        let value;\n        let labelSize = titleSize + innerPadding + axisPadding +\n            ((this.orientation === 'Vertical') ? this.maxLabelSize.width : this.maxLabelSize.height) + this.multiLevelLabelHeight;\n        if (crossAxis && this.placeNextToAxisLine) {\n            let range = crossAxis.visibleRange;\n            let size = (crossAxis.orientation === 'Horizontal') ? crossAxis.rect.width : crossAxis.rect.height;\n            if (!range || !size) {\n                return 0;\n            }\n            else if (this.isInside(range)) {\n                value = this.findDifference(crossAxis);\n                diff = (value) * (size / range.delta);\n                diff = (value) * ((size - (diff < labelSize ? (labelSize - diff) : 0)) / range.delta);\n                labelSize = (diff < labelSize) ? (labelSize - diff) : 0;\n            }\n        }\n        return labelSize;\n    }\n    /**\n     * The function used to find axis position.\n     * @return {number}\n     * @private\n     */\n    updateCrossValue(chart) {\n        let value = this.crossAt;\n        if (value === null || !this.isInside(this.crossInAxis.visibleRange)) {\n            this.updatedRect = this.rect;\n            return null;\n        }\n        let range = this.crossInAxis.visibleRange;\n        if (!this.opposedPosition) {\n            if (this.crossAt > range.max) {\n                value = range.max;\n            }\n        }\n        else {\n            if (this.crossAt < range.min) {\n                value = range.min;\n            }\n        }\n        this.updatedRect = extend({}, this.rect, null, true);\n        if (this.orientation === 'Horizontal') {\n            value = this.crossInAxis.rect.height - (valueToCoefficient(value, this.crossInAxis) * this.crossInAxis.rect.height);\n            this.updatedRect.y = this.crossInAxis.rect.y + value;\n        }\n        else {\n            value = valueToCoefficient(value, this.crossInAxis) * this.crossInAxis.rect.width;\n            this.updatedRect.x = this.crossInAxis.rect.x + value;\n        }\n    }\n    findDifference(crossAxis) {\n        let value = 0;\n        if (this.opposedPosition) {\n            value = crossAxis.isInversed ? crossAxis.visibleRange.min : crossAxis.visibleRange.max;\n        }\n        else {\n            value = crossAxis.isInversed ? crossAxis.visibleRange.max : crossAxis.visibleRange.min;\n        }\n        return Math.abs(this.crossAt - value);\n    }\n    /**\n     * The function used to find whether the range is set.\n     * @return {boolean}\n     * @private\n     */\n    setRange() {\n        if (this.minimum != null && this.maximum != null) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Calculate visible range for axis.\n     * @return {void}\n     * @private\n     */\n    calculateVisibleRange(size) {\n        if (this.zoomFactor < 1 || this.zoomPosition > 0) {\n            let baseRange = this.actualRange;\n            let start;\n            let end;\n            if (!this.isInversed) {\n                start = this.actualRange.min + this.zoomPosition * this.actualRange.delta;\n                end = start + this.zoomFactor * this.actualRange.delta;\n            }\n            else {\n                start = this.actualRange.max - (this.zoomPosition * this.actualRange.delta);\n                end = start - (this.zoomFactor * this.actualRange.delta);\n            }\n            if (start < baseRange.min) {\n                end = end + (baseRange.min - start);\n                start = baseRange.min;\n            }\n            if (end > baseRange.max) {\n                start = start - (end - baseRange.max);\n                end = baseRange.max;\n            }\n            this.doubleRange = new DoubleRange(start, end);\n            this.visibleRange.min = this.doubleRange.start;\n            this.visibleRange.max = this.doubleRange.end;\n            this.visibleRange.delta = this.doubleRange.delta;\n        }\n    }\n    /**\n     * Calculate desired interval for the axis.\n     * @return {void}\n     * @private\n     */\n    getActualDesiredIntervalsCount(availableSize) {\n        let size = this.orientation === 'Horizontal' ? availableSize.width : availableSize.height;\n        if (this.desiredIntervals === null) {\n            let desiredIntervalsCount = (this.orientation === 'Horizontal' ? 0.533 : 1) * this.maximumLabels;\n            desiredIntervalsCount = Math.max((size * (desiredIntervalsCount / 100)), 1);\n            return desiredIntervalsCount;\n        }\n        else {\n            return this.desiredIntervals;\n        }\n    }\n    /**\n     * Triggers the event.\n     * @return {void}\n     * @private\n     */\n    triggerLabelRender(chart, tempInterval, text, labelStyle) {\n        let argsData;\n        argsData = {\n            cancel: false, name: axisLabelRender, axis: this,\n            text: text, value: tempInterval, labelStyle: labelStyle\n        };\n        chart.trigger(axisLabelRender, argsData);\n        if (!argsData.cancel) {\n            this.visibleLabels.push(new VisibleLabels(argsData.text, argsData.value, argsData.labelStyle));\n        }\n    }\n    /**\n     * Triggers the event.\n     * @return {void}\n     * @private\n     */\n    triggerRangeRender(chart, minimum, maximum, interval) {\n        let argsData;\n        argsData = {\n            cancel: false, name: axisRangeCalculated, axis: this,\n            minimum: minimum, maximum: maximum, interval: interval\n        };\n        chart.trigger(axisRangeCalculated, argsData);\n        if (!argsData.cancel) {\n            this.visibleRange.min = argsData.minimum;\n            this.visibleRange.max = argsData.maximum;\n            this.visibleRange.interval = argsData.interval;\n            this.visibleRange.delta = argsData.maximum - argsData.minimum;\n        }\n    }\n    /**\n     * Calculate padding for the axis.\n     * @return {string}\n     * @private\n     */\n    getRangePadding(chart) {\n        let padding = this.rangePadding;\n        if (padding !== 'Auto') {\n            return padding;\n        }\n        switch (this.orientation) {\n            case 'Horizontal':\n                if (chart.requireInvertedAxis) {\n                    padding = (this.isStack100 ? 'Round' : 'Normal');\n                }\n                else {\n                    padding = 'None';\n                }\n                break;\n            case 'Vertical':\n                if (!chart.requireInvertedAxis) {\n                    padding = (this.isStack100 ? 'Round' : 'Normal');\n                }\n                else {\n                    padding = 'None';\n                }\n                break;\n        }\n        return padding;\n    }\n    /**\n     * Calculate maximum label width for the axis.\n     * @return {void}\n     * @private\n     */\n    getMaxLabelWidth(chart) {\n        let prevSize = new Size(0, 0);\n        let rotatedLabel;\n        let pointX;\n        let previousEnd = 0;\n        let isIntersect = false;\n        this.angle = this.labelRotation;\n        this.maxLabelSize = new Size(0, 0);\n        let action = this.labelIntersectAction;\n        let label;\n        for (let i = 0; i < this.visibleLabels.length; i++) {\n            label = this.visibleLabels[i];\n            label.size = measureText(label.text, this.labelStyle);\n            if (label.size.width > this.maxLabelSize.width) {\n                this.maxLabelSize.width = label.size.width;\n                this.rotatedLabel = label.text;\n            }\n            if (label.size.height > this.maxLabelSize.height) {\n                this.maxLabelSize.height = label.size.height;\n            }\n            if (action === 'None' || action === 'Hide' || action === 'Trim') {\n                continue;\n            }\n            if ((action !== 'None' || this.angle % 360 === 0) && this.orientation === 'Horizontal' &&\n                this.rect.width > 0 && !isIntersect) {\n                pointX = (valueToCoefficient(label.value, this) * this.rect.width) + this.rect.x;\n                pointX -= label.size.width / 2;\n                if (this.edgeLabelPlacement === 'Shift') {\n                    if (i === 0 && pointX < this.rect.x) {\n                        pointX = this.rect.x;\n                    }\n                    if (i === this.visibleLabels.length - 1 && ((pointX + label.size.width) > (this.rect.x + this.rect.width))) {\n                        pointX = this.rect.x + this.rect.width - label.size.width;\n                    }\n                }\n                switch (action) {\n                    case 'MultipleRows':\n                        if (i > 0) {\n                            this.findMultiRows(i, pointX, label);\n                        }\n                        break;\n                    case 'Rotate45':\n                    case 'Rotate90':\n                        if (i > 0 && (!this.isInversed ? pointX <= previousEnd : pointX + label.size.width >= previousEnd)) {\n                            this.angle = (action === 'Rotate45') ? 45 : 90;\n                            isIntersect = true;\n                        }\n                        break;\n                    default:\n                        label.text = textWrap(label.text, this.rect.width / this.visibleLabels.length, this.labelStyle);\n                        let height = (label.size.height * label.text.length);\n                        if (height > this.maxLabelSize.height) {\n                            this.maxLabelSize.height = height;\n                        }\n                        break;\n                }\n                previousEnd = this.isInversed ? pointX : pointX + label.size.width;\n            }\n        }\n        if (this.angle !== 0 && this.orientation === 'Horizontal') {\n            this.maxLabelSize = rotateTextSize(this.labelStyle, this.rotatedLabel, this.angle, chart);\n        }\n        if (chart.multiLevelLabelModule && this.multiLevelLabels.length > 0) {\n            chart.multiLevelLabelModule.getMultilevelLabelsHeight(this);\n        }\n    }\n    /**\n     * Finds the multiple rows for axis.\n     * @return {void}\n     */\n    findMultiRows(length, currentX, currentLabel) {\n        let label;\n        let pointX;\n        let store = [];\n        let isMultiRows;\n        for (let i = length - 1; i >= 0; i--) {\n            label = this.visibleLabels[i];\n            pointX = (valueToCoefficient(label.value, this) * this.rect.width) + this.rect.x;\n            isMultiRows = !this.isInversed ? currentX < (pointX + label.size.width / 2) :\n                currentX + currentLabel.size.width > (pointX - label.size.width / 2);\n            if (isMultiRows) {\n                store.push(label.index);\n                currentLabel.index = (currentLabel.index > label.index) ? currentLabel.index : label.index + 1;\n            }\n            else {\n                currentLabel.index = store.indexOf(label.index) > -1 ? currentLabel.index : label.index;\n            }\n        }\n        let height = (currentLabel.size.height * currentLabel.index) + (5 * (currentLabel.index - 1));\n        if (height > this.maxLabelSize.height) {\n            this.maxLabelSize.height = height;\n        }\n    }\n    /**\n     * Finds the default module for axis.\n     * @return {void}\n     * @private\n     */\n    getModule(chart) {\n        if (this.valueType === 'Double') {\n            this.baseModule = new Double(chart);\n        }\n        else {\n            this.baseModule = chart[firstToLowerCase(this.valueType) + 'Module'];\n        }\n    }\n}\n__decorate([\n    Complex(Theme.axisLabelFont, Font)\n], Axis.prototype, \"labelStyle\", void 0);\n__decorate([\n    Complex({}, CrosshairTooltip)\n], Axis.prototype, \"crosshairTooltip\", void 0);\n__decorate([\n    Property('')\n], Axis.prototype, \"title\", void 0);\n__decorate([\n    Complex(Theme.axisTitleFont, Font)\n], Axis.prototype, \"titleStyle\", void 0);\n__decorate([\n    Property('')\n], Axis.prototype, \"labelFormat\", void 0);\n__decorate([\n    Property('')\n], Axis.prototype, \"skeleton\", void 0);\n__decorate([\n    Property('DateTime')\n], Axis.prototype, \"skeletonType\", void 0);\n__decorate([\n    Property(0)\n], Axis.prototype, \"plotOffset\", void 0);\n__decorate([\n    Property(false)\n], Axis.prototype, \"isIndexed\", void 0);\n__decorate([\n    Property(10)\n], Axis.prototype, \"logBase\", void 0);\n__decorate([\n    Property(0)\n], Axis.prototype, \"columnIndex\", void 0);\n__decorate([\n    Property(0)\n], Axis.prototype, \"rowIndex\", void 0);\n__decorate([\n    Property(1)\n], Axis.prototype, \"span\", void 0);\n__decorate([\n    Property(null)\n], Axis.prototype, \"desiredIntervals\", void 0);\n__decorate([\n    Property(3)\n], Axis.prototype, \"maximumLabels\", void 0);\n__decorate([\n    Property(1)\n], Axis.prototype, \"zoomFactor\", void 0);\n__decorate([\n    Property(0)\n], Axis.prototype, \"zoomPosition\", void 0);\n__decorate([\n    Property(false)\n], Axis.prototype, \"opposedPosition\", void 0);\n__decorate([\n    Property(true)\n], Axis.prototype, \"enableAutoIntervalOnZooming\", void 0);\n__decorate([\n    Property('Auto')\n], Axis.prototype, \"rangePadding\", void 0);\n__decorate([\n    Property('Double')\n], Axis.prototype, \"valueType\", void 0);\n__decorate([\n    Property('None')\n], Axis.prototype, \"edgeLabelPlacement\", void 0);\n__decorate([\n    Property('Auto')\n], Axis.prototype, \"intervalType\", void 0);\n__decorate([\n    Property('BetweenTicks')\n], Axis.prototype, \"labelPlacement\", void 0);\n__decorate([\n    Property('Outside')\n], Axis.prototype, \"tickPosition\", void 0);\n__decorate([\n    Property('Outside')\n], Axis.prototype, \"labelPosition\", void 0);\n__decorate([\n    Property('')\n], Axis.prototype, \"name\", void 0);\n__decorate([\n    Property(true)\n], Axis.prototype, \"visible\", void 0);\n__decorate([\n    Property(0)\n], Axis.prototype, \"minorTicksPerInterval\", void 0);\n__decorate([\n    Property(0)\n], Axis.prototype, \"labelRotation\", void 0);\n__decorate([\n    Property(null)\n], Axis.prototype, \"crossesAt\", void 0);\n__decorate([\n    Property(true)\n], Axis.prototype, \"placeNextToAxisLine\", void 0);\n__decorate([\n    Property(null)\n], Axis.prototype, \"crossesInAxis\", void 0);\n__decorate([\n    Property(null)\n], Axis.prototype, \"minimum\", void 0);\n__decorate([\n    Property(null)\n], Axis.prototype, \"maximum\", void 0);\n__decorate([\n    Property(null)\n], Axis.prototype, \"interval\", void 0);\n__decorate([\n    Complex({}, MajorTickLines)\n], Axis.prototype, \"majorTickLines\", void 0);\n__decorate([\n    Complex({}, MinorTickLines)\n], Axis.prototype, \"minorTickLines\", void 0);\n__decorate([\n    Complex({}, MajorGridLines)\n], Axis.prototype, \"majorGridLines\", void 0);\n__decorate([\n    Complex({}, MinorGridLines)\n], Axis.prototype, \"minorGridLines\", void 0);\n__decorate([\n    Complex({}, AxisLine)\n], Axis.prototype, \"lineStyle\", void 0);\n__decorate([\n    Property('Trim')\n], Axis.prototype, \"labelIntersectAction\", void 0);\n__decorate([\n    Property(false)\n], Axis.prototype, \"isInversed\", void 0);\n__decorate([\n    Property(100)\n], Axis.prototype, \"coefficient\", void 0);\n__decorate([\n    Property(0)\n], Axis.prototype, \"startAngle\", void 0);\n__decorate([\n    Property(null)\n], Axis.prototype, \"description\", void 0);\n__decorate([\n    Property(2)\n], Axis.prototype, \"tabIndex\", void 0);\n__decorate([\n    Collection([], StripLineSettings)\n], Axis.prototype, \"stripLines\", void 0);\n__decorate([\n    Collection([], MultiLevelLabels)\n], Axis.prototype, \"multiLevelLabels\", void 0);\n__decorate([\n    Complex({ color: null, width: 0, type: 'Rectangle' }, LabelBorder)\n], Axis.prototype, \"border\", void 0);\n/** @private */\nexport class VisibleLabels {\n    constructor(text, value, labelStyle, size = new Size(0, 0), index = 1) {\n        this.text = text;\n        this.originalText = text;\n        this.value = value;\n        this.labelStyle = labelStyle;\n        this.size = size;\n        this.index = 1;\n    }\n}\n","import { DataUtil } from '@syncfusion/ej2-data';\nimport { subtractThickness, valueToCoefficient, sum, subArray, TextOption, inside, measureText } from '../../common/utils/helper';\nimport { Size, Rect, Thickness, PathOption, logBase, createZoomingLabels, getElement, rotateTextSize } from '../../common/utils/helper';\nimport { textElement, textTrim } from '../../common/utils/helper';\n/**\n * Specifies the Cartesian Axis Layout.\n */\nconst axisPadding = 10;\nexport class CartesianAxisLayoutPanel {\n    /** @private */\n    constructor(chartModule) {\n        this.chart = chartModule;\n        this.padding = 5;\n    }\n    /**\n     * Measure the axis size.\n     * @return {void}\n     * @private\n     */\n    measureAxis(rect) {\n        let chart = this.chart;\n        this.crossAt(chart);\n        this.seriesClipRect = new Rect(rect.x, rect.y, rect.width, rect.height);\n        this.initialClipRect = rect;\n        this.leftSize = 0;\n        this.rightSize = 0;\n        this.topSize = 0;\n        this.bottomSize = 0;\n        //Measure Axis size with initial Rect\n        this.measureRowAxis(chart, this.initialClipRect);\n        this.initialClipRect = subtractThickness(this.initialClipRect, new Thickness(this.leftSize, this.rightSize, 0, 0));\n        this.measureColumnAxis(chart, this.initialClipRect);\n        this.initialClipRect = subtractThickness(this.initialClipRect, new Thickness(0, 0, this.topSize, this.bottomSize));\n        if (!this.chart.delayRedraw) {\n            this.calculateAxisSize(this.initialClipRect);\n        }\n        this.leftSize = 0;\n        this.rightSize = 0;\n        this.topSize = 0;\n        this.bottomSize = 0;\n        //Measure Axis size with series Rect\n        this.measureRowAxis(chart, this.initialClipRect);\n        this.seriesClipRect = subtractThickness(this.seriesClipRect, new Thickness(this.leftSize, this.rightSize, 0, 0));\n        this.measureColumnAxis(chart, this.initialClipRect);\n        this.seriesClipRect = subtractThickness(this.seriesClipRect, new Thickness(0, 0, this.topSize, this.bottomSize));\n        if (!this.chart.delayRedraw) {\n            chart.refreshAxis();\n            this.calculateAxisSize(this.seriesClipRect);\n        }\n    }\n    measureRowAxis(chart, rect) {\n        let row;\n        this.calculateRowSize(rect);\n        for (let item of chart.rows) {\n            row = item;\n            row.nearSizes = [];\n            row.farSizes = [];\n            this.arrangeAxis(row);\n            this.measureDefinition(row, chart, new Size(chart.availableSize.width, row.computedHeight), rect);\n            if (this.leftSize < sum(row.nearSizes)) {\n                this.leftSize = sum(row.nearSizes);\n            }\n            if (this.rightSize < sum(row.farSizes)) {\n                this.rightSize = sum(row.farSizes);\n            }\n        }\n    }\n    measureColumnAxis(chart, rect) {\n        let column;\n        this.calculateColumnSize(rect);\n        for (let item of chart.columns) {\n            column = item;\n            column.farSizes = [];\n            column.nearSizes = [];\n            this.arrangeAxis(column);\n            this.measureDefinition(column, chart, new Size(column.computedWidth, chart.availableSize.height), rect);\n            if (this.bottomSize < sum(column.nearSizes)) {\n                this.bottomSize = sum(column.nearSizes);\n            }\n            if (this.topSize < sum(column.farSizes)) {\n                this.topSize = sum(column.farSizes);\n            }\n        }\n    }\n    /**\n     * Measure the column and row in chart.\n     * @return {void}\n     * @private\n     */\n    measureDefinition(definition, chart, size, clipRect) {\n        let axis;\n        let axisType;\n        for (let axis of definition.axes) {\n            axis.getModule(chart);\n            axis.baseModule.calculateRangeAndInterval(size, axis);\n            definition.computeSize(axis, clipRect);\n        }\n        if (definition.farSizes.length > 0) {\n            definition.farSizes[definition.farSizes.length - 1] -= axisPadding;\n        }\n        if (definition.nearSizes.length > 0) {\n            definition.nearSizes[definition.nearSizes.length - 1] -= axisPadding;\n        }\n    }\n    /**\n     * Measure the axis.\n     * @return {void}\n     * @private\n     */\n    calculateAxisSize(rect) {\n        let chart = this.chart;\n        let row;\n        let column;\n        let definition;\n        let axis;\n        let nearCount = 0;\n        let farCount = 0;\n        let size = 0;\n        let x;\n        let y;\n        this.calculateRowSize(rect);\n        for (let i = 0, len = chart.rows.length; i < len; i++) {\n            row = chart.rows[i];\n            nearCount = 0;\n            farCount = 0;\n            for (let j = 0, len = row.axes.length; j < len; j++) {\n                axis = row.axes[j];\n                if (axis.rect.height === 0) {\n                    axis.rect.height = row.computedHeight;\n                    size = 0;\n                    for (let k = i + 1, len = i + axis.span; k < len; k++) {\n                        definition = chart.rows[k];\n                        size += definition.computedHeight;\n                    }\n                    axis.rect.y = (row.computedTop - size) + axis.plotOffset;\n                    axis.rect.height = (axis.rect.height + size) - (2 * axis.plotOffset);\n                    axis.rect.width = 0;\n                }\n                if (axis.opposedPosition) {\n                    x = rect.x + rect.width + sum(subArray(row.farSizes, farCount));\n                    axis.rect.x = axis.rect.x >= x ? axis.rect.x : x;\n                    farCount++;\n                }\n                else {\n                    x = rect.x - sum(subArray(row.nearSizes, nearCount));\n                    axis.rect.x = axis.rect.x <= x ? axis.rect.x : x;\n                    nearCount++;\n                }\n            }\n        }\n        this.calculateColumnSize(rect);\n        for (let i = 0, len = chart.columns.length; i < len; i++) {\n            column = chart.columns[i];\n            nearCount = 0;\n            farCount = 0;\n            for (let j = 0, len = column.axes.length; j < len; j++) {\n                axis = column.axes[j];\n                if (axis.rect.width === 0) {\n                    for (let k = i, len = (i + axis.span); k < len; k++) {\n                        definition = chart.columns[k];\n                        axis.rect.width += definition.computedWidth;\n                    }\n                    axis.rect.x = column.computedLeft + axis.plotOffset;\n                    axis.rect.width -= (2 * axis.plotOffset);\n                    axis.rect.height = 0;\n                }\n                if (axis.opposedPosition) {\n                    y = rect.y - sum(subArray(column.farSizes, farCount));\n                    axis.rect.y = axis.rect.y <= y ? axis.rect.y : y;\n                    farCount++;\n                }\n                else {\n                    y = rect.y + rect.height + sum(subArray(column.nearSizes, nearCount));\n                    axis.rect.y = axis.rect.y >= y ? axis.rect.y : y;\n                    nearCount++;\n                }\n            }\n        }\n    }\n    /**\n     * Measure the axis.\n     * @return {void}\n     * @private\n     */\n    measure() {\n        let chart = this.chart;\n        let row;\n        let column;\n        let definition;\n        let axis;\n        let actualIndex;\n        let span;\n        let axisLength;\n        for (let axis of chart.axisCollections) {\n            //definition.Axes = axis;\n            if (axis.orientation === 'Vertical') {\n                chart.verticalAxes.push(axis);\n                actualIndex = this.getActualRow(axis);\n                row = chart.rows[actualIndex];\n                this.pushAxis(row, axis);\n                span = ((actualIndex + axis.span) > chart.rows.length ? chart.rows.length : (actualIndex + axis.span));\n                for (let j = actualIndex + 1; j < span; j++) {\n                    definition = chart.rows[j];\n                    definition.axes[row.axes.length - 1] = axis;\n                    chart.rows[j] = definition;\n                }\n                chart.rows[actualIndex] = row;\n            }\n            else {\n                chart.horizontalAxes.push(axis);\n                actualIndex = this.getActualColumn(axis);\n                column = chart.columns[actualIndex];\n                this.pushAxis(column, axis);\n                span = ((actualIndex + axis.span) > chart.columns.length ? chart.columns.length : (actualIndex + axis.span));\n                for (let j = actualIndex + 1; j < span; j++) {\n                    definition = chart.columns[j];\n                    definition.axes[column.axes.length - 1] = axis;\n                    chart.columns[j] = definition;\n                }\n                chart.columns[actualIndex] = column;\n            }\n        }\n    }\n    crossAt(chart) {\n        for (let axis of chart.axisCollections) {\n            if (axis.crossesAt === null) {\n                continue;\n            }\n            let isTransposed = chart.isTransposed;\n            if (!axis.crossesInAxis) {\n                if (chart.requireInvertedAxis) {\n                    axis.crossInAxis = ((axis.orientation === 'Horizontal')) ? chart.primaryXAxis : chart.primaryYAxis;\n                }\n                else {\n                    axis.crossInAxis = ((axis.orientation === 'Horizontal')) ? chart.primaryYAxis : chart.primaryXAxis;\n                }\n                axis.crossAt = this.updateCrossAt(axis.crossInAxis, axis.crossesAt);\n                continue;\n            }\n            else {\n                for (let i = 2, len = chart.axisCollections.length; i < len; i++) {\n                    if (axis.crossesInAxis === chart.axisCollections[i].name) {\n                        axis.crossInAxis = chart.axisCollections[i];\n                        axis.crossAt = this.updateCrossAt(axis.crossInAxis, axis.crossesAt);\n                        continue;\n                    }\n                }\n            }\n        }\n    }\n    updateCrossAt(axis, crossAt) {\n        switch (axis.valueType) {\n            case 'DateTime':\n                let option = {\n                    skeleton: 'full',\n                    type: 'dateTime'\n                };\n                let dateParser = this.chart.intl.getDateParser(option);\n                let dateFormatter = this.chart.intl.getDateFormat(option);\n                return Date.parse(dateParser(dateFormatter(new Date(DataUtil.parse.parseJson({ val: crossAt }).val))));\n            case 'Category':\n                return parseFloat(crossAt) ? parseFloat(crossAt) : axis.labels.indexOf(crossAt);\n            case 'Logarithmic':\n                return logBase(crossAt, axis.logBase);\n            default:\n                return crossAt;\n        }\n    }\n    pushAxis(definition, axis) {\n        for (let i = 0, len = definition.axes.length; i <= len; i++) {\n            if (!definition.axes[i]) {\n                definition.axes[i] = axis;\n                break;\n            }\n        }\n    }\n    arrangeAxis(definition) {\n        let axisCollection = [];\n        for (let i = 0, len = definition.axes.length; i <= len; i++) {\n            if (definition.axes[i]) {\n                axisCollection.push(definition.axes[i]);\n            }\n        }\n        definition.axes = axisCollection;\n    }\n    getActualColumn(axis) {\n        let actualLength = this.chart.columns.length;\n        let pos = axis.columnIndex;\n        let result = pos >= actualLength ? actualLength - 1 : (pos < 0 ? 0 : pos);\n        return result;\n    }\n    getActualRow(axis) {\n        let actualLength = this.chart.rows.length;\n        let pos = axis.rowIndex;\n        let result = pos >= actualLength ? actualLength - 1 : (pos < 0 ? 0 : pos);\n        return result;\n    }\n    /**\n     * Measure the row size.\n     * @return {void}\n     */\n    calculateRowSize(rect) {\n        /*! Calculate row size */\n        let chart = this.chart;\n        let row;\n        let rowTop = rect.y + rect.height;\n        let height = 0;\n        let remainingHeight = Math.max(0, rect.height);\n        for (let i = 0, len = chart.rows.length; i < len; i++) {\n            row = chart.rows[i];\n            if (row.height.indexOf('%') !== -1) {\n                height = Math.min(remainingHeight, (rect.height * parseInt(row.height, 10) / 100));\n            }\n            else {\n                height = Math.min(remainingHeight, parseInt(row.height, 10));\n            }\n            height = (i !== (len - 1)) ? height : remainingHeight;\n            row.computedHeight = height;\n            rowTop -= height;\n            row.computedTop = rowTop;\n            remainingHeight -= height;\n        }\n    }\n    /**\n     * Measure the row size.\n     * @return {void}\n     */\n    calculateColumnSize(rect) {\n        /*! Calculate column size */\n        let chart = this.chart;\n        let column;\n        let columnLeft = rect.x;\n        let width = 0;\n        let remainingWidth = Math.max(0, rect.width);\n        for (let i = 0, len = chart.columns.length; i < len; i++) {\n            column = chart.columns[i];\n            if (column.width.indexOf('%') !== -1) {\n                width = Math.min(remainingWidth, (rect.width * parseInt(column.width, 10) / 100));\n            }\n            else {\n                width = Math.min(remainingWidth, parseInt(column.width, 10));\n            }\n            width = (i !== (len - 1)) ? width : remainingWidth;\n            column.computedWidth = width;\n            column.computedLeft = columnLeft;\n            columnLeft += width;\n            remainingWidth -= width;\n        }\n    }\n    /**\n     * To render the axis element.\n     * @return {void}\n     * @private\n     */\n    renderAxes() {\n        let chart = this.chart;\n        let axis;\n        let axisElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisInsideCollection' });\n        let axisLineElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisOutsideCollection' });\n        let outsideElement;\n        let isInside;\n        for (let i = 0, len = chart.axisCollections.length; i < len; i++) {\n            axis = chart.axisCollections[i];\n            this.element = chart.renderer.createGroup({ id: chart.element.id + 'AxisGroup' + i + 'Inside' });\n            outsideElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisGroup' + i + 'Outside' });\n            isInside = this.findAxisPosition(axis);\n            if (axis.orientation === 'Horizontal') {\n                axis.updateCrossValue(chart);\n                if (axis.visible && axis.lineStyle.width > 0) {\n                    this.drawAxisLine(axis, i, axis.plotOffset, 0, isInside ? outsideElement : this.element, axis.updatedRect);\n                }\n                if (axis.majorGridLines.width > 0 || axis.majorTickLines.width > 0) {\n                    this.drawXAxisGridLine(axis, i, (isInside || axis.tickPosition === 'Inside') ? outsideElement : this.element, axis.updatedRect);\n                }\n                if (axis.visible) {\n                    this.drawXAxisLabels(axis, i, (isInside || axis.labelPosition === 'Inside') ? outsideElement : this.element, (axis.placeNextToAxisLine ? axis.updatedRect : axis.rect));\n                    this.drawXAxisBorder(axis, i, (isInside || axis.labelPosition === 'Inside') ? outsideElement : this.element, (axis.placeNextToAxisLine ? axis.updatedRect : axis.rect));\n                    this.drawXAxisTitle(axis, i, isInside ? outsideElement : this.element, (axis.placeNextToAxisLine ? axis.updatedRect : axis.rect));\n                }\n            }\n            else {\n                axis.updateCrossValue(chart);\n                if (axis.visible && axis.lineStyle.width > 0) {\n                    this.drawAxisLine(axis, i, 0, axis.plotOffset, isInside ? outsideElement : this.element, axis.updatedRect);\n                }\n                if (axis.majorGridLines.width > 0 || axis.majorTickLines.width > 0) {\n                    this.drawYAxisGridLine(axis, i, (isInside || axis.tickPosition === 'Inside') ? outsideElement : this.element, axis.updatedRect);\n                }\n                if (axis.visible) {\n                    this.drawYAxisLabels(axis, i, (isInside || axis.labelPosition === 'Inside') ? outsideElement : this.element, (axis.placeNextToAxisLine ? axis.updatedRect : axis.rect));\n                    this.drawYAxisBorder(axis, i, (isInside || axis.labelPosition === 'Inside') ? outsideElement : this.element, (axis.placeNextToAxisLine ? axis.updatedRect : axis.rect));\n                    this.drawYAxisTitle(axis, i, isInside ? outsideElement : this.element, (axis.placeNextToAxisLine ? axis.updatedRect : axis.rect));\n                }\n            }\n            axisElement.appendChild(this.element);\n            if (outsideElement && outsideElement.childNodes.length > 0) {\n                axisLineElement.appendChild(outsideElement);\n            }\n        }\n        this.element = chart.renderer.createGroup({ id: chart.element.id + 'DefinitionLine' });\n        for (let j = 0, len = chart.rows.length; j < len; j++) {\n            let row = chart.rows[j];\n            if (row.border.color) {\n                this.drawBottomLine(row, j, true);\n            }\n        }\n        for (let j = 0, len = chart.columns.length; j < len; j++) {\n            let column = chart.columns[j];\n            if (column.border.color) {\n                this.drawBottomLine(column, j, false);\n            }\n        }\n        axisElement.appendChild(this.element);\n        chart.svgObject.appendChild(axisElement);\n        return axisLineElement;\n    }\n    findAxisPosition(axis) {\n        return axis.crossAt !== null && axis.isInside(axis.crossInAxis.visibleRange);\n    }\n    drawBottomLine(definition, index, isRow) {\n        let chart = this.chart;\n        let optionsLine = {};\n        let x1;\n        let x2;\n        let y1;\n        let y2;\n        let definitionName;\n        if (isRow) {\n            definition = definition;\n            y1 = y2 = definition.computedTop + definition.computedHeight;\n            x1 = this.seriesClipRect.x;\n            x2 = x1 + this.seriesClipRect.width;\n            definitionName = 'Row';\n        }\n        else {\n            definition = definition;\n            x1 = x2 = definition.computedLeft;\n            y1 = this.seriesClipRect.y;\n            y2 = y1 + this.seriesClipRect.height;\n            definitionName = 'Column';\n        }\n        optionsLine = {\n            'id': chart.element.id + '_AxisBottom_' + definitionName + index,\n            x1: x1,\n            y1: y1,\n            x2: x2,\n            y2: y2,\n            'stroke-width': definition.border.width,\n            'stroke': definition.border.color,\n        };\n        this.htmlObject = chart.renderer.drawLine(optionsLine);\n        this.element.appendChild(this.htmlObject);\n    }\n    drawAxisLine(axis, index, plotX, plotY, parent, rect) {\n        let chart = this.chart;\n        let optionsLine = {};\n        optionsLine = {\n            'id': chart.element.id + 'AxisLine_' + index,\n            x1: rect.x - plotX,\n            y1: rect.y - plotY,\n            x2: rect.x + rect.width + plotX,\n            y2: rect.y + rect.height + plotY,\n            'stroke-dasharray': axis.lineStyle.dashArray,\n            'stroke-width': axis.lineStyle.width,\n            'stroke': axis.lineStyle.color || chart.themeStyle.axisLine\n        };\n        this.htmlObject = chart.renderer.drawLine(optionsLine);\n        parent.appendChild(this.htmlObject);\n    }\n    drawYAxisGridLine(axis, index, parent, rect) {\n        let chart = this.chart;\n        let tempInterval;\n        let pointY = 0;\n        let majorGrid = '';\n        let majorTick = '';\n        let minorGird = '';\n        let minorTick = '';\n        let minorDirection;\n        let tickSize = axis.opposedPosition ? axis.majorTickLines.height : -axis.majorTickLines.height;\n        let axisLineSize = (axis.opposedPosition) ? axis.lineStyle.width / 2 : -axis.lineStyle.width / 2;\n        let ticksbwtLabel = (axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks') ?\n            0.5 : 0;\n        let ticks = axis.tickPosition === 'Inside' ? (rect.x - tickSize - axisLineSize) : (rect.x + tickSize + axisLineSize);\n        let length = axis.visibleLabels.length;\n        if (axis.valueType.indexOf('Category') && axis.labelPlacement === 'BetweenTicks' && length > 0) {\n            length += 1;\n        }\n        //Gridlines\n        for (let i = 0; i < length; i++) {\n            tempInterval = !axis.visibleLabels[i] ? (axis.visibleLabels[i - 1].value + axis.visibleRange.interval) - ticksbwtLabel\n                : axis.visibleLabels[i].value - ticksbwtLabel;\n            pointY = valueToCoefficient(tempInterval, axis) * rect.height;\n            pointY = (pointY * -1) + (rect.y + rect.height);\n            if (pointY >= rect.y && (rect.y + rect.height) >= pointY) {\n                if ((inside(tempInterval, axis.visibleRange)) || this.isBorder(axis, i, pointY)) {\n                    majorGrid = majorGrid.concat('M ' + this.seriesClipRect.x + ' ' + (pointY) +\n                        ' L ' + (this.seriesClipRect.x + this.seriesClipRect.width) + ' ' + pointY + ' ');\n                }\n                majorTick = majorTick.concat('M ' + (rect.x + axisLineSize) + ' ' + pointY +\n                    ' L ' + (ticks) + ' ' + pointY + ' ');\n            }\n            if ((axis.minorGridLines.width > 0 || axis.minorTickLines.width > 0) && axis.minorTicksPerInterval > 0) {\n                minorDirection = this.drawAxisMinorLine(axis, tempInterval, minorGird, minorTick, rect, i);\n                minorGird = minorDirection[0];\n                minorTick = minorDirection[1];\n            }\n        }\n        this.renderGridLine(axis, index, majorGrid, minorGird);\n        this.renderTickLine(axis, index, majorTick, minorTick, parent);\n    }\n    isBorder(axis, index, value) {\n        let chart = this.chart;\n        let border = chart.chartArea.border;\n        let rect = this.seriesClipRect;\n        let orientation = axis.orientation;\n        let start = (orientation === 'Horizontal') ? rect.x : rect.y;\n        let size = (orientation === 'Horizontal') ? rect.width : rect.height;\n        let startIndex = (orientation === 'Horizontal') ? 0 : axis.visibleLabels.length - 1;\n        let endIndex = (orientation === 'Horizontal') ? axis.visibleLabels.length - 1 : 0;\n        if (axis.plotOffset > 0) {\n            return true;\n        }\n        else if ((value === start || value === (start + size)) && (border.width <= 0 || border.color === 'transparent')) {\n            return true;\n        }\n        else if ((value !== start && index === startIndex) || (value !== (start + size) && index === endIndex)) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     * To render the axis label.\n     * @return {void}\n     * @private\n     */\n    drawYAxisLabels(axis, index, parent, rect) {\n        let chart = this.chart;\n        let pointX = 0;\n        let pointY = 0;\n        let elementSize;\n        let options;\n        let isLabelInside = axis.labelPosition === 'Inside';\n        let isTickInside = axis.tickPosition === 'Inside';\n        let isOpposed = axis.opposedPosition;\n        let tickSpace = axis.labelPosition === axis.tickPosition ? axis.majorTickLines.height : 0;\n        let padding = tickSpace + this.padding + axis.lineStyle.width / 2;\n        padding = (axis.opposedPosition) ? padding : -padding;\n        let anchor = ((isOpposed && isLabelInside) || (!isOpposed && !isLabelInside)) ? 'end' : 'start';\n        let labelElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisLabels' + index });\n        for (let i = 0, len = axis.visibleLabels.length; i < len; i++) {\n            pointX = isLabelInside ? (rect.x - padding) : (rect.x + padding);\n            elementSize = axis.visibleLabels[i].size;\n            pointY = valueToCoefficient(axis.visibleLabels[i].value, axis) * rect.height;\n            pointY = Math.floor((pointY * -1) + (rect.y + rect.height));\n            options = new TextOption(chart.element.id + index + '_AxisLabel_' + i, pointX, pointY + (elementSize.height / 4), anchor, axis.visibleLabels[i].text);\n            if (axis.edgeLabelPlacement) {\n                switch (axis.edgeLabelPlacement) {\n                    case 'None':\n                        break;\n                    case 'Hide':\n                        if (((i === 0 || (axis.isInversed && i === len - 1)) && options.y > rect.y + rect.height) ||\n                            (((i === len - 1) || (axis.isInversed && i === 0)) && options.y - elementSize.height / 2 < rect.y)) {\n                            options.text = '';\n                        }\n                        break;\n                    case 'Shift':\n                        if ((i === 0 || (axis.isInversed && i === len - 1)) && options.y > rect.y + rect.height) {\n                            options.y = pointY = rect.y + rect.height;\n                        }\n                        else if (((i === len - 1) || (axis.isInversed && i === 0)) && (options.y - elementSize.height / 2 < rect.y)) {\n                            options.y = pointY = rect.y + elementSize.height / 2;\n                        }\n                        break;\n                }\n            }\n            textElement(options, axis.labelStyle, axis.labelStyle.color || chart.themeStyle.axisLabel, labelElement);\n        }\n        if (!chart.delayRedraw) {\n            parent.appendChild(labelElement);\n        }\n        else if (axis.visible) {\n            this.createZoomingLabel(this.chart, labelElement, axis, index, rect);\n        }\n    }\n    /**\n     * To render the axis label border.\n     * @return {void}\n     * @private\n     */\n    drawYAxisBorder(axis, index, parent, rect) {\n        if (axis.border.width > 0) {\n            let startY;\n            let pointY;\n            let gap = (rect.height / axis.visibleRange.delta) * (axis.valueType === 'DateTime' ? axis.dateTimeInterval\n                : axis.visibleRange.interval);\n            let endY;\n            let length = axis.maxLabelSize.width + 10 + ((axis.tickPosition === axis.labelPosition) ?\n                axis.majorTickLines.height : 0);\n            let labelBorder = '';\n            let ticksbwtLabel = (axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks') ? -0.5 : 0;\n            let endX = ((axis.opposedPosition && axis.labelPosition === 'Inside') ||\n                (!axis.opposedPosition && axis.labelPosition === 'Outside')) ? rect.x - length : rect.x + length;\n            for (let i = 0; i < axis.visibleLabels.length; i++) {\n                pointY = valueToCoefficient(axis.visibleLabels[i].value + ticksbwtLabel, axis);\n                pointY = (axis.isInversed ? (1 - pointY) : pointY) * rect.height;\n                if (axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks') {\n                    startY = Math.floor((pointY * -1) + (rect.y + rect.height));\n                    endY = Math.floor((pointY * -1) - (gap) + (rect.y + rect.height));\n                }\n                else {\n                    startY = Math.floor((pointY * -1) + gap / 2 + (rect.y + rect.height));\n                    endY = Math.floor((pointY * -1) - gap / 2 + (rect.y + rect.height));\n                }\n                switch (axis.border.type) {\n                    case 'Rectangle':\n                    case 'WithoutTopBorder':\n                        if (startY > (rect.y + rect.height)) {\n                            labelBorder += ('M' + ' ' + endX + ' ' + (rect.y + rect.height) + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ');\n                        }\n                        else if (Math.floor(rect.y) > (endY)) {\n                            labelBorder += ('M' + ' ' + rect.x + ' ' + startY + ' ' + 'L' + ' ' + endX\n                                + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + (rect.y) + ' ');\n                        }\n                        else {\n                            labelBorder += ('M' + ' ' + rect.x + ' ' + startY + ' ' + 'L' + ' ' + endX +\n                                ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ');\n                            if (i === axis.visibleLabels.length - 1) {\n                                labelBorder += ('M' + ' ' + rect.x + ' ' + endY + ' ' + 'L' + ' ' +\n                                    endX + ' ' + endY + ' ');\n                            }\n                        }\n                        break;\n                    case 'WithoutTopandBottomBorder':\n                        if (!(startY > rect.y + rect.height) && !((endY) < Math.floor(rect.y))) {\n                            labelBorder += ('M' + ' ' + rect.x + ' ' + startY + ' ' + 'L' + ' ' + endX +\n                                ' ' + startY + ' ' + 'M' + ' ' + endX + ' ' + endY + ' ' +\n                                'L' + ' ' + rect.x + ' ' + endY);\n                        }\n                        break;\n                }\n            }\n            labelBorder += (axis.border.type === 'Rectangle') ? ('M' + ' ' + rect.x + ' ' + rect.y + ' ' + 'L' + ' ' +\n                rect.x + ' ' + (rect.y + rect.height) + ' ') : '';\n            if (labelBorder !== '') {\n                this.createAxisBorderElement(axis, index, labelBorder, parent);\n            }\n        }\n        if (axis.multiLevelLabels.length > 0 && this.chart.multiLevelLabelModule) {\n            this.chart.multiLevelLabelModule.renderYAxisMultiLevelLabels(axis, index, parent, rect);\n        }\n    }\n    drawYAxisTitle(axis, index, parent, rect) {\n        let chart = this.chart;\n        let labelRotation = (axis.opposedPosition) ? 90 : -90;\n        let elementSize = measureText(axis.title, axis.titleStyle);\n        let padding = (axis.tickPosition === 'Inside' ? 0 : axis.majorTickLines.height + this.padding) +\n            (axis.labelPosition === 'Inside' ? 0 :\n                (axis.maxLabelSize.width + axis.multiLevelLabelHeight + this.padding));\n        padding = axis.opposedPosition ? padding : -padding;\n        let x = rect.x + padding;\n        let y = rect.y + rect.height / 2;\n        let options = new TextOption(chart.element.id + '_AxisTitle_' + index, x, y - this.padding, 'middle', axis.title, 'rotate(' + labelRotation + ',' + (x) + ',' + (y) + ')');\n        let element = textElement(options, axis.titleStyle, axis.titleStyle.color || chart.themeStyle.axisTitle, parent);\n        element.setAttribute('aria-label', axis.description || axis.title);\n        element.setAttribute('tabindex', axis.tabIndex.toString());\n    }\n    drawXAxisGridLine(axis, index, parent, rect) {\n        let chart = this.chart;\n        let tempInterval;\n        let pointX = 0;\n        let majorGrid = '';\n        let majorTick = '';\n        let minorGird = '';\n        let minorTick = '';\n        let minorDirection;\n        let tickSize = (axis.opposedPosition) ? -axis.majorTickLines.height : axis.majorTickLines.height;\n        let axisLineSize = (axis.opposedPosition) ? -axis.lineStyle.width / 2 : axis.lineStyle.width / 2;\n        let ticksbwtLabel = (axis.valueType.indexOf('Category') > -1 && axis.labelPlacement === 'BetweenTicks') ?\n            0.5 : 0;\n        let length = axis.visibleLabels.length;\n        let ticks = axis.tickPosition === 'Inside' ? (rect.y - tickSize - axisLineSize) : (rect.y + tickSize + axisLineSize);\n        if (axis.valueType.indexOf('Category') > -1 && length > 0 && axis.labelPlacement === 'BetweenTicks') {\n            length += 1;\n        }\n        //Gridlines\n        for (let i = 0; i < length; i++) {\n            if (axis.valueType !== 'DateTimeCategory') {\n                tempInterval = axis.visibleLabels[i] ? axis.visibleLabels[i].value - ticksbwtLabel\n                    : (axis.visibleLabels[i - 1].value + axis.visibleRange.interval) - ticksbwtLabel;\n            }\n            else {\n                tempInterval = axis.visibleLabels[i] ?\n                    axis.visibleLabels[i].value - ticksbwtLabel : axis.visibleRange.max;\n            }\n            pointX = (valueToCoefficient(tempInterval, axis) * rect.width) + rect.x;\n            if (pointX >= rect.x && (rect.x + rect.width) >= pointX) {\n                if (inside(tempInterval, axis.visibleRange) || this.isBorder(axis, i, pointX)) {\n                    majorGrid = majorGrid.concat('M ' + pointX + ' ' + (this.seriesClipRect.y + this.seriesClipRect.height) +\n                        ' L ' + pointX + ' ' + this.seriesClipRect.y + ' ');\n                }\n                majorTick = majorTick.concat('M ' + (pointX) + ' ' + (rect.y + axisLineSize) +\n                    ' L ' + (pointX) + ' ' + ticks + ' ');\n            }\n            if (axis.minorTicksPerInterval > 0 && (axis.minorGridLines.width > 0 || axis.minorTickLines.width > 0)) {\n                minorDirection = this.drawAxisMinorLine(axis, tempInterval, minorGird, minorTick, rect, i);\n                minorGird = minorDirection[0];\n                minorTick = minorDirection[1];\n            }\n        }\n        this.renderGridLine(axis, index, majorGrid, minorGird);\n        this.renderTickLine(axis, index, majorTick, minorTick, parent);\n    }\n    drawAxisMinorLine(axis, tempInterval, minorGird, minorTick, rect, labelIndex) {\n        let value = tempInterval;\n        let coor = 0;\n        let position = 0;\n        let range = axis.visibleRange;\n        let isTickInside = axis.tickPosition === 'Inside';\n        let direction = [];\n        let tickSize = axis.opposedPosition ? -axis.minorTickLines.height : axis.minorTickLines.height;\n        let logStart;\n        let logEnd;\n        let logInterval = 1;\n        let logPosition = 1;\n        let ticksX = isTickInside ? (rect.y - tickSize) : (rect.y + tickSize);\n        let ticksY = isTickInside ? (rect.x + tickSize) : (rect.x - tickSize);\n        if (axis.valueType === 'Logarithmic') {\n            logStart = Math.pow(axis.logBase, value - range.interval);\n            logEnd = Math.pow(axis.logBase, value);\n            logInterval = (logEnd - logStart) / (axis.minorTicksPerInterval + 1);\n            logPosition = logStart + logInterval;\n        }\n        if (axis.orientation === 'Horizontal') {\n            for (let j = 0; j < axis.minorTicksPerInterval; j++) {\n                value = this.findLogNumeric(axis, logPosition, logInterval, value, labelIndex);\n                logPosition += logInterval;\n                if (inside(value, range)) {\n                    position = ((value - range.min) / (range.max - range.min));\n                    position = Math.ceil((axis.isInversed ? (1 - position) : position) * rect.width);\n                    coor = (Math.floor(position + rect.x));\n                    minorGird = minorGird.concat('M' + ' ' + coor + ' ' + (this.seriesClipRect.y)\n                        + 'L ' + coor + ' ' + (this.seriesClipRect.y + this.seriesClipRect.height));\n                    coor = (Math.floor(position + rect.x));\n                    minorTick = minorTick.concat('M' + ' ' + coor + ' ' + (rect.y)\n                        + 'L ' + coor + ' ' + ticksX);\n                }\n            }\n        }\n        else {\n            tickSize = axis.opposedPosition ? axis.minorTickLines.height : -axis.minorTickLines.height;\n            for (let j = 0; j < axis.minorTicksPerInterval; j++) {\n                value = this.findLogNumeric(axis, logPosition, logInterval, value, labelIndex);\n                if (inside(value, range)) {\n                    position = Math.ceil(((value - range.min) / (range.max - range.min)) * rect.height) * -1;\n                    coor = (Math.floor(position + rect.y + rect.height));\n                    minorGird = minorGird.concat('M' + ' ' + (this.seriesClipRect.x) + ' ' + coor\n                        + 'L ' + (this.seriesClipRect.x + this.seriesClipRect.width) + ' ' + coor);\n                    coor = (Math.floor(position + rect.y + rect.height));\n                    minorTick = minorTick.concat('M' + ' ' + rect.x + ' ' + coor + 'L ' + ticksY + ' ' + coor);\n                }\n                logPosition += logInterval;\n            }\n        }\n        direction.push(minorGird);\n        direction.push(minorTick);\n        return direction;\n    }\n    findLogNumeric(axis, logPosition, logInterval, value, labelIndex) {\n        let range = axis.visibleRange;\n        if (axis.valueType === 'Logarithmic') {\n            value = logBase(logPosition, axis.logBase);\n        }\n        else if (axis.valueType === 'DateTime') {\n            value += axis.dateTimeInterval / (axis.minorTicksPerInterval + 1);\n        }\n        else if (axis.valueType === 'DateTimeCategory') {\n            let padding = axis.labelPlacement === 'BetweenTicks' ? 0.5 : 0;\n            value += ((axis.visibleLabels[labelIndex + 1] ?\n                axis.visibleLabels[labelIndex + 1].value - padding : axis.visibleRange.max) -\n                (axis.visibleLabels[labelIndex] ?\n                    axis.visibleLabels[labelIndex].value - padding : axis.visibleRange.min)) /\n                (axis.minorTicksPerInterval + 1);\n        }\n        else {\n            value += range.interval / (axis.minorTicksPerInterval + 1);\n        }\n        return value;\n    }\n    /**\n     * To render the axis label.\n     * @return {void}\n     * @private\n     */\n    drawXAxisLabels(axis, index, parent, rect) {\n        let chart = this.chart;\n        let pointX = 0;\n        let pointY = 0;\n        let elementSize;\n        let labelElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisLabels' + index });\n        let labelPosition = axis.labelPosition;\n        let islabelInside = axis.labelPosition === 'Inside';\n        let isTickInside = axis.tickPosition === 'Inside';\n        let isOpposed = axis.opposedPosition;\n        let tickSpace = axis.labelPosition === axis.tickPosition ? axis.majorTickLines.height : 0;\n        let labelPadding;\n        let padding = tickSpace + this.padding + axis.lineStyle.width / 2;\n        let rotateSize;\n        let diffHeight;\n        let angle;\n        let anglePadding = ((axis.angle === 90 || axis.angle === -90)) ? -2 : 0;\n        let options;\n        let yLocation;\n        let previousEnd = axis.isInversed ? (rect.x + rect.width) : rect.x;\n        let width = 0;\n        let length = axis.visibleLabels.length;\n        let intervalLength;\n        let label;\n        for (let i = 0, len = length; i < len; i++) {\n            label = axis.visibleLabels[i];\n            pointX = (valueToCoefficient(label.value, axis) * rect.width) + rect.x;\n            elementSize = label.size;\n            intervalLength = rect.width / length;\n            width = ((axis.labelIntersectAction === 'Trim' || axis.labelIntersectAction === 'Wrap')\n                && elementSize.width > intervalLength) ? intervalLength : elementSize.width;\n            pointX -= width / 2;\n            if (islabelInside && axis.angle) {\n                pointY = isOpposed ? (rect.y + padding) : (rect.y - padding);\n            }\n            else {\n                labelPadding = (isOpposed && !islabelInside) || (!isOpposed && islabelInside) ?\n                    -(padding + (axis.angle ? (3 * (elementSize.height / 4) + (2 * axis.maxLabelSize.height / 5)) :\n                        (label.index > 1 ? (2 * (elementSize.height / 4)) : 0)))\n                    : padding + (axis.angle ? (3 * (elementSize.height / 4)) + (2 * axis.maxLabelSize.height / 5)\n                        : (3 * (elementSize.height / 4)));\n                pointY = (rect.y + (labelPadding * label.index));\n            }\n            options = new TextOption(chart.element.id + index + '_AxisLabel_' + i, pointX, pointY, '');\n            if (axis.edgeLabelPlacement) {\n                switch (axis.edgeLabelPlacement) {\n                    case 'None':\n                        break;\n                    case 'Hide':\n                        if (((i === 0 || (axis.isInversed && i === len - 1)) && options.x < rect.x) ||\n                            ((i === len - 1 || (axis.isInversed && i === 0)) && (options.x + width > rect.x + rect.width))) {\n                            continue;\n                        }\n                        break;\n                    case 'Shift':\n                        if ((i === 0 || (axis.isInversed && i === len - 1)) && options.x < rect.x) {\n                            intervalLength -= (rect.x - options.x);\n                            options.x = pointX = rect.x;\n                        }\n                        else if ((i === len - 1 || (axis.isInversed && i === 0)) && ((options.x + width) > rect.x + rect.width)) {\n                            if (elementSize.width > intervalLength && axis.labelIntersectAction === 'Trim') {\n                                intervalLength -= (options.x + width - (rect.x + rect.width));\n                            }\n                            else {\n                                intervalLength = width;\n                            }\n                            options.x = pointX = rect.x + rect.width - intervalLength;\n                        }\n                        break;\n                }\n            }\n            options.text = this.findAxisLabel(axis, label.text, intervalLength);\n            if (axis.angle % 360 === 0 && axis.labelIntersectAction === 'Hide' && i !== 0 &&\n                (!axis.isInversed ? options.x <= previousEnd : options.x + width >= previousEnd)) {\n                continue;\n            }\n            previousEnd = axis.isInversed ? options.x : options.x + width;\n            if (axis.angle !== 0) {\n                angle = (axis.angle > 360) ? axis.angle % 360 : axis.angle;\n                rotateSize = rotateTextSize(axis.labelStyle, label.text, angle, chart);\n                diffHeight = islabelInside ? rotateSize.height :\n                    axis.maxLabelSize.height - Math.ceil(rotateSize.height - elementSize.height);\n                yLocation = axis.opposedPosition ? diffHeight / 2 : -diffHeight / 2;\n                options.transform = 'rotate(' + angle + ',' + (pointX + width / 2 + anglePadding) + ','\n                    + (pointY + yLocation) + ')';\n                options.y += yLocation;\n            }\n            textElement(options, axis.labelStyle, axis.labelStyle.color || chart.themeStyle.axisLabel, labelElement, (axis.opposedPosition !== (axis.labelPosition === 'Inside'))).setAttribute('style', 'cursor: default');\n        }\n        if (!chart.delayRedraw) {\n            parent.appendChild(labelElement);\n        }\n        else if (axis.visible) {\n            this.createZoomingLabel(this.chart, labelElement, axis, index, rect);\n        }\n    }\n    /**\n     * To render the axis label border.\n     * @return {void}\n     * @private\n     */\n    drawXAxisBorder(axis, index, parent, axisRect) {\n        if (axis.border.width > 0) {\n            let startX;\n            let startY = axisRect.y;\n            let padding = 10;\n            let pointX;\n            let gap = (axisRect.width / axis.visibleRange.delta) * (axis.valueType === 'DateTime' ? axis.dateTimeInterval\n                : axis.visibleRange.interval);\n            let endX;\n            let length = axis.maxLabelSize.height +\n                ((axis.tickPosition === axis.labelPosition) ? axis.majorTickLines.height : 0);\n            let labelBorder = '';\n            let ticksbwtLabel = (axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks') ? -0.5 : 0;\n            let endY = ((axis.opposedPosition && axis.labelPosition === 'Inside') ||\n                (!axis.opposedPosition && axis.labelPosition === 'Outside')) ?\n                (axisRect.y + length + padding) : (axisRect.y - length - padding);\n            for (let i = 0; i < axis.visibleLabels.length; i++) {\n                pointX = valueToCoefficient(axis.visibleLabels[i].value + ticksbwtLabel, axis);\n                pointX = (axis.isInversed ? (1 - pointX) : pointX) * axisRect.width;\n                if (axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks') {\n                    startX = pointX + axisRect.x;\n                    endX = pointX + (gap) + axisRect.x;\n                }\n                else {\n                    startX = pointX - gap / 2 + axisRect.x;\n                    endX = pointX + gap / 2 + axisRect.x;\n                }\n                switch (axis.border.type) {\n                    case 'Rectangle':\n                    case 'WithoutTopBorder':\n                        if (startX < axisRect.x) {\n                            labelBorder += ('M' + ' ' + axisRect.x + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ');\n                        }\n                        else if (Math.floor(endX) > axisRect.width + axisRect.x) {\n                            labelBorder += ('M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                                'L' + ' ' + (axisRect.width + axisRect.x) + ' ' + endY + ' ');\n                        }\n                        else {\n                            labelBorder += ('M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' +\n                                endY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ');\n                            if (i === axis.visibleLabels.length - 1) {\n                                labelBorder += ('M' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ' +\n                                    'M ' + endX + ' ' + endY + ' L ' + (axisRect.width + axisRect.x) + ' ' + endY);\n                            }\n                        }\n                        break;\n                    case 'WithoutTopandBottomBorder':\n                        if (!(startX < axisRect.x) && !(Math.floor(endX) > axisRect.width + axisRect.x)) {\n                            labelBorder += ('M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                                'M ' + endX + ' ' + startY + ' L ' + endX + ' ' + endY);\n                        }\n                        break;\n                }\n            }\n            labelBorder += (axis.border.type === 'Rectangle' ? ('M ' + ' ' + axisRect.x + ' ' + startY + 'L' + ' ' +\n                (axisRect.x + axisRect.width) + ' ' + startY) : '');\n            if (labelBorder !== '') {\n                this.createAxisBorderElement(axis, index, labelBorder, parent);\n            }\n        }\n        if (this.chart.multiLevelLabelModule && axis.multiLevelLabels.length > 0) {\n            this.chart.multiLevelLabelModule.renderXAxisMultiLevelLabels(axis, index, parent, axisRect);\n        }\n    }\n    /**\n     * To create border element for axis.\n     * @return {void}\n     * @private\n     */\n    createAxisBorderElement(axis, index, labelBorder, parent) {\n        let borderElement = this.chart.renderer.drawPath(new PathOption(this.chart.element.id + '_BorderLine_' + index, 'transparent', axis.border.width, axis.border.color || this.chart.themeStyle.axisLine, 1, '', labelBorder));\n        borderElement.setAttribute('style', 'pointer-events: none');\n        parent.appendChild(borderElement);\n    }\n    findAxisLabel(axis, label, width) {\n        switch (axis.labelIntersectAction) {\n            case 'Trim':\n                return textTrim(width, label, axis.labelStyle);\n            default:\n                return label;\n        }\n    }\n    drawXAxisTitle(axis, index, parent, rect) {\n        let chart = this.chart;\n        let elementSize = measureText(axis.title, axis.titleStyle);\n        let padding = (axis.tickPosition === 'Inside' ? 0 : axis.majorTickLines.height + this.padding) +\n            (axis.labelPosition === 'Inside' ? 0 :\n                axis.maxLabelSize.height + axis.multiLevelLabelHeight + this.padding);\n        padding = axis.opposedPosition ? -(padding + elementSize.height / 4) : (padding + (3 * elementSize.height / 4));\n        let options = new TextOption(chart.element.id + '_AxisTitle_' + index, rect.x + rect.width / 2, rect.y + padding, 'middle', axis.title);\n        let element = textElement(options, axis.titleStyle, axis.titleStyle.color || chart.themeStyle.axisTitle, parent);\n        element.setAttribute('aria-label', axis.description || axis.title);\n        element.setAttribute('tabindex', axis.tabIndex.toString());\n    }\n    renderTickLine(axis, index, majorTick, minorTick, parent) {\n        let options;\n        let chart = this.chart;\n        if (axis.majorTickLines.width > 0 && axis.visible) {\n            options = new PathOption(chart.element.id + '_MajorTickLine_' + index, 'transparent', axis.majorTickLines.width, axis.majorTickLines.color || chart.themeStyle.majorTickLine, null, null, majorTick);\n            this.htmlObject = chart.renderer.drawPath(options);\n            parent.appendChild(this.htmlObject);\n        }\n        if (axis.minorTickLines.width > 0 && axis.visible) {\n            options = new PathOption(chart.element.id + '_MinorTickLine_' + index, 'transparent', axis.minorTickLines.width, axis.minorTickLines.color || chart.themeStyle.minorTickLine, null, null, minorTick);\n            this.htmlObject = chart.renderer.drawPath(options);\n            parent.appendChild(this.htmlObject);\n        }\n    }\n    renderGridLine(axis, index, majorGrid, minorGird) {\n        let chart = this.chart;\n        let options;\n        if (axis.majorGridLines.width > 0) {\n            options = new PathOption(chart.element.id + '_MajorGridLine_' + index, 'transparent', axis.majorGridLines.width, axis.majorGridLines.color || chart.themeStyle.majorGridLine, null, axis.majorGridLines.dashArray, majorGrid);\n            this.htmlObject = chart.renderer.drawPath(options);\n            this.element.appendChild(this.htmlObject);\n        }\n        if (axis.minorGridLines.width > 0) {\n            options = new PathOption(chart.element.id + '_MinorGridLine_' + index, 'transparent', axis.minorGridLines.width, axis.minorGridLines.color || chart.themeStyle.minorGridLine, null, axis.minorGridLines.dashArray, minorGird);\n            this.htmlObject = chart.renderer.drawPath(options);\n            this.element.appendChild(this.htmlObject);\n        }\n    }\n    findParentNode(chart, label, axis, index) {\n        if (axis.crossAt === null) {\n            return document.getElementById(chart.element.id + 'AxisGroup' + index + 'Inside');\n        }\n        if (document.getElementById(chart.element.id + 'AxisGroup' + index + 'Inside').contains(document.getElementById(label.id))) {\n            return document.getElementById(chart.element.id + 'AxisGroup' + index + 'Inside');\n        }\n        else {\n            return document.getElementById(chart.element.id + 'AxisGroup' + index + 'Outside');\n        }\n    }\n    createZoomingLabel(chart, labelElement, axis, index, rect) {\n        let parentNode = this.findParentNode(chart, labelElement, axis, index);\n        labelElement.setAttribute('opacity', '0.3');\n        let zoomElement = chart.renderer.createGroup({\n            id: chart.element.id + 'AxisLabels_Zoom' + index\n        });\n        zoomElement = createZoomingLabels(chart, axis, zoomElement, index, axis.orientation === 'Vertical', rect);\n        parentNode.replaceChild(labelElement, document.getElementById(labelElement.id));\n        if (getElement(chart.element.id + 'AxisLabels_Zoom' + index)) {\n            parentNode.replaceChild(zoomElement, document.getElementById(zoomElement.id));\n        }\n        else {\n            parentNode.appendChild(zoomElement);\n        }\n    }\n}\n","import { withInBounds, PointData, Rect, getValueXByPoint, getValueYByPoint } from '../../common/utils/helper';\n/**\n * To get the data on mouse move.\n * @private\n */\nexport class ChartData {\n    /**\n     * Constructor for the data.\n     * @private\n     */\n    constructor(chart) {\n        /** @private */\n        this.currentPoints = [];\n        /** @private */\n        this.previousPoints = [];\n        this.chart = chart;\n        this.lierIndex = 0;\n    }\n    /**\n     * Method to get the Data.\n     * @private\n     */\n    getData() {\n        let chart = this.chart;\n        let point = null;\n        let series = null;\n        let width;\n        let height;\n        for (let len = chart.visibleSeries.length, i = len - 1; i >= 0; i--) {\n            series = chart.visibleSeries[i];\n            width = (series.type === 'Scatter' || series.drawType === 'Scatter' || (!series.isRectSeries && series.marker.visible))\n                ? (series.marker.height + 5) / 2 : 0;\n            height = (series.type === 'Scatter' || series.drawType === 'Scatter' || (!series.isRectSeries && series.marker.visible))\n                ? (series.marker.width + 5) / 2 : 0;\n            if (series.visible && withInBounds(chart.mouseX, chart.mouseY, series.clipRect, width, height)) {\n                point = this.getRectPoint(series, series.clipRect, chart.mouseX, chart.mouseY);\n            }\n            if (point) {\n                return new PointData(point, series);\n            }\n        }\n        return new PointData(point, series);\n    }\n    isSelected(chart) {\n        return (chart.selectionMode.indexOf('Drag') > -1 && chart.selectionModule && chart.selectionModule.rectPoints !== null);\n    }\n    getRectPoint(series, rect, x, y) {\n        let currentRect;\n        let fromCenterX;\n        let fromCenterY;\n        let clickAngle;\n        let arcAngle = 0;\n        let startAngle;\n        let endAngle;\n        let distanceFromCenter;\n        for (let point of series.points) {\n            if (!point.regionData) {\n                if (!point.regions || !point.regions.length) {\n                    continue;\n                }\n            }\n            if (point.regionData && this.chart.chartAreaType === 'PolarRadar' && series.drawType.indexOf('Column') > -1) {\n                fromCenterX = x - (series.clipRect.width / 2 + series.clipRect.x);\n                fromCenterY = y - (series.clipRect.height / 2 + series.clipRect.y);\n                arcAngle = 2 * Math.PI * (point.regionData.currentXPosition < 0 ? 1 + point.regionData.currentXPosition\n                    : point.regionData.currentXPosition);\n                clickAngle = (Math.atan2(fromCenterY, fromCenterX) + 0.5 * Math.PI - arcAngle) % (2 * Math.PI);\n                clickAngle = clickAngle < 0 ? 2 * Math.PI + clickAngle : clickAngle;\n                clickAngle = clickAngle + 2 * Math.PI * series.chart.primaryXAxis.startAngle;\n                startAngle = point.regionData.startAngle;\n                startAngle -= arcAngle;\n                startAngle = startAngle < 0 ? 2 * Math.PI + startAngle : startAngle;\n                endAngle = point.regionData.endAngle;\n                endAngle -= arcAngle;\n                endAngle = endAngle < 0 ? 2 * Math.PI + endAngle : endAngle;\n                distanceFromCenter = Math.sqrt(Math.pow(Math.abs(fromCenterX), 2) + Math.pow(Math.abs(fromCenterY), 2));\n                if (clickAngle >= startAngle && clickAngle <= endAngle &&\n                    (((distanceFromCenter >= point.regionData.innerRadius && distanceFromCenter <= point.regionData.radius) ||\n                        (distanceFromCenter <= point.regionData.innerRadius && distanceFromCenter >= point.regionData.radius))\n                        && distanceFromCenter <= series.chart.radius)) {\n                    return point;\n                }\n            }\n            else if (this.checkRegionContainsPoint(point.regions, rect, x, y)) {\n                return point;\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks whether the region contains a point\n     */\n    checkRegionContainsPoint(regionRect, rect, x, y) {\n        return regionRect.some((region, index) => {\n            this.lierIndex = index;\n            return withInBounds(x, y, new Rect((this.chart.chartAreaType === 'Cartesian' ? rect.x : 0) + region.x, (this.chart.chartAreaType === 'Cartesian' ? rect.y : 0) + region.y, region.width, region.height));\n        });\n    }\n    getClosest(series, value) {\n        let xData = series.xData;\n        let closest;\n        if (value >= series.xMin - 0.5 && value <= series.xMax + 0.5) {\n            for (let data of xData) {\n                if (closest == null || Math.abs(data - value) < Math.abs(closest - value)) {\n                    closest = data;\n                }\n            }\n        }\n        return closest;\n    }\n    getClosestX(chart, series) {\n        let value;\n        let rect = series.clipRect;\n        if (!chart.requireInvertedAxis) {\n            value = getValueXByPoint(chart.mouseX - rect.x, rect.width, series.xAxis);\n        }\n        else {\n            value = getValueYByPoint(chart.mouseY - rect.y, rect.height, series.xAxis);\n        }\n        let closest = this.getClosest(series, value);\n        for (let point of series.points) {\n            if (closest === point.xValue && point.visible) {\n                return new PointData(point, series);\n            }\n        }\n        return null;\n    }\n}\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex, Collection } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport { StackValues, RectOption } from '../../common/utils/helper';\nimport { firstToLowerCase, Rect, logBase, CircleOption } from '../../common/utils/helper';\nimport { Border, Font, Margin, Animation, EmptyPointSettings, CornerRadius, Connector } from '../../common/model/base';\nimport { DataUtil } from '@syncfusion/ej2-data';\nimport { seriesRender } from '../../common/model/constants';\n/**\n * Configures the data label in the series.\n */\nexport class DataLabelSettings extends ChildProperty {\n}\n__decorate([\n    Property(false)\n], DataLabelSettings.prototype, \"visible\", void 0);\n__decorate([\n    Property(null)\n], DataLabelSettings.prototype, \"name\", void 0);\n__decorate([\n    Property('transparent')\n], DataLabelSettings.prototype, \"fill\", void 0);\n__decorate([\n    Property(1)\n], DataLabelSettings.prototype, \"opacity\", void 0);\n__decorate([\n    Property('Auto')\n], DataLabelSettings.prototype, \"position\", void 0);\n__decorate([\n    Property(5)\n], DataLabelSettings.prototype, \"rx\", void 0);\n__decorate([\n    Property(5)\n], DataLabelSettings.prototype, \"ry\", void 0);\n__decorate([\n    Property('Center')\n], DataLabelSettings.prototype, \"alignment\", void 0);\n__decorate([\n    Complex({ width: null, color: null }, Border)\n], DataLabelSettings.prototype, \"border\", void 0);\n__decorate([\n    Complex({ left: 5, right: 5, top: 5, bottom: 5 }, Margin)\n], DataLabelSettings.prototype, \"margin\", void 0);\n__decorate([\n    Complex({ size: '11px', color: null }, Font)\n], DataLabelSettings.prototype, \"font\", void 0);\n__decorate([\n    Property(null)\n], DataLabelSettings.prototype, \"template\", void 0);\n/**\n *  Configures the marker in the series.\n */\nexport class MarkerSettings extends ChildProperty {\n}\n__decorate([\n    Property(false)\n], MarkerSettings.prototype, \"visible\", void 0);\n__decorate([\n    Property('Circle')\n], MarkerSettings.prototype, \"shape\", void 0);\n__decorate([\n    Property('')\n], MarkerSettings.prototype, \"imageUrl\", void 0);\n__decorate([\n    Property(5)\n], MarkerSettings.prototype, \"height\", void 0);\n__decorate([\n    Property(5)\n], MarkerSettings.prototype, \"width\", void 0);\n__decorate([\n    Complex({ width: 2, color: null }, Border)\n], MarkerSettings.prototype, \"border\", void 0);\n__decorate([\n    Property(null)\n], MarkerSettings.prototype, \"fill\", void 0);\n__decorate([\n    Property(1)\n], MarkerSettings.prototype, \"opacity\", void 0);\n__decorate([\n    Complex({}, DataLabelSettings)\n], MarkerSettings.prototype, \"dataLabel\", void 0);\n/**\n * Points model for the series.\n * @private\n */\nexport class Points {\n    constructor() {\n        this.symbolLocations = null;\n        this.regions = null;\n        this.regionData = null;\n        this.marker = {\n            visible: true\n        };\n    }\n}\n/**\n * Defines the behavior of the Trendlines\n */\nexport class Trendline extends ChildProperty {\n    constructor() {\n        super(...arguments);\n        /** @private */\n        this.clipRect = new Rect(0, 0, 0, 0);\n    }\n    /** @private */\n    setDataSource(series, chart) {\n        if (series) {\n            this.points = series.points;\n        }\n        let type = firstToLowerCase(this.type);\n        chart.trendLineModule.initDataSource(this, chart);\n        chart.visibleSeriesCount++;\n    }\n}\n__decorate([\n    Property('')\n], Trendline.prototype, \"name\", void 0);\n__decorate([\n    Property('Linear')\n], Trendline.prototype, \"type\", void 0);\n__decorate([\n    Property(2)\n], Trendline.prototype, \"period\", void 0);\n__decorate([\n    Property(2)\n], Trendline.prototype, \"polynomialOrder\", void 0);\n__decorate([\n    Property(0)\n], Trendline.prototype, \"backwardForecast\", void 0);\n__decorate([\n    Property(0)\n], Trendline.prototype, \"forwardForecast\", void 0);\n__decorate([\n    Complex({}, Animation)\n], Trendline.prototype, \"animation\", void 0);\n__decorate([\n    Complex({}, MarkerSettings)\n], Trendline.prototype, \"marker\", void 0);\n__decorate([\n    Property(true)\n], Trendline.prototype, \"enableTooltip\", void 0);\n__decorate([\n    Property(null)\n], Trendline.prototype, \"intercept\", void 0);\n__decorate([\n    Property('')\n], Trendline.prototype, \"fill\", void 0);\n__decorate([\n    Property(1)\n], Trendline.prototype, \"width\", void 0);\n__decorate([\n    Property('SeriesType')\n], Trendline.prototype, \"legendShape\", void 0);\n/**\n * Configures Error bar in series.\n */\nexport class ErrorBarCapSettings extends ChildProperty {\n}\n__decorate([\n    Property(1)\n], ErrorBarCapSettings.prototype, \"width\", void 0);\n__decorate([\n    Property(10)\n], ErrorBarCapSettings.prototype, \"length\", void 0);\n__decorate([\n    Property(null)\n], ErrorBarCapSettings.prototype, \"color\", void 0);\n__decorate([\n    Property(1)\n], ErrorBarCapSettings.prototype, \"opacity\", void 0);\nexport class ChartSegment extends ChildProperty {\n}\n__decorate([\n    Property(null)\n], ChartSegment.prototype, \"value\", void 0);\n__decorate([\n    Property(null)\n], ChartSegment.prototype, \"color\", void 0);\n__decorate([\n    Property('0')\n], ChartSegment.prototype, \"dashArray\", void 0);\nexport class ErrorBarSettings extends ChildProperty {\n}\n__decorate([\n    Property(false)\n], ErrorBarSettings.prototype, \"visible\", void 0);\n__decorate([\n    Property('Fixed')\n], ErrorBarSettings.prototype, \"type\", void 0);\n__decorate([\n    Property('Both')\n], ErrorBarSettings.prototype, \"direction\", void 0);\n__decorate([\n    Property('Vertical')\n], ErrorBarSettings.prototype, \"mode\", void 0);\n__decorate([\n    Property(null)\n], ErrorBarSettings.prototype, \"color\", void 0);\n__decorate([\n    Property(1)\n], ErrorBarSettings.prototype, \"verticalError\", void 0);\n__decorate([\n    Property(1)\n], ErrorBarSettings.prototype, \"width\", void 0);\n__decorate([\n    Property(1)\n], ErrorBarSettings.prototype, \"horizontalError\", void 0);\n__decorate([\n    Property(3)\n], ErrorBarSettings.prototype, \"verticalPositiveError\", void 0);\n__decorate([\n    Property(3)\n], ErrorBarSettings.prototype, \"verticalNegativeError\", void 0);\n__decorate([\n    Property(1)\n], ErrorBarSettings.prototype, \"horizontalPositiveError\", void 0);\n__decorate([\n    Property(1)\n], ErrorBarSettings.prototype, \"horizontalNegativeError\", void 0);\n__decorate([\n    Complex(null, ErrorBarCapSettings)\n], ErrorBarSettings.prototype, \"errorBarCap\", void 0);\n/**\n * Defines the common behavior of Series and Technical Indicators\n */\nexport class SeriesBase extends ChildProperty {\n    constructor() {\n        /**\n         * The DataSource field that contains the x value.\n         * It is applicable for series and technical indicators\n         * @default ''\n         */\n        super(...arguments);\n        /** @private */\n        this.currentViewData = [];\n        /** @private */\n        this.clipRect = new Rect(0, 0, 0, 0);\n        /** @private */\n        this.seriesType = 'XY';\n    }\n    /**\n     * Process data for the series.\n     * @hidden\n     */\n    processJsonData() {\n        let i = 0;\n        let len = Object.keys(this.currentViewData).length;\n        let point = new Points();\n        let textMappingName = this instanceof Series && this.marker.dataLabel.name ?\n            this.marker.dataLabel.name : '';\n        if (this instanceof Series && this.type === 'Waterfall') {\n            this.chart[firstToLowerCase(this.type) + 'SeriesModule'].\n                processWaterfallData(this.currentViewData, this);\n        }\n        this.points = [];\n        this.xMin = Infinity;\n        this.xMax = -Infinity;\n        this.yMin = Infinity;\n        this.yMax = -Infinity;\n        this.sizeMax = -Infinity;\n        this.getSeriesType();\n        if (this.xAxis.valueType === 'Category') {\n            while (i < len) {\n                point = this.dataPoint(i, textMappingName);\n                this.pushCategoryData(point, i, point.x);\n                this.pushData(point, i);\n                this.setEmptyPoint(point, i);\n                i++;\n            }\n        }\n        else if (this.xAxis.valueType.indexOf('DateTime') > -1) {\n            let option = {\n                skeleton: 'full',\n                type: 'dateTime'\n            };\n            let dateParser = this.chart.intl.getDateParser(option);\n            let dateFormatter = this.chart.intl.getDateFormat(option);\n            while (i < len) {\n                point = this.dataPoint(i, textMappingName);\n                point.x = new Date(DataUtil.parse.parseJson({ val: point.x }).val);\n                if (this.xAxis.valueType === 'DateTime') {\n                    point.xValue = Date.parse(dateParser(dateFormatter(point.x)));\n                }\n                else {\n                    this.pushCategoryData(point, i, Date.parse(dateParser(dateFormatter(point.x))).toString());\n                }\n                this.pushData(point, i);\n                this.setEmptyPoint(point, i);\n                i++;\n            }\n        }\n        else {\n            while (i < len) {\n                point = this.dataPoint(i, textMappingName);\n                point.xValue = point.x;\n                this.pushData(point, i);\n                this.setEmptyPoint(point, i);\n                i++;\n            }\n        }\n        if (this instanceof Series) {\n            if (this.type.indexOf('Spline') > -1 || (this.drawType.indexOf('Spline') > -1 && this.chart.chartAreaType === 'PolarRadar')) {\n                let isArea = (this.type.indexOf('Area') > -1 || this.drawType === 'Area');\n                this.chart['spline' + (isArea ? 'Area' : '') + 'SeriesModule'].findSplinePoint(this);\n            }\n        }\n    }\n    pushData(point, i) {\n        point.index = i;\n        point.yValue = point.y;\n        // To find the min, max for the axis range.\n        this.xMin = Math.min(this.xMin, point.xValue);\n        this.xMax = Math.max(this.xMax, point.xValue);\n        this.xData.push(point.xValue);\n    }\n    /** @private */\n    dataPoint(i, textMappingName) {\n        let point;\n        this.points[i] = new Points();\n        point = this.points[i];\n        let currentViewData = this.currentViewData;\n        point.x = getValue(this.xName, currentViewData[i]);\n        point.high = getValue(this.high, currentViewData[i]);\n        point.low = getValue(this.low, currentViewData[i]);\n        point.open = getValue(this.open, currentViewData[i]);\n        point.close = getValue(this.close, currentViewData[i]);\n        point.volume = getValue(this.volume, currentViewData[i]);\n        point.interior = getValue(this.pointColorMapping, currentViewData[i]);\n        if (this instanceof Series) {\n            point.y = getValue(this.yName, currentViewData[i]);\n            point.size = getValue(this.size, currentViewData[i]);\n            point.text = getValue(textMappingName, currentViewData[i]);\n        }\n        return point;\n    }\n    /**\n     * To set empty point value based on empty point mode\n     * @private\n     */\n    setEmptyPoint(point, i) {\n        if (!this.findVisibility(point)) {\n            point.visible = true;\n            return null;\n        }\n        point.isEmpty = true;\n        let mode = this instanceof Series ? this.emptyPointSettings.mode : 'Drop';\n        switch (mode) {\n            case 'Zero':\n                point.visible = true;\n                if (this instanceof Series && this.seriesType.indexOf('HighLow') > -1) {\n                    point.high = point.low = 0;\n                    if (this.seriesType.indexOf('HighLowOpenClose') > -1) {\n                        point.open = point.close = 0;\n                    }\n                }\n                else {\n                    point.y = point.yValue = this.yData[i] = 0;\n                }\n                break;\n            case 'Average':\n                if (this instanceof Series) {\n                    if (this.seriesType.indexOf('HighLow') > -1) {\n                        point.high = (isNullOrUndefined(point.high) || isNaN(+point.high)) ? this.getAverage(this.high, i) : point.high;\n                        point.low = (isNullOrUndefined(point.low) || isNaN(+point.low)) ? this.getAverage(this.low, i) : point.low;\n                        if (this.seriesType.indexOf('HighLowOpenClose') > -1) {\n                            point.open = (isNullOrUndefined(point.open) || isNaN(+point.open)) ? this.getAverage(this.open, i) : point.open;\n                            point.close = (isNullOrUndefined(point.close) || isNaN(+point.close)) ? this.getAverage(this.close, i) :\n                                point.close;\n                        }\n                    }\n                    else {\n                        point.y = point.yValue = this.yData[i] = this.getAverage(this.yName, i);\n                    }\n                }\n                point.visible = true;\n                break;\n            case 'Drop':\n            case 'Gap':\n                this.yData[i] = null;\n                point.visible = false;\n                break;\n        }\n    }\n    findVisibility(point) {\n        let type = this instanceof Series ? this.seriesType : 'HighLowOpenClose';\n        let yValues;\n        switch (type) {\n            case 'XY':\n                this.setXYMinMax(point.yValue);\n                this.yData.push(point.yValue);\n                if (this instanceof Series && this.type === 'Bubble') {\n                    this.sizeMax = Math.max(this.sizeMax, (isNullOrUndefined(point.size) || isNaN(+point.size)) ? this.sizeMax\n                        : point.size);\n                }\n                return isNullOrUndefined(point.x) || (isNullOrUndefined(point.y) || isNaN(+point.y));\n            case 'HighLow':\n                this.setHiloMinMax(point.high, point.low);\n                return isNullOrUndefined(point.x) || (isNullOrUndefined(point.low) || isNaN(+point.low)) ||\n                    (isNullOrUndefined(point.high) || isNaN(+point.high));\n            case 'HighLowOpenClose':\n                this.setHiloMinMax(point.high, point.low);\n                return isNullOrUndefined(point.x) || (isNullOrUndefined(point.low) || isNaN(+point.low)) ||\n                    (isNullOrUndefined(point.open) || isNaN(+point.open)) || (isNullOrUndefined(point.close) || isNaN(+point.close))\n                    || (isNullOrUndefined(point.high) || isNaN(+point.high));\n            case 'BoxPlot':\n                yValues = (point.y || [null]).filter((value) => {\n                    return !isNullOrUndefined(value) && !isNaN(value);\n                }).sort((a, b) => {\n                    return a - b;\n                });\n                point.y = yValues;\n                this.yMin = Math.min(this.yMin, Math.min(...yValues));\n                this.yMax = Math.max(this.yMax, Math.max(...yValues));\n                return !yValues.length;\n        }\n    }\n    /**\n     * To get Y min max for the provided point seriesType XY\n     */\n    setXYMinMax(yValue) {\n        this.yMin = Math.min(this.yMin, (isNullOrUndefined(yValue) || isNaN(yValue)) ? this.yMin : yValue);\n        this.yMax = Math.max(this.yMax, (isNullOrUndefined(yValue) || isNaN(yValue)) ? this.yMax : yValue);\n    }\n    /**\n     * To get Y min max for the provided point seriesType XY\n     */\n    setHiloMinMax(high, low) {\n        this.yMin = Math.min(this.yMin, Math.min((isNullOrUndefined(low) || isNaN(low)) ? this.yMin : low, (isNullOrUndefined(high) || isNaN(high)) ? this.yMin : high));\n        this.yMax = Math.max(this.yMax, Math.max((isNullOrUndefined(low) || isNaN(low)) ? this.yMax : low, (isNullOrUndefined(high) || isNaN(high)) ? this.yMax : high));\n    }\n    /**\n     * Finds the type of the series\n     * @private\n     */\n    getSeriesType() {\n        let type;\n        if (this instanceof Series) {\n            let seriesType = this.chart.chartAreaType === 'PolarRadar' ? this.drawType : this.type;\n            if (seriesType) {\n                switch (seriesType) {\n                    case 'RangeColumn':\n                    case 'RangeArea':\n                    case 'Hilo':\n                        type = 'HighLow';\n                        break;\n                    case 'HiloOpenClose':\n                    case 'Candle':\n                        type = 'HighLowOpenClose';\n                        break;\n                    case 'BoxAndWhisker':\n                        type = 'BoxPlot';\n                        break;\n                    default:\n                        type = 'XY';\n                }\n            }\n        }\n        this.seriesType = type;\n    }\n    /** @private */\n    pushCategoryData(point, index, pointX) {\n        if (!this.xAxis.isIndexed) {\n            if (this.xAxis.labels.indexOf(pointX) < 0) {\n                this.xAxis.labels.push(pointX);\n            }\n            point.xValue = this.xAxis.labels.indexOf(pointX);\n        }\n        else {\n            this.xAxis.labels[index] ? this.xAxis.labels[index] += ', ' + pointX :\n                this.xAxis.labels.push(pointX);\n            point.xValue = index;\n        }\n    }\n    /**\n     * To find average of given property\n     */\n    getAverage(member, i, data = this.currentViewData) {\n        let previous = data[i - 1] ? (data[i - 1][member] || 0) : 0;\n        let next = data[i + 1] ? (data[i + 1][member] || 0) : 0;\n        return (previous + next) / 2;\n    }\n    /**\n     * To find the control points for spline.\n     * @return {void}\n     * @private\n     */\n    refreshDataManager(chart) {\n        this.chart = chart;\n        if (isNullOrUndefined(this.query) && !isNullOrUndefined(this.dataSource)) {\n            this.dataManagerSuccess({ result: this.dataSource, count: this.dataSource.length }, chart, false);\n            return;\n        }\n        let dataManager = this.dataModule.getData(this.dataModule.generateQuery().requiresCount());\n        dataManager.then((e) => this.dataManagerSuccess(e, chart));\n    }\n    dataManagerSuccess(e, chart, isRemoteData = true) {\n        this.currentViewData = e.result !== '' ? e.result : [];\n        if (this instanceof Series) {\n            let argsData = {\n                name: seriesRender, series: this, data: this.currentViewData, fill: this.interior\n            };\n            this.chart.trigger(seriesRender, argsData);\n            this.interior = argsData.fill;\n            this.currentViewData = argsData.data;\n        }\n        this.processJsonData();\n        this.recordsCount = e.count;\n        this.refreshChart(isRemoteData);\n    }\n    refreshChart(isRemoteData) {\n        let chart = this.chart;\n        if (this instanceof Series) {\n            chart.visibleSeriesCount += isRemoteData ? 1 : 0;\n        }\n        chart.refreshTechnicalIndicator(this);\n        if (this instanceof Series && this.category !== 'TrendLine') {\n            for (let trendline of this.trendlines) {\n                trendline.setDataSource(this, chart);\n            }\n        }\n        //if (chart.visibleSeries.length === (chart.visibleSeriesCount - chart.indicators.length)) {\n        if (chart.visibleSeries.length === (chart.visibleSeriesCount)) {\n            chart.refreshBound();\n            chart.trigger('loaded', { chart: chart });\n        }\n        if (this instanceof Series) {\n            chart.visibleSeriesCount += isRemoteData ? 0 : 1;\n        }\n    }\n}\n__decorate([\n    Property('')\n], SeriesBase.prototype, \"xName\", void 0);\n__decorate([\n    Property('')\n], SeriesBase.prototype, \"high\", void 0);\n__decorate([\n    Property('')\n], SeriesBase.prototype, \"low\", void 0);\n__decorate([\n    Property('')\n], SeriesBase.prototype, \"open\", void 0);\n__decorate([\n    Property('')\n], SeriesBase.prototype, \"close\", void 0);\n__decorate([\n    Property('')\n], SeriesBase.prototype, \"volume\", void 0);\n__decorate([\n    Property('')\n], SeriesBase.prototype, \"pointColorMapping\", void 0);\n__decorate([\n    Property(null)\n], SeriesBase.prototype, \"xAxisName\", void 0);\n__decorate([\n    Property(null)\n], SeriesBase.prototype, \"yAxisName\", void 0);\n__decorate([\n    Complex(null, Animation)\n], SeriesBase.prototype, \"animation\", void 0);\n__decorate([\n    Property(null)\n], SeriesBase.prototype, \"fill\", void 0);\n__decorate([\n    Property(1)\n], SeriesBase.prototype, \"width\", void 0);\n__decorate([\n    Property('0')\n], SeriesBase.prototype, \"dashArray\", void 0);\n__decorate([\n    Property('')\n], SeriesBase.prototype, \"dataSource\", void 0);\n__decorate([\n    Property()\n], SeriesBase.prototype, \"query\", void 0);\n__decorate([\n    Collection([], ChartSegment)\n], SeriesBase.prototype, \"segments\", void 0);\n__decorate([\n    Property('X')\n], SeriesBase.prototype, \"segmentAxis\", void 0);\n/**\n *  Configures the series in charts.\n */\nexport class Series extends SeriesBase {\n    // tslint:disable-next-line:no-any\n    constructor(parent, propName, defaultValue, isArray) {\n        super(parent, propName, defaultValue, isArray);\n        this.visibleSeriesCount = 0;\n        /** @private */\n        this.category = 'Series';\n        /** @private */\n        this.isRectSeries = false;\n        /** @private */\n        this.drawPoints = [];\n        /** @private */\n        this.delayedAnimation = false;\n    }\n    /**\n     * Refresh the axis label.\n     * @return {boolean}\n     * @private\n     */\n    refreshAxisLabel() {\n        if (this.xAxis.valueType !== 'Category') {\n            return null;\n        }\n        this.xAxis.labels = [];\n        for (let item of this.xAxis.series) {\n            if (item.visible) {\n                item.xMin = Infinity;\n                item.xMax = -Infinity;\n                for (let point of item.points) {\n                    item.pushCategoryData(point, point.index, point.x);\n                    item.xMin = Math.min(item.xMin, point.xValue);\n                    item.xMax = Math.max(item.xMax, point.xValue);\n                }\n            }\n        }\n    }\n    /**\n     * To get the series collection.\n     * @return {void}\n     * @private\n     */\n    findSeriesCollection(column, row, isStack) {\n        let seriesCollection = [];\n        for (let rowAxis of row.axes) {\n            for (let rowSeries of rowAxis.series) {\n                for (let axis of column.axes) {\n                    for (let series of axis.series) {\n                        if (series === rowSeries && series.visible && this.rectSeriesInChart(series, isStack)) {\n                            seriesCollection.push(series);\n                        }\n                    }\n                }\n            }\n        }\n        return seriesCollection;\n    }\n    /**\n     * To get the column type series.\n     * @return {void}\n     * @private\n     */\n    rectSeriesInChart(series, isStack) {\n        let type = (series.type).toLowerCase();\n        return (type.indexOf('column') !== -1 || type.indexOf('bar') !== -1 ||\n            type.indexOf('hiloopenclose') !== -1 || type.indexOf('candle') !== -1 ||\n            type.indexOf('hilo') !== -1 || series.drawType.indexOf('Column') !== -1 ||\n            type.indexOf('waterfall') !== -1 || type.indexOf('boxandwhisker') !== -1 || isStack);\n    }\n    /**\n     * To calculate the stacked values.\n     * @return {void}\n     * @private\n     */\n    calculateStackedValue(isStacking100, chart) {\n        let axisSeries;\n        for (let columnItem of chart.columns) {\n            for (let item of chart.rows) {\n                this.calculateStackingValues(this.findSeriesCollection(columnItem, item, true), isStacking100);\n            }\n        }\n    }\n    calculateStackingValues(seriesCollection, isStacking100) {\n        let startValues;\n        let endValues;\n        let yValues = [];\n        let lastPositive = [];\n        let lastNegative = [];\n        let stackingGroup;\n        let lastValue;\n        let value;\n        let frequencies = [];\n        if (isStacking100) {\n            frequencies = this.findFrequencies(seriesCollection);\n        }\n        for (let series of seriesCollection) {\n            if (series.type.indexOf('Stacking') !== -1 || (series.drawType.indexOf('Stacking') !== -1 &&\n                (series.chart.chartAreaType === 'PolarRadar'))) {\n                stackingGroup = (series.type.indexOf('StackingArea') !== -1) ? 'StackingArea100' : series.stackingGroup;\n                if (!lastPositive[stackingGroup]) {\n                    lastPositive[stackingGroup] = [];\n                    lastNegative[stackingGroup] = [];\n                }\n                yValues = series.yData;\n                startValues = [];\n                endValues = [];\n                for (let j = 0, pointsLength = series.points.length; j < pointsLength; j++) {\n                    lastValue = 0;\n                    value = yValues[j];\n                    if (lastPositive[stackingGroup][series.points[j].xValue] === undefined) {\n                        lastPositive[stackingGroup][series.points[j].xValue] = 0;\n                    }\n                    if (lastNegative[stackingGroup][series.points[j].xValue] === undefined) {\n                        lastNegative[stackingGroup][series.points[j].xValue] = 0;\n                    }\n                    if (isStacking100) {\n                        value = value / frequencies[stackingGroup][series.points[j].xValue] * 100;\n                        value = !isNaN(value) ? value : 0;\n                        series.points[j].percent = value.toFixed(2);\n                    }\n                    if (value >= 0) {\n                        lastValue = lastPositive[stackingGroup][series.points[j].xValue];\n                        lastPositive[stackingGroup][series.points[j].xValue] += value;\n                    }\n                    else {\n                        lastValue = lastNegative[stackingGroup][series.points[j].xValue];\n                        lastNegative[stackingGroup][series.points[j].xValue] += value;\n                    }\n                    startValues.push(lastValue);\n                    endValues.push(value + lastValue);\n                    if (isStacking100 && (endValues[j] > 100)) {\n                        endValues[j] = 100;\n                    }\n                }\n                series.stackedValues = new StackValues(startValues, endValues);\n                series.yMin = Math.min.apply(0, startValues);\n                series.yMax = Math.max.apply(0, endValues);\n                if (series.yMin > Math.min.apply(0, endValues)) {\n                    series.yMin = (isStacking100) ? -100 : Math.min.apply(0, endValues);\n                }\n                if (series.yMax < Math.max.apply(0, startValues)) {\n                    series.yMax = 0;\n                }\n            }\n        }\n    }\n    findFrequencies(seriesCollection) {\n        let frequencies = [];\n        let stackingGroup;\n        for (let series of seriesCollection) {\n            series.yAxis.isStack100 = series.type.indexOf('100') !== -1 ? true : false;\n            if (series.type.indexOf('Stacking') !== -1) {\n                stackingGroup = (series.type.indexOf('StackingArea') !== -1) ? 'StackingArea100' : series.stackingGroup;\n                if (!frequencies[stackingGroup]) {\n                    frequencies[stackingGroup] = [];\n                }\n                for (let j = 0, pointsLength = series.points.length; j < pointsLength; j++) {\n                    if (frequencies[stackingGroup][series.points[j].xValue] === undefined) {\n                        frequencies[stackingGroup][series.points[j].xValue] = 0;\n                    }\n                    if (series.yData[j] > 0) {\n                        frequencies[stackingGroup][series.points[j].xValue] += series.yData[j];\n                    }\n                    else {\n                        frequencies[stackingGroup][series.points[j].xValue] -= series.yData[j];\n                    }\n                }\n            }\n        }\n        return frequencies;\n    }\n    /**\n     * To find the log values.\n     * @return {void}\n     * @private\n     */\n    logWithIn(value, axis) {\n        if (axis.valueType === 'Logarithmic') {\n            value = logBase(value, axis.logBase);\n        }\n        else {\n            value = value;\n        }\n        return value;\n    }\n    /* private dataManagerFailure(e: { result: Object[] }): void {\n         this.currentViewData = [];\n         this.refreshChart();\n     }*/\n    /** @private */\n    renderSeries(chart, index) {\n        let seriesType = firstToLowerCase(this.type);\n        if (seriesType.indexOf('100') !== -1) {\n            seriesType = seriesType.replace('100', '');\n        }\n        if (chart[seriesType + 'SeriesModule']) {\n            if (this.category !== 'Indicator' && this.category !== 'TrendLine') {\n                this.createSeriesElements(chart);\n            }\n            chart[seriesType + 'SeriesModule'].render(this, this.xAxis, this.yAxis, chart.requireInvertedAxis);\n            if (this.category !== 'Indicator') {\n                if (this.errorBar.visible) {\n                    this.chart.errorBarModule.render(this);\n                }\n                if (this.marker.dataLabel.visible) {\n                    chart.dataLabelModule.render(this, this.chart, this.marker.dataLabel);\n                }\n                this.appendSeriesElement(chart.seriesElements, chart);\n            }\n            this.performAnimation(chart, seriesType, this.errorBar, this.marker, this.marker.dataLabel);\n        }\n    }\n    /**\n     * To create seris element.\n     * @return {void}\n     * @private\n     */\n    createSeriesElements(chart) {\n        if (this.category !== 'Indicator') {\n            let elementId = chart.element.id;\n            let xAxisRect = this.xAxis.rect;\n            // 8 for extend border value 5 for extend size value\n            let explodeValue = this.marker.border.width + 8 + 5;\n            let yAxisRect = this.yAxis.rect;\n            let marker = this.marker;\n            let render = chart.renderer;\n            let index = this.index;\n            let markerHeight = (this.type === 'Scatter') ? (this.marker.height + explodeValue) / 2 : 0;\n            let markerWidth = (this.type === 'Scatter') ? (this.marker.width + explodeValue) / 2 : 0;\n            if (chart.chartAreaType === 'PolarRadar') {\n                this.clipRectElement = render.drawCircularClipPath(new CircleOption(elementId + '_ChartSeriesClipRect_' + index, 'transparent', { width: 1, color: 'Gray' }, 1, this.clipRect.width / 2 + this.clipRect.x, this.clipRect.height / 2 + this.clipRect.y, chart.radius));\n            }\n            else {\n                this.clipRectElement = render.drawClipPath(new RectOption(elementId + '_ChartSeriesClipRect_' + index, 'transparent', { width: 1, color: 'Gray' }, 1, {\n                    x: -markerWidth, y: -markerHeight,\n                    width: this.clipRect.width + markerWidth * 2,\n                    height: this.clipRect.height + markerHeight * 2\n                }));\n            }\n            let transform;\n            transform = chart.chartAreaType === 'Cartesian' ? 'translate(' + this.clipRect.x + ',' + (this.clipRect.y) + ')' : '';\n            this.symbolElement = null;\n            this.seriesElement = render.createGroup({\n                'id': elementId + 'SeriesGroup' + index,\n                'transform': transform,\n                'clip-path': 'url(#' + elementId + '_ChartSeriesClipRect_' + index + ')'\n            });\n            this.seriesElement.appendChild(this.clipRectElement);\n        }\n    }\n    /**\n     * To append the series.\n     * @return {void}\n     * @private\n     */\n    appendSeriesElement(element, chart) {\n        let marker = this.marker;\n        let dataLabel = marker.dataLabel;\n        if (this.category !== 'TrendLine') {\n            chart.seriesElements.appendChild(this.seriesElement);\n            let errorBar = this.errorBar;\n            if (errorBar.visible) {\n                if (chart.chartAreaType === 'PolarRadar') {\n                    chart.seriesElements.appendChild(this.seriesElement);\n                }\n                else {\n                    chart.seriesElements.appendChild(this.errorBarElement);\n                }\n            }\n            if (this.type === 'Scatter' || this.type === 'Bubble') {\n                chart.seriesElements.appendChild(this.seriesElement);\n            }\n        }\n        if (marker.visible && ((chart.chartAreaType === 'Cartesian' && (!this.isRectSeries || this.type === 'BoxAndWhisker'))\n            || ((this.drawType !== 'Scatter' && !this.isRectSeries) && chart.chartAreaType === 'PolarRadar')) &&\n            this.type !== 'Scatter' && this.type !== 'Bubble') {\n            chart.seriesElements.appendChild(this.symbolElement);\n        }\n        if (dataLabel.visible) {\n            chart.dataLabelElements.appendChild(this.shapeElement);\n            chart.dataLabelElements.appendChild(this.textElement);\n        }\n        if (chart.dataLabelElements.hasChildNodes()) {\n            chart.seriesElements.appendChild(chart.dataLabelElements);\n        }\n    }\n    /**\n     * To perform animation for chart series.\n     * @return {void}\n     * @private\n     */\n    performAnimation(chart, type, errorBar, marker, dataLabel) {\n        if (this.animation.enable && chart.animateSeries) {\n            chart[type + 'SeriesModule'].doAnimation(this);\n            if (errorBar.visible) {\n                chart.errorBarModule.doErrorBarAnimation(this);\n            }\n            if (marker.visible) {\n                chart.markerRender.doMarkerAnimation(this);\n            }\n            if (dataLabel.visible) {\n                chart.dataLabelModule.doDataLabelAnimation(this);\n            }\n        }\n    }\n    /**\n     * To set border color for empty point\n     * @private\n     */\n    setPointColor(point, color) {\n        color = point.interior || color;\n        return point.isEmpty ? (this.emptyPointSettings.fill || color) : color;\n    }\n    /**\n     * To set border color for empty point\n     * @private\n     */\n    setBorderColor(point, border) {\n        border.width = point.isEmpty ? (this.emptyPointSettings.border.width || border.width) : border.width;\n        border.color = point.isEmpty ? (this.emptyPointSettings.border.color || border.color) : border.color;\n        return border;\n    }\n}\n__decorate([\n    Property('')\n], Series.prototype, \"name\", void 0);\n__decorate([\n    Property('')\n], Series.prototype, \"yName\", void 0);\n__decorate([\n    Property('Line')\n], Series.prototype, \"drawType\", void 0);\n__decorate([\n    Property(true)\n], Series.prototype, \"isClosed\", void 0);\n__decorate([\n    Property('#2ecd71')\n], Series.prototype, \"bearFillColor\", void 0);\n__decorate([\n    Property('#e74c3d')\n], Series.prototype, \"bullFillColor\", void 0);\n__decorate([\n    Property(false)\n], Series.prototype, \"enableSolidCandles\", void 0);\n__decorate([\n    Property('')\n], Series.prototype, \"size\", void 0);\n__decorate([\n    Property('')\n], Series.prototype, \"stackingGroup\", void 0);\n__decorate([\n    Property(true)\n], Series.prototype, \"visible\", void 0);\n__decorate([\n    Complex({ color: 'transparent', width: 0 }, Border)\n], Series.prototype, \"border\", void 0);\n__decorate([\n    Property(1)\n], Series.prototype, \"opacity\", void 0);\n__decorate([\n    Property('Line')\n], Series.prototype, \"type\", void 0);\n__decorate([\n    Complex(null, ErrorBarSettings)\n], Series.prototype, \"errorBar\", void 0);\n__decorate([\n    Complex(null, MarkerSettings)\n], Series.prototype, \"marker\", void 0);\n__decorate([\n    Collection([], Trendline)\n], Series.prototype, \"trendlines\", void 0);\n__decorate([\n    Property(true)\n], Series.prototype, \"enableTooltip\", void 0);\n__decorate([\n    Property('SeriesType')\n], Series.prototype, \"legendShape\", void 0);\n__decorate([\n    Property(null)\n], Series.prototype, \"selectionStyle\", void 0);\n__decorate([\n    Property(1)\n], Series.prototype, \"minRadius\", void 0);\n__decorate([\n    Property(3)\n], Series.prototype, \"maxRadius\", void 0);\n__decorate([\n    Property('Natural')\n], Series.prototype, \"splineType\", void 0);\n__decorate([\n    Property(0.5)\n], Series.prototype, \"cardinalSplineTension\", void 0);\n__decorate([\n    Complex(null, EmptyPointSettings)\n], Series.prototype, \"emptyPointSettings\", void 0);\n__decorate([\n    Property(true)\n], Series.prototype, \"showMean\", void 0);\n__decorate([\n    Property('Normal')\n], Series.prototype, \"boxPlotMode\", void 0);\n__decorate([\n    Property(0.7)\n], Series.prototype, \"columnWidth\", void 0);\n__decorate([\n    Property(0)\n], Series.prototype, \"columnSpacing\", void 0);\n__decorate([\n    Property('#C64E4A')\n], Series.prototype, \"negativeFillColor\", void 0);\n__decorate([\n    Property('#4E81BC')\n], Series.prototype, \"summaryFillColor\", void 0);\n__decorate([\n    Property()\n], Series.prototype, \"intermediateSumIndexes\", void 0);\n__decorate([\n    Property()\n], Series.prototype, \"sumIndexes\", void 0);\n__decorate([\n    Complex({ color: 'black', width: 2 }, Connector)\n], Series.prototype, \"connector\", void 0);\n__decorate([\n    Complex(null, CornerRadius)\n], Series.prototype, \"cornerRadius\", void 0);\n","import { Query, DataManager } from '@syncfusion/ej2-data';\n/**\n * data module is used to generate query and dataSource\n */\nexport class Data {\n    /**\n     * Constructor for data module\n     * @private\n     */\n    constructor(dataSource, query) {\n        this.initDataManager(dataSource, query);\n    }\n    /**\n     * The function used to initialize dataManager and query\n     * @return {void}\n     * @private\n     */\n    initDataManager(dataSource, query) {\n        this.dataManager = dataSource instanceof DataManager ? dataSource : new DataManager(dataSource);\n        this.query = query instanceof Query ? query : new Query();\n    }\n    /**\n     * The function used to generate updated Query from chart model\n     * @return {void}\n     * @private\n     */\n    generateQuery() {\n        let query = this.query.clone();\n        return query;\n    }\n    /**\n     * The function used to get dataSource by executing given Query\n     * @param  {Query} query - A Query that specifies to generate dataSource\n     * @return {void}\n     * @private\n     */\n    getData(query) {\n        return this.dataManager.executeQuery(query);\n    }\n}\n","import { drawSymbol, PathOption, Size } from '../../common/utils/helper';\nimport { Browser, extend, remove } from '@syncfusion/ej2-base';\nimport { ChartData } from '../../chart/utils/get-data';\nimport { withInBounds, PointData, stopTimer } from '../../common/utils/helper';\nimport { colorNameToHex, convertHexToColor } from '../../common/utils/helper';\n/**\n * Marker Module used to render the marker for line type series.\n */\nexport class MarkerExplode extends ChartData {\n    /**\n     * Constructor for the marker module.\n     * @private\n     */\n    constructor(chart) {\n        super(chart);\n        this.addEventListener();\n        this.elementId = chart.element.id;\n    }\n    /**\n     * @hidden\n     */\n    addEventListener() {\n        if (this.chart.isDestroyed) {\n            return;\n        }\n        this.chart.on(Browser.touchMoveEvent, this.mouseMoveHandler, this);\n        this.chart.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    }\n    /**\n     * @hidden\n     */\n    /* public removeEventListener(): void {\n         if (this.chart.isDestroyed) { return; }\n         this.chart.off(Browser.touchMoveEvent, this.mouseMoveHandler);\n    }*/\n    /**\n     * @hidden\n     */\n    mouseUpHandler() {\n        let chart = this.chart;\n        if (chart.isTouch && !chart.crosshair.enable && !this.isSelected(chart)) {\n            this.markerMove(true);\n        }\n    }\n    /**\n     * @hidden\n     */\n    mouseMoveHandler() {\n        let chart = this.chart;\n        if ((!chart.crosshair.enable || (chart.tooltip.enable)) && (!chart.isTouch || chart.startMove) && !this.isSelected(chart)) {\n            this.markerMove(false);\n        }\n    }\n    markerMove(remove) {\n        let chart = this.chart;\n        this.currentPoints = [];\n        let data;\n        let previous;\n        let explodeSeries;\n        if (!chart.tooltip.shared || !chart.tooltip.enable) {\n            data = this.getData();\n            previous = this.previousPoints[0];\n            explodeSeries = data.series && (data.series.type === 'BoxAndWhisker' || data.series.type === 'Bubble' || data.series.drawType === 'Scatter'\n                || data.series.type === 'Scatter' || (!data.series.isRectSeries && data.series.marker.visible));\n            data.lierIndex = this.lierIndex;\n            if (data.point && explodeSeries && ((!previous || (previous.point !== data.point)) ||\n                (previous && previous.lierIndex > 3 && previous.lierIndex !== this.lierIndex))) {\n                this.currentPoints.push(data);\n            }\n        }\n        else {\n            if (!withInBounds(chart.mouseX, chart.mouseY, chart.chartAxisLayoutPanel.seriesClipRect)) {\n                return null;\n            }\n            if (chart.tooltip.enable) {\n                let pointData = chart.chartAreaType === 'PolarRadar' ? this.getData() : null;\n                for (let chartSeries of chart.visibleSeries) {\n                    if (!chartSeries.enableTooltip || chartSeries.category === 'Indicator') {\n                        continue;\n                    }\n                    if (chart.chartAreaType === 'Cartesian' && chartSeries.visible) {\n                        data = this.getClosestX(chart, chartSeries);\n                    }\n                    else if (chart.chartAreaType === 'PolarRadar' && chartSeries.visible && pointData.point !== null) {\n                        data = new PointData(chartSeries.points[pointData.point.index], chartSeries);\n                    }\n                    if (data) {\n                        this.currentPoints.push(data);\n                        data = null;\n                    }\n                }\n            }\n        }\n        let length = this.previousPoints.length;\n        if (this.currentPoints.length > 0) {\n            if (length === 0 || (length > 0 && this.previousPoints[0].point !== this.currentPoints[0].point)) {\n                if (this.previousPoints.length > 0) {\n                    this.removeHighlightedMarker();\n                }\n                for (let data of this.currentPoints) {\n                    if (data && data.point &&\n                        (!data.series.isRectSeries || data.series.type === 'BoxAndWhisker')) {\n                        stopTimer(this.markerExplode);\n                        this.isRemove = true;\n                        data.point.symbolLocations.map((location, index) => {\n                            if (data.point.marker.visible) {\n                                this.drawTrackBall(data.series, data.point, location, index);\n                            }\n                        });\n                    }\n                }\n                this.previousPoints = extend([], this.currentPoints, null, true);\n            }\n        }\n        if (!chart.tooltip.enable && ((this.currentPoints.length === 0 && this.isRemove) || (remove && this.isRemove) ||\n            !withInBounds(chart.mouseX, chart.mouseY, chart.chartAxisLayoutPanel.seriesClipRect))) {\n            this.isRemove = false;\n            this.markerExplode = setTimeout(() => {\n                this.removeHighlightedMarker();\n            }, 2000);\n        }\n        this.currentPoints = [];\n    }\n    drawTrackBall(series, point, location, index) {\n        let marker = point.marker;\n        let seriesMarker = series.marker;\n        let shape = marker.shape || seriesMarker.shape;\n        let element = series.symbolElement || series.seriesElement;\n        let symbolId = this.elementId + '_Series_' + series.index + '_Point_' + point.index + '_Trackball' +\n            (index ? index : '');\n        let size = new Size((marker.width || seriesMarker.width) + 5, (marker.height || seriesMarker.height) + 5);\n        let border = (marker.border || series.border);\n        let explodeSeries = (series.type === 'BoxAndWhisker' || series.type === 'Bubble' || series.type === 'Scatter');\n        let borderColor = (border.color && border.color !== 'transparent') ? border.color :\n            marker.fill || point.interior || (explodeSeries ? point.color : series.interior);\n        let colorValue = convertHexToColor(colorNameToHex(borderColor));\n        let borderWidth = marker.border ? marker.border.width : seriesMarker.border.width;\n        let markerShadow = series.chart.themeStyle.markerShadow ||\n            'rgba(' + colorValue.r + ',' + colorValue.g + ',' + colorValue.b + ',0.2)';\n        for (let i = 0; i < 2; i++) {\n            let options = new PathOption(symbolId + '_' + i, i ? (marker.fill || point.color || (explodeSeries ? series.interior : '#ffffff')) : 'transparent', borderWidth + (i ? 0 : 8), i ? borderColor : markerShadow, (marker.opacity || seriesMarker.opacity), null, null);\n            let symbol = drawSymbol(location, shape, size, seriesMarker.imageUrl, options, '');\n            symbol.setAttribute('style', 'pointer-events:none');\n            symbol.setAttribute('class', 'EJ2-Trackball');\n            element.appendChild(symbol);\n        }\n    }\n    /**\n     * @hidden\n     */\n    removeHighlightedMarker() {\n        let elements = document.getElementsByClassName('EJ2-Trackball');\n        for (let i = 0, len = elements.length; i < len; i++) {\n            remove(elements[0]);\n        }\n        this.previousPoints = [];\n    }\n}\n","import { drawSymbol, PathOption, Size, markerAnimate, CircleOption, RectOption } from '../../common/utils/helper';\nimport { findlElement } from '../../common/utils/helper';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { pointRender } from '../../common/model/constants';\nimport { MarkerExplode } from './marker-explode';\nimport { getSaturationColor } from '../../common/utils/helper';\n/**\n * Marker module used to render the marker for line type series.\n */\nexport class Marker extends MarkerExplode {\n    /**\n     * Constructor for the marker module.\n     * @private\n     */\n    constructor(chart) {\n        super(chart);\n        this.addEventListener();\n    }\n    /**\n     * Render the marker for series.\n     * @return {void}\n     * @private\n     */\n    render(series) {\n        this.createElement(series);\n        for (let point of series.points) {\n            if (point.visible && point.symbolLocations.length) {\n                point.symbolLocations.map((location, index) => {\n                    this.renderMarker(series, point, location, index);\n                });\n            }\n        }\n    }\n    renderMarker(series, point, location, index) {\n        let seriesIndex = series.index;\n        let marker = series.marker;\n        let border = {\n            color: marker.border.color,\n            width: marker.border.width\n        };\n        let borderColor = marker.border.color;\n        let symbolId;\n        let shapeOption;\n        let isBoxPlot = series.type === 'BoxAndWhisker';\n        let fill = marker.fill || (isBoxPlot ? point.interior || series.interior : '#ffffff');\n        let argsData;\n        let parentElement = isBoxPlot ?\n            findlElement(series.seriesElement.childNodes, 'Series_' + series.index + '_Point_' + point.index)\n            : series.symbolElement;\n        border.color = borderColor || series.setPointColor(point, series.interior);\n        symbolId = this.elementId + '_Series_' + seriesIndex + '_Point_' + point.index + '_Symbol' +\n            (index ? index : '');\n        argsData = {\n            cancel: false, name: pointRender, series: series, point: point,\n            fill: point.isEmpty ? (series.emptyPointSettings.fill || fill) : fill,\n            border: {\n                color: series.type === 'BoxAndWhisker' ?\n                    (!isNullOrUndefined(borderColor) && borderColor !== 'transparent') ? borderColor :\n                        getSaturationColor(fill, -0.6)\n                    : border.color,\n                width: border.width\n            },\n            height: marker.height,\n            width: marker.width,\n            shape: marker.shape\n        };\n        argsData.border = series.setBorderColor(point, { width: argsData.border.width, color: argsData.border.color });\n        this.chart.trigger(pointRender, argsData);\n        point.color = argsData.fill;\n        if (!argsData.cancel) {\n            let y;\n            if (series.type === 'RangeArea') {\n                y = index ? point.low : point.high;\n            }\n            else if (isBoxPlot) {\n                y = point.outliers[index];\n            }\n            else {\n                y = point.y;\n            }\n            shapeOption = new PathOption(symbolId, argsData.fill, argsData.border.width, argsData.border.color, marker.opacity, null);\n            if (parentElement !== undefined && parentElement !== null) {\n                parentElement.appendChild(drawSymbol(location, argsData.shape, new Size(argsData.width, argsData.height), marker.imageUrl, shapeOption, point.x.toString() + ':' + y.toString()));\n            }\n            point.marker = {\n                border: argsData.border,\n                fill: argsData.fill,\n                height: argsData.height,\n                visible: true,\n                shape: argsData.shape,\n                width: argsData.width\n            };\n        }\n        else {\n            location = null;\n            point.marker = {\n                visible: false\n            };\n        }\n    }\n    createElement(series) {\n        let markerClipRect;\n        let marker = series.marker;\n        // 8 for extend border value 5 for extend size value\n        let explodeValue = marker.border.width + 8 + 5;\n        let render = series.chart.renderer;\n        let transform;\n        transform = series.chart.chartAreaType === 'Cartesian' ? 'translate(' + series.clipRect.x + ',' + (series.clipRect.y) + ')' : '';\n        if (marker.visible) {\n            let markerHeight = (marker.height + explodeValue) / 2;\n            let markerWidth = (marker.width + explodeValue) / 2;\n            if (series.chart.chartAreaType === 'Cartesian') {\n                markerClipRect = render.drawClipPath(new RectOption(this.elementId + '_ChartMarkerClipRect_' + series.index, 'transparent', { width: 1, color: 'Gray' }, 1, {\n                    x: -markerWidth, y: -markerHeight,\n                    width: series.clipRect.width + markerWidth * 2,\n                    height: series.clipRect.height + markerHeight * 2\n                }));\n            }\n            else {\n                markerClipRect = render.drawCircularClipPath(new CircleOption(this.elementId + '_ChartMarkerClipRect_' + series.index, 'transparent', { width: 1, color: 'Gray' }, 1, series.clipRect.width / 2 + series.clipRect.x, series.clipRect.height / 2 + series.clipRect.y, series.chart.radius + Math.max(markerHeight, markerWidth)));\n            }\n            series.symbolElement = render.createGroup({\n                'id': this.elementId + 'SymbolGroup' + series.index,\n                'transform': transform,\n                'clip-path': 'url(#' + this.elementId + '_ChartMarkerClipRect_' + series.index + ')'\n            });\n            series.symbolElement.appendChild(markerClipRect);\n        }\n    }\n    getRangeLowPoint(region, series) {\n        let x = region.x;\n        let y = region.y;\n        if (series.chart.requireInvertedAxis) {\n            y += region.height / 2;\n            x += series.yAxis.isInversed ? region.width : 0;\n        }\n        else {\n            y += series.yAxis.isInversed ? 0 : region.height;\n            x += region.width / 2;\n        }\n        return { x: x, y: y };\n    }\n    /**\n     * Animates the marker.\n     * @return {void}.\n     * @private\n     */\n    doMarkerAnimation(series) {\n        if (!(series.isRectSeries || series.type === 'Scatter' || series.type === 'Bubble' ||\n            (series.chart.chartAreaType === 'PolarRadar' && (series.drawType === 'Scatter' || series.drawType.indexOf('Column') > -1)))) {\n            let markerElements = series.symbolElement.childNodes;\n            let delay = series.animation.delay + series.animation.duration;\n            let j = 1;\n            let incFactor = series.type === 'RangeArea' ? 2 : 1;\n            for (let i = 0; i < series.points.length; i++) {\n                if (!series.points[i].symbolLocations.length || !markerElements[j]) {\n                    continue;\n                }\n                markerAnimate(markerElements[j], delay, 200, series, i, series.points[i].symbolLocations[0], false);\n                if (incFactor === 2) {\n                    let lowPoint = this.getRangeLowPoint(series.points[i].regions[0], series);\n                    markerAnimate(markerElements[j + 1], delay, 200, series, i, lowPoint, false);\n                }\n                j += incFactor;\n            }\n        }\n    }\n}\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Font, Border } from '../model/base';\nimport { Theme } from '../model/theme';\nimport { Size, Rect, subtractThickness, Thickness, drawSymbol, measureText, ChartLocation, PathOption } from '../utils/helper';\nimport { RectOption, TextOption, textElement, stringToNumber, removeElement, showTooltip, getElement } from '../utils/helper';\n/**\n * Configures the location for the legend.\n */\nexport class Location extends ChildProperty {\n}\n__decorate([\n    Property(0)\n], Location.prototype, \"x\", void 0);\n__decorate([\n    Property(0)\n], Location.prototype, \"y\", void 0);\n/**\n * Configures the legends in charts.\n */\nexport class LegendSettings extends ChildProperty {\n}\n__decorate([\n    Property(true)\n], LegendSettings.prototype, \"visible\", void 0);\n__decorate([\n    Property(null)\n], LegendSettings.prototype, \"height\", void 0);\n__decorate([\n    Property(null)\n], LegendSettings.prototype, \"width\", void 0);\n__decorate([\n    Complex({ x: 0, y: 0 }, Location)\n], LegendSettings.prototype, \"location\", void 0);\n__decorate([\n    Property('Auto')\n], LegendSettings.prototype, \"position\", void 0);\n__decorate([\n    Property(8)\n], LegendSettings.prototype, \"padding\", void 0);\n__decorate([\n    Property('Center')\n], LegendSettings.prototype, \"alignment\", void 0);\n__decorate([\n    Complex(Theme.legendLabelFont, Font)\n], LegendSettings.prototype, \"textStyle\", void 0);\n__decorate([\n    Property(10)\n], LegendSettings.prototype, \"shapeHeight\", void 0);\n__decorate([\n    Property(10)\n], LegendSettings.prototype, \"shapeWidth\", void 0);\n__decorate([\n    Complex({}, Border)\n], LegendSettings.prototype, \"border\", void 0);\n__decorate([\n    Property(5)\n], LegendSettings.prototype, \"shapePadding\", void 0);\n__decorate([\n    Property('transparent')\n], LegendSettings.prototype, \"background\", void 0);\n__decorate([\n    Property(1)\n], LegendSettings.prototype, \"opacity\", void 0);\n__decorate([\n    Property(true)\n], LegendSettings.prototype, \"toggleVisibility\", void 0);\n__decorate([\n    Property(null)\n], LegendSettings.prototype, \"description\", void 0);\n__decorate([\n    Property(3)\n], LegendSettings.prototype, \"tabIndex\", void 0);\n/**\n * Legend base class for Chart and Accumulation chart.\n * @private\n */\nexport class BaseLegend {\n    /**\n     * Constructor for the dateTime module.\n     * @private\n     */\n    constructor(chart) {\n        this.rowCount = 0; // legend row counts per page \n        this.columnCount = 0; // legend column counts per page \n        this.pageButtonSize = 8;\n        this.pageXCollections = []; // pages of x locations\n        this.maxColumns = 0;\n        this.isTrimmed = false;\n        this.maxWidth = 0;\n        this.currentPage = 1;\n        this.chart = chart;\n        this.legend = chart.legendSettings;\n        this.legendID = chart.element.id + '_chart_legend';\n        this.isChartControl = (chart.getModuleName() === 'chart');\n    }\n    /**\n     * Calculate the bounds for the legends.\n     * @return {void}\n     * @private\n     */\n    calculateLegendBounds(rect, availableSize) {\n        let legend = this.legend;\n        this.getPosition(legend.position, availableSize);\n        this.legendBounds = new Rect(rect.x, rect.y, 0, 0);\n        this.isVertical = (this.position === 'Left' || this.position === 'Right');\n        if (this.isVertical) {\n            this.legendBounds.height = stringToNumber(legend.height, availableSize.height - (rect.y - this.chart.margin.top)) || rect.height;\n            this.legendBounds.width = stringToNumber(legend.width || '20%', availableSize.width);\n        }\n        else {\n            this.legendBounds.width = stringToNumber(legend.width, availableSize.width) || rect.width;\n            this.legendBounds.height = stringToNumber(legend.height || '20%', availableSize.height);\n        }\n        this.library.getLegendBounds(availableSize, this.legendBounds, legend);\n        this.getLocation(this.position, legend.alignment, this.legendBounds, rect, availableSize);\n    }\n    /**\n     * To find legend position based on available size for chart and accumulation chart\n     */\n    getPosition(position, availableSize) {\n        if (this.isChartControl) {\n            this.position = (position !== 'Auto') ? position : 'Bottom';\n        }\n        else {\n            if (position === 'Auto' && this.chart.visibleSeries &&\n                (this.chart.visibleSeries[0].type === 'Funnel' || this.chart.visibleSeries[0].type === 'Pyramid')) {\n                position = 'Top';\n            }\n            this.position = (position !== 'Auto') ? position :\n                (availableSize.width > availableSize.height ? 'Right' : 'Bottom');\n        }\n    }\n    /**\n     * To set bounds for chart and accumulation chart\n     */\n    setBounds(computedWidth, computedHeight, legend, legendBounds) {\n        computedWidth = computedWidth < legendBounds.width ? computedWidth : legendBounds.width;\n        computedHeight = computedHeight < legendBounds.height ? computedHeight : legendBounds.height;\n        legendBounds.width = !legend.width ? computedWidth : legendBounds.width;\n        legendBounds.height = !legend.height ? computedHeight : legendBounds.height;\n        this.rowCount = Math.max(1, Math.ceil((legendBounds.height - legend.padding) / (this.maxItemHeight + legend.padding)));\n    }\n    /**\n     * To find legend location based on position, alignment for chart and accumulation chart\n     */\n    getLocation(position, alignment, legendBounds, rect, availableSize) {\n        let padding = this.legend.border.width;\n        let legendHeight = legendBounds.height + padding;\n        let legendWidth = legendBounds.width + padding;\n        let marginBottom = this.chart.margin.bottom;\n        if (position === 'Bottom') {\n            legendBounds.x = this.alignLegend(legendBounds.x, availableSize.width, legendBounds.width, alignment);\n            legendBounds.y = rect.y + (rect.height - legendHeight) + padding;\n            subtractThickness(rect, new Thickness(0, 0, 0, legendHeight));\n        }\n        else if (position === 'Top') {\n            legendBounds.x = this.alignLegend(legendBounds.x, availableSize.width, legendBounds.width, alignment);\n            legendBounds.y = rect.y + padding;\n            subtractThickness(rect, new Thickness(0, 0, legendHeight, 0));\n        }\n        else if (position === 'Right') {\n            legendBounds.x = rect.x + (rect.width - legendBounds.width);\n            legendBounds.y = rect.y + this.alignLegend(0, availableSize.height - (rect.y + marginBottom), legendBounds.height, alignment);\n            subtractThickness(rect, new Thickness(0, legendWidth, 0, 0));\n        }\n        else if (position === 'Left') {\n            legendBounds.y = rect.y + this.alignLegend(0, availableSize.height - (rect.y + marginBottom), legendBounds.height, alignment);\n            subtractThickness(rect, new Thickness(legendWidth, 0, 0, 0));\n        }\n        else {\n            legendBounds.x = this.legend.location.x;\n            legendBounds.y = this.legend.location.y;\n            subtractThickness(rect, new Thickness(0, 0, 0, 0));\n        }\n    }\n    /**\n     * To find legend alignment for chart and accumulation chart\n     */\n    alignLegend(start, size, legendSize, alignment) {\n        switch (alignment) {\n            case 'Far':\n                start = (size - legendSize) - start;\n                break;\n            case 'Center':\n                start = ((size - legendSize) / 2);\n                break;\n        }\n        return start;\n    }\n    /**\n     * Renders the legend.\n     * @return {void}\n     * @private\n     */\n    renderLegend(chart, legend, legendBounds) {\n        let firstLegend = this.findFirstLegendPosition(this.legendCollections);\n        let padding = legend.padding;\n        this.maxItemHeight = Math.max(this.legendCollections[0].textSize.height, legend.shapeHeight);\n        let legendGroup = chart.renderer.createGroup({ id: this.legendID + '_g' });\n        let legendTranslateGroup = this.createLegendElements(chart, legendBounds, legendGroup, legend, this.legendID);\n        if (firstLegend !== this.legendCollections.length) {\n            let legendSeriesGroup; // legendItem group for each series group element\n            let start; // starting shape center x,y position && to resolve lint error used new line for declaration\n            start = new ChartLocation(legendBounds.x + padding + (legend.shapeWidth / 2), legendBounds.y + padding + this.maxItemHeight / 2);\n            let textOptions = new TextOption('', start.x, start.y, 'start');\n            //  initialization for totalPages legend click totalpage again calculate\n            this.totalPages = this.isChartControl ? this.totalPages : 0;\n            let textPadding = legend.shapePadding + padding + legend.shapeWidth;\n            let count = 0;\n            this.pageXCollections = [];\n            this.legendCollections[firstLegend].location = start;\n            let previousLegend = this.legendCollections[firstLegend];\n            for (let legendOption of this.legendCollections) {\n                if (legendOption.render && legendOption.text !== '') {\n                    legendSeriesGroup = chart.renderer.createGroup({\n                        id: this.legendID + this.generateId(legendOption, '_g_', count)\n                    });\n                    legendSeriesGroup.setAttribute('tabindex', legend.tabIndex.toString());\n                    legendSeriesGroup.setAttribute('aria-label', legend.description || 'Click to show or hide the ' + legendOption.text + ' series');\n                    this.library.getRenderPoint(legendOption, start, textPadding, previousLegend, legendBounds, count, firstLegend);\n                    this.renderSymbol(legendOption, legendSeriesGroup, count);\n                    this.renderText(chart, legendOption, legendSeriesGroup, textOptions, count);\n                    legendSeriesGroup.setAttribute('style', 'cursor: ' + ((!legend.toggleVisibility && chart.selectionMode === 'None') ? 'auto' : 'pointer'));\n                    legendTranslateGroup.appendChild(legendSeriesGroup);\n                    previousLegend = legendOption;\n                }\n                count++;\n            }\n            if (this.isPaging) {\n                this.renderPagingElements(chart, legendBounds, textOptions, legendGroup);\n            }\n        }\n        chart.svgObject.appendChild(legendGroup);\n    }\n    /**\n     * To find first valid legend text index for chart and accumulation chart\n     */\n    findFirstLegendPosition(legendCollection) {\n        let count = 0;\n        for (let legend of legendCollection) {\n            if (legend.render && legend.text !== '') {\n                break;\n            }\n            count++;\n        }\n        return count;\n    }\n    /**\n     * To create legend rendering elements for chart and accumulation chart\n     */\n    createLegendElements(chart, legendBounds, legendGroup, legend, id) {\n        let padding = legend.padding;\n        let options = new RectOption(id + '_element', legend.background, legend.border, legend.opacity, legendBounds);\n        legendGroup.appendChild(chart.renderer.drawRectangle(options));\n        let legendItemsGroup = chart.renderer.createGroup({ id: id + '_collections' });\n        legendGroup.appendChild(legendItemsGroup);\n        this.legendTranslateGroup = chart.renderer.createGroup({ id: id + '_translate_g' });\n        legendItemsGroup.appendChild(this.legendTranslateGroup);\n        let clippath = chart.renderer.createClipPath({ id: id + '_clipPath' });\n        options.y += padding;\n        options.id += '_clipPath_rect';\n        options.width = (!this.isChartControl && this.isVertical) ? this.maxWidth - padding : legendBounds.width;\n        this.clipRect = chart.renderer.drawRectangle(options);\n        clippath.appendChild(this.clipRect);\n        chart.svgObject.appendChild(clippath);\n        legendItemsGroup.setAttribute('style', 'clip-path:url(#' + clippath.id + ')');\n        return this.legendTranslateGroup;\n    }\n    /**\n     * To render legend symbols for chart and accumulation chart\n     */\n    renderSymbol(legendOption, group, i) {\n        let symbolColor = legendOption.visible ? legendOption.fill : '#D3D3D3';\n        let shape = (legendOption.shape === 'SeriesType') ? legendOption.type : legendOption.shape;\n        shape = shape === 'Scatter' ? legendOption.markerShape : shape;\n        let symbolOption = new PathOption(this.legendID + this.generateId(legendOption, '_shape_', i), symbolColor, 1, symbolColor, 1, '', '');\n        group.appendChild(drawSymbol(legendOption.location, shape, new Size(this.legend.shapeWidth, this.legend.shapeHeight), '', symbolOption, 'Click to show or hide the ' + legendOption.text + ' series'));\n        if (shape === 'Line' && legendOption.markerVisibility && legendOption.markerShape !== 'Image' ||\n            legendOption.type === 'Doughnut') {\n            symbolOption.id = this.legendID + this.generateId(legendOption, '_shape_marker_', i);\n            shape = legendOption.type === 'Doughnut' ? 'Circle' : legendOption.markerShape;\n            symbolOption.fill = legendOption.type === 'Doughnut' ? '#FFFFFF' : symbolOption.fill;\n            group.appendChild(drawSymbol(legendOption.location, shape, new Size(this.legend.shapeWidth / 2, this.legend.shapeHeight / 2), '', symbolOption, 'Click to show or hide the ' + legendOption.text + ' series'));\n        }\n    }\n    /**\n     * To render legend text for chart and accumulation chart\n     */\n    renderText(chart, legendOption, group, textOptions, i) {\n        let legend = chart.legendSettings;\n        let hiddenColor = '#D3D3D3';\n        textOptions.id = this.legendID + this.generateId(legendOption, '_text_', i);\n        let fontcolor = legendOption.visible ? legend.textStyle.color || chart.themeStyle.legendLabel : hiddenColor;\n        textOptions.text = legendOption.text;\n        textOptions.x = legendOption.location.x + (legend.shapeWidth / 2) + legend.shapePadding;\n        textOptions.y = legendOption.location.y + this.maxItemHeight / 4;\n        let element = textElement(textOptions, legend.textStyle, fontcolor, group);\n        element.setAttribute('aria-label', legend.description || 'Click to show or hide the ' + legendOption.text + ' series');\n    }\n    /**\n     * To render legend paging elements for chart and accumulation chart\n     */\n    renderPagingElements(chart, bounds, textOption, legendGroup) {\n        let paginggroup = chart.renderer.createGroup({ id: this.legendID + '_navigation' });\n        legendGroup.appendChild(paginggroup);\n        let grayColor = '#545454';\n        let legend = chart.legendSettings; // to solve parameter lint error, legend declaration is here\n        let padding = 8; // const padding for paging elements\n        if (this.isChartControl || !this.isVertical) {\n            this.totalPages = Math.ceil(this.totalPages / Math.max(1, this.rowCount - 1));\n        }\n        else {\n            this.totalPages = Math.ceil(this.totalPages / this.maxColumns);\n        }\n        let symbolOption = new PathOption(this.legendID + '_pageup', 'transparent', 5, grayColor, 1, '', '');\n        let iconSize = this.pageButtonSize;\n        paginggroup.setAttribute('style', 'cursor: pointer');\n        // Page left arrow drawing calculation started here\n        this.clipPathHeight = (this.rowCount - 1) * (this.maxItemHeight + legend.padding);\n        this.clipRect.setAttribute('height', this.clipPathHeight.toString());\n        let x = bounds.x + iconSize / 2;\n        let y = bounds.y + this.clipPathHeight + ((bounds.height - this.clipPathHeight) / 2);\n        paginggroup.appendChild(drawSymbol({ x: x, y: y }, 'LeftArrow', new Size(iconSize, iconSize), '', symbolOption, 'LeftArrow'));\n        // Page numbering rendering calculation started here\n        textOption.x = x + (iconSize / 2) + padding;\n        let size = measureText(this.totalPages + '/' + this.totalPages, legend.textStyle);\n        textOption.y = y + (size.height / 4);\n        textOption.id = this.legendID + '_pagenumber';\n        textOption.text = '1/' + this.totalPages;\n        let pageTextElement = textElement(textOption, legend.textStyle, legend.textStyle.color, paginggroup);\n        // Page right arrow rendering calculation started here\n        x = (textOption.x + padding + (iconSize / 2) + size.width);\n        symbolOption.id = this.legendID + '_pagedown';\n        paginggroup.appendChild(drawSymbol({ x: x, y: y }, 'RightArrow', new Size(iconSize, iconSize), '', symbolOption, 'RightArrow'));\n        // placing the navigation buttons and page numbering in legend right corner\n        paginggroup.setAttribute('transform', 'translate(' + (bounds.width - (2 * (iconSize + padding) +\n            padding + size.width)) + ', ' + 0 + ')');\n        this.translatePage(pageTextElement, this.currentPage - 1, this.currentPage);\n    }\n    /**\n     * To translate legend pages for chart and accumulation chart\n     */\n    translatePage(pagingText, page, pageNumber) {\n        let size = (this.clipPathHeight) * page;\n        let translate = 'translate(0,-' + size + ')';\n        if (!this.isChartControl && this.isVertical) {\n            let pageLength = page * this.maxColumns;\n            size = this.pageXCollections[page * this.maxColumns] - this.legendBounds.x;\n            size = size < 0 ? 0 : size; // to avoid small pixel variation\n            translate = 'translate(-' + size + ',0)';\n        }\n        this.legendTranslateGroup.setAttribute('transform', translate);\n        pagingText.textContent = (pageNumber) + '/' + this.totalPages;\n        this.currentPage = pageNumber;\n    }\n    /**\n     * To change legend pages for chart and accumulation chart\n     */\n    changePage(event, pageUp) {\n        let pageText = document.getElementById(this.legendID + '_pagenumber');\n        let page = parseInt(pageText.textContent.split('/')[0], 10);\n        if (pageUp && page > 1) {\n            this.translatePage(pageText, (page - 2), (page - 1));\n        }\n        else if (!pageUp && page < this.totalPages) {\n            this.translatePage(pageText, page, (page + 1));\n        }\n    }\n    /**\n     * To find legend elements id based on chart or accumulation chart\n     * @private\n     */\n    generateId(option, prefix, count) {\n        if (this.isChartControl) {\n            return prefix + count;\n        }\n        else {\n            return prefix + option.pointIndex;\n        }\n    }\n    /**\n     * To show or hide trimmed text tooltip for legend.\n     * @return {void}\n     * @private\n     */\n    move(event) {\n        let x = this.chart.mouseX;\n        let y = this.chart.mouseY;\n        if (event.target.textContent.indexOf('...') > -1) {\n            let targetId = event.target.id.split(this.legendID + '_text_');\n            if (targetId.length === 2) {\n                let index = parseInt(targetId[1], 10);\n                let element = this.chart.element;\n                if (!isNaN(index)) {\n                    if (this.chart.isTouch) {\n                        removeElement(this.chart.element.id + '_EJ2_Legend_Tooltip');\n                    }\n                    if (this.isChartControl) {\n                        showTooltip(this.chart.series[index].name, x, y, element.offsetWidth, element.id + '_EJ2_Legend_Tooltip', getElement(this.chart.element.id + '_Secondary_Element'));\n                    }\n                    else {\n                        showTooltip(this.chart.visibleSeries[0].points[index].x.toString(), x + 10, y + 10, element.offsetWidth, element.id + '_EJ2_Legend_Tooltip', getElement(this.chart.element.id + '_Secondary_Element'));\n                    }\n                }\n            }\n        }\n        else {\n            removeElement(this.chart.element.id + '_EJ2_Legend_Tooltip');\n        }\n        if (this.chart.isTouch) {\n            clearTimeout(this.clearTooltip);\n            this.clearTooltip = setTimeout(() => { removeElement(this.chart.element.id + '_EJ2_Legend_Tooltip'); }, 1000);\n        }\n    }\n}\n/**\n * Class for legend options\n * @private\n */\nexport class LegendOptions {\n    constructor(text, fill, shape, visible, type, markerShape, markerVisibility, pointIndex, seriesIndex) {\n        this.location = { x: 0, y: 0 };\n        this.text = text;\n        this.fill = fill;\n        this.shape = shape;\n        this.visible = visible;\n        this.type = type;\n        this.markerVisibility = markerVisibility;\n        this.markerShape = markerShape;\n        this.pointIndex = pointIndex;\n        this.seriesIndex = seriesIndex;\n    }\n}\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='../series/chart-series-model.d.ts' />\nimport { Property, Complex } from '@syncfusion/ej2-base';\nimport { Connector } from '../../common/model/base';\nimport { SeriesBase } from '../series/chart-series';\nimport { Rect, firstToLowerCase } from '../../common/utils/helper';\n/**\n * Defines how to represent the market trend using technical indicators\n */\nexport class TechnicalIndicator extends SeriesBase {\n    constructor() {\n        super(...arguments);\n        /** @private */\n        this.clipRect = new Rect(0, 0, 0, 0);\n    }\n    /** @private */\n    setDataSource(series, chart) {\n        if (series) {\n            this.xData = series.xData;\n            this.yData = series.yData;\n            this.points = series.points;\n        }\n        let type = firstToLowerCase(this.type);\n        chart[type + 'IndicatorModule'].initDataSource(this, chart);\n        chart.visibleSeriesCount += this.targetSeries.length;\n    }\n}\n__decorate([\n    Property('Sma')\n], TechnicalIndicator.prototype, \"type\", void 0);\n__decorate([\n    Property(14)\n], TechnicalIndicator.prototype, \"period\", void 0);\n__decorate([\n    Property(14)\n], TechnicalIndicator.prototype, \"kPeriod\", void 0);\n__decorate([\n    Property(3)\n], TechnicalIndicator.prototype, \"dPeriod\", void 0);\n__decorate([\n    Property(80)\n], TechnicalIndicator.prototype, \"overBought\", void 0);\n__decorate([\n    Property(20)\n], TechnicalIndicator.prototype, \"overSold\", void 0);\n__decorate([\n    Property(2)\n], TechnicalIndicator.prototype, \"standardDeviation\", void 0);\n__decorate([\n    Property('Close')\n], TechnicalIndicator.prototype, \"field\", void 0);\n__decorate([\n    Property(12)\n], TechnicalIndicator.prototype, \"slowPeriod\", void 0);\n__decorate([\n    Property(26)\n], TechnicalIndicator.prototype, \"fastPeriod\", void 0);\n__decorate([\n    Property(true)\n], TechnicalIndicator.prototype, \"showZones\", void 0);\n__decorate([\n    Complex({ color: '#ff9933', width: 2 }, Connector)\n], TechnicalIndicator.prototype, \"macdLine\", void 0);\n__decorate([\n    Property('Both')\n], TechnicalIndicator.prototype, \"macdType\", void 0);\n__decorate([\n    Property('#2ecd71')\n], TechnicalIndicator.prototype, \"macdPositiveColor\", void 0);\n__decorate([\n    Property('#e74c3d')\n], TechnicalIndicator.prototype, \"macdNegativeColor\", void 0);\n__decorate([\n    Property('rgba(211,211,211,0.25)')\n], TechnicalIndicator.prototype, \"bandColor\", void 0);\n__decorate([\n    Complex({ color: '#ffb735', width: 1 }, Connector)\n], TechnicalIndicator.prototype, \"upperLine\", void 0);\n__decorate([\n    Complex({ color: '#f2ec2f', width: 1 }, Connector)\n], TechnicalIndicator.prototype, \"lowerLine\", void 0);\n__decorate([\n    Complex({ color: '#f2ec2f', width: 1 }, Connector)\n], TechnicalIndicator.prototype, \"periodLine\", void 0);\n__decorate([\n    Property('')\n], TechnicalIndicator.prototype, \"seriesName\", void 0);\n","import { print as printWindow, createElement, isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { getElement } from '../utils/helper';\nimport { beforePrint } from '../model/constants';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap } from '@syncfusion/ej2-pdf-export';\n/**\n * Annotation Module handles the Annotation for chart and accumulation series.\n */\nexport class ExportUtils {\n    /**\n     * Constructor for chart and accumulation annotation\n     * @param control\n     */\n    constructor(control) {\n        this.control = control;\n    }\n    /**\n     * To print the accumulation and chart elements\n     * @param elements\n     */\n    print(elements) {\n        this.printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n        this.printWindow.moveTo(0, 0);\n        this.printWindow.resizeTo(screen.availWidth, screen.availHeight);\n        let argsData = {\n            cancel: false, htmlContent: this.getHTMLContent(elements), name: beforePrint\n        };\n        this.control.trigger(beforePrint, argsData);\n        if (!argsData.cancel) {\n            printWindow(argsData.htmlContent, this.printWindow);\n        }\n    }\n    /**\n     * To get the html string of the chart and accumulation\n     * @param elements\n     * @private\n     */\n    getHTMLContent(elements) {\n        let div = createElement('div');\n        if (elements) {\n            if (elements instanceof Array) {\n                elements.forEach((value) => {\n                    div.appendChild(getElement(value).cloneNode(true));\n                });\n            }\n            else if (elements instanceof Element) {\n                div.appendChild(elements.cloneNode(true));\n            }\n            else {\n                div.appendChild(getElement(elements).cloneNode(true));\n            }\n        }\n        else {\n            div.appendChild(this.control.element.cloneNode(true));\n        }\n        return div;\n    }\n    /**\n     * To export the file as image/svg format\n     * @param type\n     * @param fileName\n     */\n    export(type, fileName, orientation) {\n        let element = createElement('canvas', {\n            id: 'ej2-canvas',\n            attrs: {\n                'width': this.control.availableSize.width.toString(),\n                'height': this.control.availableSize.height.toString()\n            }\n        });\n        let isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n        orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n        let svgData = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n            this.control.svgObject.outerHTML +\n            '</svg>';\n        let url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :\n            [(new XMLSerializer()).serializeToString(this.control.svgObject)], { type: 'image/svg+xml' }));\n        if (type === 'SVG') {\n            this.triggerDownload(fileName, type, url, isDownload);\n        }\n        else {\n            let image = new Image();\n            let ctx = element.getContext('2d');\n            image.onload = (() => {\n                ctx.drawImage(image, 0, 0);\n                window.URL.revokeObjectURL(url);\n                if (type === 'PDF') {\n                    let document = new PdfDocument();\n                    let imageString = element.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n                    document.pageSettings.orientation = orientation;\n                    imageString = imageString.slice(imageString.indexOf(',') + 1);\n                    document.pages.add().graphics.drawImage(new PdfBitmap(imageString), 0, 0, this.control.availableSize.width, this.control.availableSize.height);\n                    if (isDownload) {\n                        document.save(fileName + '.pdf');\n                        document.destroy();\n                    }\n                }\n                else {\n                    if (window.navigator.msSaveOrOpenBlob) {\n                        window.navigator.msSaveOrOpenBlob(element.msToBlob(), fileName + '.' + type.toLocaleLowerCase());\n                    }\n                    else {\n                        this.triggerDownload(fileName, type, element.toDataURL('image/png').replace('image/png', 'image/octet-stream'), isDownload);\n                    }\n                }\n            });\n            image.src = url;\n        }\n    }\n    /**\n     * To trigger the download element\n     * @param fileName\n     * @param type\n     * @param url\n     */\n    triggerDownload(fileName, type, url, isDownload) {\n        createElement('a', {\n            attrs: {\n                'download': fileName + '.' + type.toLocaleLowerCase(),\n                'href': url\n            }\n        }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n            view: window,\n            bubbles: false,\n            cancelable: true\n        }));\n    }\n}\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, Internationalization } from '@syncfusion/ej2-base';\nimport { L10n, createElement } from '@syncfusion/ej2-base';\nimport { ChildProperty } from '@syncfusion/ej2-base';\nimport { remove, extend } from '@syncfusion/ej2-base';\nimport { Browser, Touch } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, Complex, Collection } from '@syncfusion/ej2-base';\nimport { findClipRect, measureText, TextOption, showTooltip, removeElement } from '../common/utils/helper';\nimport { textElement, RectOption, createSvg, firstToLowerCase, titlePositionX } from '../common/utils/helper';\nimport { getSeriesColor, Theme, getThemeColor } from '../common/model/theme';\nimport { Margin, Border, ChartArea, Font, Indexes, TooltipSettings } from '../common/model/base';\nimport { Row, Column, Axis } from './axis/axis';\nimport { CartesianAxisLayoutPanel } from './axis/cartesian-panel';\nimport { Rect } from '../common/utils/helper';\nimport { ChartData } from './utils/get-data';\nimport { Series } from './series/chart-series';\nimport { Data } from '../common/model/data';\nimport { Marker } from './series/marker';\nimport { LegendSettings } from '../common/legend/legend';\nimport { TechnicalIndicator } from './technical-indicators/technical-indicator';\nimport { chartMouseClick, pointClick, pointMove, chartMouseLeave } from '../common/model/constants';\nimport { chartMouseDown, chartMouseMove, chartMouseUp, load } from '../common/model/constants';\nimport { ExportUtils } from '../common/utils/export';\nimport { ChartAnnotationSettings } from './model/chart-base';\nimport { getElement, getTitle } from '../common/utils/helper';\n/**\n * Configures the crosshair in the chart.\n */\nexport class CrosshairSettings extends ChildProperty {\n}\n__decorate([\n    Property(false)\n], CrosshairSettings.prototype, \"enable\", void 0);\n__decorate([\n    Complex({ color: null, width: 1 }, Border)\n], CrosshairSettings.prototype, \"line\", void 0);\n__decorate([\n    Property('Both')\n], CrosshairSettings.prototype, \"lineType\", void 0);\n/**\n * Configures the zooming behavior for the chart.\n */\nexport class ZoomSettings extends ChildProperty {\n}\n__decorate([\n    Property(false)\n], ZoomSettings.prototype, \"enableSelectionZooming\", void 0);\n__decorate([\n    Property(false)\n], ZoomSettings.prototype, \"enablePinchZooming\", void 0);\n__decorate([\n    Property(false)\n], ZoomSettings.prototype, \"enableMouseWheelZooming\", void 0);\n__decorate([\n    Property(true)\n], ZoomSettings.prototype, \"enableDeferredZooming\", void 0);\n__decorate([\n    Property('XY')\n], ZoomSettings.prototype, \"mode\", void 0);\n__decorate([\n    Property(['Zoom', 'ZoomIn', 'ZoomOut', 'Pan', 'Reset'])\n], ZoomSettings.prototype, \"toolbarItems\", void 0);\n__decorate([\n    Property(false)\n], ZoomSettings.prototype, \"enablePan\", void 0);\n/**\n * Represents the Chart control.\n * ```html\n * <div id=\"chart\"/>\n * <script>\n *   var chartObj = new Chart({ isResponsive : true });\n *   chartObj.appendTo(\"#chart\");\n * </script>\n * ```\n */\nlet Chart = class Chart extends Component {\n    /**\n     * Constructor for creating the widget\n     * @hidden\n     */\n    constructor(options, element) {\n        super(options, element);\n        /** @private */\n        this.chartAreaType = 'Cartesian';\n    }\n    /**\n     * Initialize the event handler.\n     */\n    preRender() {\n        this.unWireEvents();\n        this.initPrivateVariable();\n        this.setCulture();\n        this.wireEvents();\n    }\n    initPrivateVariable() {\n        this.animateSeries = true;\n        this.delayRedraw = false;\n        this.horizontalAxes = [];\n        this.verticalAxes = [];\n        this.refreshAxis();\n        this.refreshDefinition(this.rows);\n        this.refreshDefinition(this.columns);\n        if (this.tooltipModule) {\n            this.tooltipModule.previousPoints = [];\n        }\n    }\n    /**\n     * To Initialize the control rendering.\n     */\n    render() {\n        this.trigger(load, { chart: this });\n        this.createChartSvg();\n        this.setTheme();\n        this.markerRender = new Marker(this);\n        this.calculateAreaType();\n        this.calculateVisibleSeries();\n        this.initTechnicalIndicators();\n        this.initTrendLines();\n        this.calculateVisibleAxis();\n        this.processData();\n    }\n    /**\n     * Gets the localized label by locale keyword.\n     * @param  {string} key\n     * @return {string}\n     */\n    getLocalizedLabel(key) {\n        return this.localeObject.getConstant(key);\n    }\n    /**\n     * Refresh the chart bounds.\n     * @private\n     */\n    refreshBound() {\n        if (this.legendModule && this.legendSettings.visible) {\n            this.legendModule.getLegendOptions(this.visibleSeries, this);\n        }\n        let isCalculateStacking = false;\n        let series;\n        for (let i = 0, len = this.visibleSeries.length; i < len; i++) {\n            series = this.visibleSeries[i];\n            series.position = series.rectCount = undefined;\n            if (((series.type.indexOf('Stacking') !== -1) || (series.drawType.indexOf('Stacking') !== -1\n                && this.chartAreaType === 'PolarRadar')) && !isCalculateStacking) {\n                series.calculateStackedValue(series.type.indexOf('100') > -1, this);\n                isCalculateStacking = true;\n            }\n        }\n        this.calculateBounds();\n        this.renderElements();\n    }\n    renderElements() {\n        this.renderBorder();\n        this.renderTitle();\n        this.renderAreaBorder();\n        let axisElement = this.renderAxes();\n        this.renderSeriesElements(axisElement);\n        this.renderLegend();\n        this.applyZoomkit();\n        this.performSelection();\n        this.setSecondaryElementPosition();\n        this.renderAnnotation();\n    }\n    /**\n     * To render the legend\n     */\n    renderAxes() {\n        this.yAxisElements = this.renderer.createGroup({ id: this.element.id + 'yAxisCollection' });\n        let axisElement;\n        if (this.rows.length > 0 && this.columns.length > 0) {\n            axisElement = this.chartAxisLayoutPanel.renderAxes();\n        }\n        if (this.stripLineModule) {\n            this.stripLineModule.renderStripLine(this, 'Behind', this.axisCollections);\n        }\n        return axisElement;\n    }\n    /**\n     * To render the legend\n     */\n    renderLegend() {\n        if (this.legendModule && this.legendModule.legendCollections.length) {\n            this.legendModule.renderLegend(this, this.legendSettings, this.legendModule.legendBounds);\n        }\n        this.element.appendChild(this.svgObject);\n    }\n    /**\n     * To set the left and top position for data label template for center aligned chart\n     */\n    setSecondaryElementPosition() {\n        let element = getElement(this.element.id + '_Secondary_Element');\n        if (!element) {\n            return;\n        }\n        let rect = this.element.getBoundingClientRect();\n        let svgRect = getElement(this.element.id + '_svg').getBoundingClientRect();\n        element.style.left = Math.max(svgRect.left - rect.left, 0) + 'px';\n        element.style.top = Math.max(svgRect.top - rect.top, 0) + 'px';\n    }\n    initializeModuleElements() {\n        this.dataLabelCollections = [];\n        this.seriesElements = this.renderer.createGroup({ id: this.element.id + 'SeriesCollection' });\n        if (this.indicators.length) {\n            this.indicatorElements = this.renderer.createGroup({ id: this.element.id + 'IndicatorCollection' });\n        }\n        if (this.hasTrendlines()) {\n            this.trendLineElements = this.renderer.createGroup({ id: this.element.id + 'TrendLineCollection' });\n        }\n        this.dataLabelElements = this.renderer.createGroup({ id: this.element.id + 'DataLabelCollection' });\n    }\n    hasTrendlines() {\n        let isTrendline;\n        for (let series of this.series) {\n            isTrendline = series.trendlines.length ? true : false;\n            if (isTrendline) {\n                break;\n            }\n        }\n        return isTrendline;\n    }\n    renderSeriesElements(axisElement) {\n        // Initialize the series elements values\n        this.initializeModuleElements();\n        let tooltipDiv = document.createElement('div');\n        tooltipDiv.id = this.element.id + '_Secondary_Element';\n        tooltipDiv.setAttribute('style', 'position: relative');\n        this.element.appendChild(tooltipDiv);\n        // For userInteraction\n        if (this.tooltip.enable) {\n            this.svgObject.appendChild(this.renderer.createGroup({ id: this.element.id + '_UserInteraction', style: 'pointer-events:none;' }));\n        }\n        if (this.rows.length > 0 && this.columns.length > 0) {\n            this.initializeIndicator();\n            this.initializeTrendLine();\n            this.renderSeries();\n            this.appendElementsAfterSeries(axisElement);\n        }\n    }\n    renderSeries() {\n        for (let item of this.visibleSeries) {\n            if (item.visible) {\n                findClipRect(item);\n                item.renderSeries(this, item.index);\n            }\n        }\n        let clipRect = this.renderer.drawClipPath({\n            'id': this.element.id + '_ChartAreaClipRect_',\n            'x': this.chartAxisLayoutPanel.seriesClipRect.x,\n            'y': this.chartAxisLayoutPanel.seriesClipRect.y,\n            'width': this.chartAxisLayoutPanel.seriesClipRect.width,\n            'height': this.chartAxisLayoutPanel.seriesClipRect.height,\n            'fill': 'transparent',\n            'stroke-width': 1,\n            'stroke': 'Gray'\n        });\n        this.seriesElements.appendChild(clipRect);\n        this.svgObject.appendChild(this.seriesElements);\n    }\n    initializeIndicator() {\n        for (let indicator of this.indicators) {\n            if (this[firstToLowerCase(indicator.type) + 'IndicatorModule']) {\n                this[firstToLowerCase(indicator.type) + 'IndicatorModule'].createIndicatorElements(this, indicator, indicator.index);\n            }\n        }\n        if (this.indicatorElements) {\n            this.svgObject.appendChild(this.indicatorElements);\n        }\n    }\n    initializeTrendLine() {\n        for (let series of this.visibleSeries) {\n            if (series.trendlines.length) {\n                this.trendLineModule.getTrendLineElements(series, this);\n            }\n        }\n        if (this.trendLineElements) {\n            this.svgObject.appendChild(this.trendLineElements);\n        }\n    }\n    appendElementsAfterSeries(axisElement) {\n        if (this.chartAreaType === 'PolarRadar') {\n            this.svgObject.appendChild(this.yAxisElements);\n        }\n        this.svgObject.appendChild(axisElement);\n        if (this.stripLineModule) {\n            this.stripLineModule.renderStripLine(this, 'Over', this.axisCollections);\n        }\n        if (!this.tooltip.enable) {\n            this.svgObject.appendChild(this.renderer.createGroup({ id: this.element.id + '_UserInteraction', style: 'pointer-events:none;' }));\n        }\n    }\n    applyZoomkit() {\n        if (this.zoomModule && this.zoomModule.isZoomed && (!this.zoomSettings.enablePan || this.zoomModule.performedUI)) {\n            this.zoomModule.applyZoomToolkit(this, this.axisCollections);\n        }\n    }\n    renderAnnotation() {\n        if (this.annotationModule) {\n            this.annotationModule.renderAnnotations(getElement(this.element.id + '_Secondary_Element'));\n        }\n    }\n    performSelection() {\n        let selectedDataIndexes = [];\n        if (this.selectionModule) {\n            selectedDataIndexes = extend([], this.selectionModule.selectedDataIndexes, null, true);\n            this.selectionModule.invokeSelection(this);\n        }\n        if (selectedDataIndexes.length > 0) {\n            this.selectionModule.selectedDataIndexes = selectedDataIndexes;\n            this.selectionModule.redrawSelection(this, this.selectionMode);\n        }\n    }\n    processData() {\n        let series;\n        this.visibleSeriesCount = 0;\n        let check = true;\n        for (let series of this.visibleSeries) {\n            if (!series.visible && !this.legendSettings.visible) {\n                this.visibleSeriesCount++;\n                continue;\n            }\n            if (series.category !== 'Indicator' && series.category !== 'TrendLine') {\n                this.initializeDataModule(series);\n            }\n        }\n        for (let indicator of this.indicators) {\n            if (indicator.dataSource) {\n                let techIndicator = indicator;\n                this.initializeDataModule(techIndicator);\n                check = false;\n            }\n        }\n        if (!this.visibleSeries.length || this.visibleSeriesCount === this.visibleSeries.length && check) {\n            this.refreshBound();\n            this.trigger('loaded', { chart: this });\n        }\n    }\n    initializeDataModule(series) {\n        series.xData = [];\n        series.yData = [];\n        series.dataModule = new Data(series.dataSource, series.query);\n        series.points = [];\n        series.refreshDataManager(this);\n    }\n    calculateBounds() {\n        let margin = this.margin;\n        // Title Height;\n        let titleHeight = 0;\n        let padding = 15;\n        let left = margin.left;\n        let width = this.availableSize.width - left - margin.right - this.border.width;\n        this.titleCollection = [];\n        if (this.title) {\n            this.titleCollection = getTitle(this.title, this.titleStyle, width);\n            titleHeight = (measureText(this.title, this.titleStyle).height * this.titleCollection.length) + padding;\n        }\n        let top = margin.top + titleHeight + this.chartArea.border.width / 2;\n        let height = this.availableSize.height - top - this.border.width - margin.bottom;\n        this.initialClipRect = new Rect(left, top, width, height);\n        if (this.legendModule) {\n            this.legendModule.calculateLegendBounds(this.initialClipRect, this.availableSize);\n        }\n        this.chartAxisLayoutPanel.measureAxis(this.initialClipRect);\n    }\n    /**\n     * Handles the print method for chart control.\n     */\n    print(id) {\n        let exportChart = new ExportUtils(this);\n        exportChart.print(id);\n    }\n    /**\n     * Handles the export method for chart control.\n     * @param type\n     * @param fileName\n     */\n    export(type, fileName, orientation) {\n        let exportChart = new ExportUtils(this);\n        exportChart.export(type, fileName, orientation);\n    }\n    /**\n     * Defines the trendline initialization\n     */\n    initTrendLines() {\n        for (let series of this.visibleSeries) {\n            let trendIndex = 0;\n            for (let trendline of series.trendlines) {\n                let trendLine = trendline;\n                let type = firstToLowerCase(trendLine.type);\n                if (this.trendLineModule) {\n                    trendLine.index = trendIndex;\n                    trendLine.sourceIndex = series.index;\n                    this.trendLineModule.initSeriesCollection(trendLine, this);\n                    if (trendLine.targetSeries) {\n                        trendLine.targetSeries.xAxisName = series.xAxisName;\n                        trendLine.targetSeries.yAxisName = series.yAxisName;\n                        this.visibleSeries.push(trendLine.targetSeries);\n                    }\n                }\n                trendIndex++;\n            }\n        }\n    }\n    calculateAreaType() {\n        let series = this.series[0];\n        if (series) {\n            this.requireInvertedAxis = ((series.type.indexOf('Bar') !== -1) && !this.isTransposed) ||\n                ((series.type.indexOf('Bar') === -1) && this.isTransposed && this.chartAreaType !== 'PolarRadar');\n        }\n        this.chartAxisLayoutPanel = this.chartAreaType === 'PolarRadar' ? (this.polarSeriesModule || this.radarSeriesModule)\n            : new CartesianAxisLayoutPanel(this);\n    }\n    calculateVisibleAxis() {\n        let axis;\n        let series;\n        let axes = [this.primaryXAxis, this.primaryYAxis];\n        axes = this.chartAreaType === 'Cartesian' ? axes.concat(this.axes) : axes;\n        this.axisCollections = [];\n        if (this.zoomModule) {\n            this.zoomModule.isPanning = this.zoomModule.isAxisZoomed(axes) && this.zoomSettings.enablePan;\n            this.svgObject.setAttribute('cursor', this.zoomModule.isPanning ? 'pointer' : 'auto');\n        }\n        for (let i = 0, len = axes.length; i < len; i++) {\n            axis = axes[i];\n            axis.series = [];\n            axis.labels = [];\n            for (let series of this.visibleSeries) {\n                this.initAxis(series, axis, true);\n            }\n            for (let indicator of this.indicators) {\n                this.initAxis(indicator, axis, false);\n            }\n            if (axis.orientation != null) {\n                this.axisCollections.push(axis);\n            }\n        }\n        if (this.rows.length > 0 && this.columns.length > 0) {\n            this.chartAxisLayoutPanel.measure();\n        }\n    }\n    initAxis(series, axis, isSeries) {\n        if (series.xAxisName === axis.name || (series.xAxisName == null && axis.name === 'primaryXAxis')) {\n            axis.orientation = this.requireInvertedAxis ? 'Vertical' : 'Horizontal';\n            series.xAxis = axis;\n            if (isSeries) {\n                axis.series.push(series);\n            }\n        }\n        else if (series.yAxisName === axis.name || (series.yAxisName == null && axis.name === 'primaryYAxis')) {\n            axis.orientation = this.requireInvertedAxis ? 'Horizontal' : 'Vertical';\n            series.yAxis = axis;\n            if (isSeries) {\n                axis.series.push(series);\n            }\n        }\n    }\n    initTechnicalIndicators() {\n        let i = 0;\n        for (let indicator of this.indicators) {\n            let techIndicator = indicator;\n            let type = firstToLowerCase(techIndicator.type);\n            if (this[type + 'IndicatorModule']) {\n                techIndicator.index = i;\n                this[type + 'IndicatorModule'].initSeriesCollection(techIndicator, this);\n                for (let targetSeries of techIndicator.targetSeries) {\n                    if (indicator.seriesName || indicator.dataSource) {\n                        this.visibleSeries.push(targetSeries);\n                    }\n                }\n            }\n            i++;\n        }\n    }\n    /** @private */\n    refreshTechnicalIndicator(series) {\n        if (this.indicators.length) {\n            let targetIndicator = null;\n            if (series instanceof Series && series.category !== 'Indicator') {\n                for (let indicator of this.indicators) {\n                    if (indicator.seriesName === series.name && !indicator.dataSource) {\n                        targetIndicator = indicator;\n                        targetIndicator.setDataSource(series, this);\n                    }\n                }\n            }\n            else if (series instanceof TechnicalIndicator) {\n                targetIndicator = series;\n                targetIndicator.setDataSource(series instanceof Series ? series : null, this);\n            }\n        }\n    }\n    calculateVisibleSeries() {\n        let series;\n        this.visibleSeries = [];\n        let colors = this.palettes.length ? this.palettes : getSeriesColor(this.theme);\n        let count = colors.length;\n        for (let i = 0, len = this.series.length; i < len; i++) {\n            series = this.series[i];\n            series.index = i;\n            series.interior = series.fill || colors[i % count];\n            switch (series.type) {\n                case 'Bar':\n                case 'StackingBar':\n                case 'StackingBar100':\n                    if (this.series[0].type.indexOf('Bar') === -1) {\n                        continue;\n                    }\n                    break;\n                case 'Polar':\n                case 'Radar':\n                    if (this.chartAreaType !== 'PolarRadar') {\n                        continue;\n                    }\n                    if (this.chartAreaType === 'PolarRadar' && ((series.xAxisName === null && series.yAxisName !== null) ||\n                        (series.xAxisName !== null && series.yAxisName === null) ||\n                        (series.xAxisName !== null && series.yAxisName !== null))) {\n                        continue;\n                    }\n                    break;\n                default:\n                    if (this.chartAreaType === 'PolarRadar' || this.series[0].type.indexOf('Bar') > -1) {\n                        continue;\n                    }\n                    break;\n            }\n            this.visibleSeries.push(series);\n            this.series[i] = series;\n        }\n    }\n    renderTitle() {\n        if (this.title) {\n            let anchor = this.titleStyle.textAlignment === 'Near' ? 'start' :\n                this.titleStyle.textAlignment === 'Far' ? 'end' : 'middle';\n            this.elementSize = measureText(this.title, this.titleStyle);\n            let options = new TextOption(this.element.id + '_ChartTitle', titlePositionX(this.availableSize, this.margin.left, this.margin.right, this.titleStyle), this.margin.top + ((this.elementSize.height) * 3 / 4), anchor, this.titleCollection, '', 'auto');\n            let element = textElement(options, this.titleStyle, this.titleStyle.color || this.themeStyle.chartTitle, this.svgObject);\n            element.setAttribute('aria-label', this.description || this.title);\n            element.setAttribute('tabindex', this.tabIndex.toString());\n        }\n    }\n    renderBorder() {\n        let width = this.border.width;\n        let rect = new RectOption(this.element.id + '_ChartBorder', this.background || this.themeStyle.background, this.border, 1, new Rect(width / 2, width / 2, this.availableSize.width - width, this.availableSize.height - width));\n        this.htmlObject = this.renderer.drawRectangle(rect);\n        this.svgObject.appendChild(this.htmlObject);\n    }\n    renderAreaBorder() {\n        if (this.chartAreaType === 'PolarRadar') {\n            return null;\n        }\n        else {\n            let rect = new RectOption(this.element.id + '_ChartAreaBorder', this.chartArea.background, { width: this.chartArea.border.width, color: this.chartArea.border.color || this.themeStyle.areaBorder }, this.chartArea.opacity, this.chartAxisLayoutPanel.seriesClipRect);\n            this.htmlObject = this.renderer.drawRectangle(rect);\n            this.svgObject.appendChild(this.htmlObject);\n        }\n    }\n    /**\n     * To add series for the chart\n     * @param {SeriesModel[]} seriesCollection - Defines the series collection to be added in chart.\n     * @return {void}.\n     */\n    addSeries(seriesCollection) {\n        for (let series of seriesCollection) {\n            series = new Series(this, 'series', series);\n            this.series.push(series);\n        }\n        this.refresh();\n    }\n    /**\n     * To Remove series for the chart\n     * @param index - Defines the series index to be remove in chart series\n     * @return {void}\n     */\n    removeSeries(index) {\n        this.series.splice(index, 1);\n        this.refresh();\n    }\n    /**\n     * To destroy the widget\n     * @method destroy\n     * @return {void}.\n     * @member of Chart\n     */\n    destroy() {\n        this.unWireEvents();\n        super.destroy();\n        this.element.classList.remove('e-chart');\n    }\n    /**\n     * Get component name\n     */\n    getModuleName() {\n        return 'chart';\n    }\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @private\n     */\n    getPersistData() {\n        let keyEntity = ['loaded', 'animationComplete'];\n        return this.addOnPersist(keyEntity);\n    }\n    /**\n     * Method to create SVG element.\n     */\n    createChartSvg() {\n        this.removeSvg();\n        createSvg(this);\n    }\n    /**\n     * Method to bind events for chart\n     */\n    unWireEvents() {\n        /*! Find the Events type */\n        let startEvent = Browser.touchStartEvent;\n        let moveEvent = Browser.touchMoveEvent;\n        let stopEvent = Browser.touchEndEvent;\n        let cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        /*! UnBind the Event handler */\n        EventHandler.remove(this.element, startEvent, this.chartOnMouseDown);\n        EventHandler.remove(this.element, moveEvent, this.mouseMove);\n        EventHandler.remove(this.element, stopEvent, this.mouseEnd);\n        EventHandler.remove(this.element, 'click', this.chartOnMouseClick);\n        EventHandler.remove(this.element, 'contextmenu', this.chartRightClick);\n        EventHandler.remove(this.element, cancelEvent, this.mouseLeave);\n        window.removeEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.chartResize);\n    }\n    wireEvents() {\n        /*! Find the Events type */\n        let cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        /*! Bind the Event handler */\n        EventHandler.add(this.element, Browser.touchStartEvent, this.chartOnMouseDown, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEnd, this);\n        EventHandler.add(this.element, 'click', this.chartOnMouseClick, this);\n        EventHandler.add(this.element, 'contextmenu', this.chartRightClick, this);\n        EventHandler.add(this.element, cancelEvent, this.mouseLeave, this);\n        window.addEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.chartResize.bind(this));\n        this.longPress = this.longPress.bind(this);\n        new Touch(this.element, { tapHold: this.longPress, tapHoldThreshold: 500 });\n        /*! Apply the style for chart */\n        this.setStyle(this.element);\n    }\n    chartRightClick(event) {\n        if (this.crosshair.enable && this.crosshairModule &&\n            (event.buttons === 2 || event.which === 0 || event.pointerType === 'touch')) {\n            event.preventDefault();\n            event.stopPropagation();\n            return false;\n        }\n        return true;\n    }\n    setStyle(element) {\n        let zooming = this.zoomSettings;\n        let disableScroll = zooming.enableSelectionZooming || zooming.enableMouseWheelZooming || zooming.enablePinchZooming ||\n            this.selectionMode !== 'None' || this.crosshair.enable;\n        element.style.touchAction = disableScroll ? 'none' : 'element';\n        element.style.msTouchAction = disableScroll ? 'none' : 'element';\n        element.style.msContentZooming = 'none';\n        element.style.msUserSelect = 'none';\n        element.style.webkitUserSelect = 'none';\n        element.style.position = 'relative';\n        element.style.display = 'block';\n    }\n    /**\n     * Finds the orientation.\n     * @return {boolean}\n     * @private\n     */\n    isOrientation() {\n        return ('orientation' in window && 'onorientationchange' in window);\n    }\n    /**\n     * Handles the long press on chart.\n     * @return {boolean}\n     * @private\n     */\n    longPress(e) {\n        this.mouseX = (e && e.originalEvent.changedTouches) ? (e.originalEvent.changedTouches[0].clientX) : 0;\n        this.mouseY = (e && e.originalEvent.changedTouches) ? (e.originalEvent.changedTouches[0].clientY) : 0;\n        this.startMove = true;\n        this.setMouseXY(this.mouseX, this.mouseY);\n        this.notify('tapHold', e);\n        return false;\n    }\n    /**\n     * To find mouse x, y for aligned chart element svg position\n     */\n    setMouseXY(pageX, pageY) {\n        let rect = this.element.getBoundingClientRect();\n        let svgRect = getElement(this.element.id + '_svg').getBoundingClientRect();\n        this.mouseX = (pageX - rect.left) - Math.max(svgRect.left - rect.left, 0);\n        this.mouseY = (pageY - rect.top) - Math.max(svgRect.top - rect.top, 0);\n    }\n    /**\n     * Handles the chart resize.\n     * @return {boolean}\n     * @private\n     */\n    chartResize(e) {\n        this.animateSeries = false;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(() => {\n            if (this.isDestroyed) {\n                clearTimeout(this.resizeTo);\n                return;\n            }\n            this.createChartSvg();\n            this.refreshAxis();\n            this.refreshBound();\n            this.trigger('loaded', { chart: this });\n        }, 500);\n        return false;\n    }\n    /**\n     * Handles the mouse move.\n     * @return {boolean}\n     * @private\n     */\n    mouseMove(e) {\n        let pageX;\n        let pageY;\n        let touchArg;\n        if (e.type === 'touchmove') {\n            this.isTouch = true;\n            touchArg = e;\n            pageX = touchArg.changedTouches[0].clientX;\n            pageY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch' || e.pointerType === '2' || this.isTouch;\n            pageX = e.clientX;\n            pageY = e.clientY;\n        }\n        this.setMouseXY(pageX, pageY);\n        this.chartOnMouseMove(e);\n        return false;\n    }\n    /**\n     * Handles the mouse leave.\n     * @return {boolean}\n     * @private\n     */\n    mouseLeave(e) {\n        let pageX;\n        let pageY;\n        let touchArg;\n        if (e.type === 'touchleave') {\n            this.isTouch = true;\n            touchArg = e;\n            pageX = touchArg.changedTouches[0].clientX;\n            pageY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch' || e.pointerType === '2';\n            pageX = e.clientX;\n            pageY = e.clientY;\n        }\n        this.setMouseXY(pageX, pageY);\n        this.chartOnMouseLeave(e);\n        return false;\n    }\n    /**\n     * Handles the mouse leave on chart.\n     * @return {boolean}\n     * @private\n     */\n    chartOnMouseLeave(e) {\n        let element = e.target;\n        let cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        this.trigger(chartMouseLeave, { target: element.id, x: this.mouseX, y: this.mouseY });\n        this.isChartDrag = false;\n        this.notify(cancelEvent, e);\n        return false;\n    }\n    /**\n     * Handles the mouse click on chart.\n     * @return {boolean}\n     * @private\n     */\n    chartOnMouseClick(e) {\n        let element = e.target;\n        this.trigger(chartMouseClick, { target: element.id, x: this.mouseX, y: this.mouseY });\n        if (this.pointClick) {\n            this.triggerPointEvent(pointClick);\n        }\n        this.notify('click', e);\n        return false;\n    }\n    triggerPointEvent(event) {\n        let data = new ChartData(this);\n        let pointData = data.getData();\n        if (pointData.series && pointData.point) {\n            this.trigger(event, { series: pointData.series,\n                point: pointData.point,\n                seriesIndex: pointData.series.index, pointIndex: pointData.point.index,\n                x: this.mouseX, y: this.mouseY });\n        }\n    }\n    /**\n     * Handles the mouse move on chart.\n     * @return {boolean}\n     * @private\n     */\n    chartOnMouseMove(e) {\n        let element = e.target;\n        this.trigger(chartMouseMove, { target: element.id, x: this.mouseX, y: this.mouseY });\n        if (this.pointMove) {\n            this.triggerPointEvent(pointMove);\n        }\n        // Tooltip for chart series.\n        if (!this.isTouch) {\n            this.titleTooltip(e, this.mouseX, this.mouseY);\n            this.axisTooltip(e, this.mouseX, this.mouseY);\n        }\n        this.notify(Browser.touchMoveEvent, e);\n        this.isTouch = false;\n        return false;\n    }\n    titleTooltip(event, x, y, isTouch) {\n        let targetId = event.target.id;\n        if ((targetId === (this.element.id + '_ChartTitle')) && (event.target.textContent.indexOf('...') > -1)) {\n            showTooltip(this.title, x, y, this.element.offsetWidth, this.element.id + '_EJ2_Title_Tooltip', getElement(this.element.id + '_Secondary_Element'), isTouch);\n        }\n        else {\n            removeElement(this.element.id + '_EJ2_Title_Tooltip');\n        }\n    }\n    axisTooltip(event, x, y, isTouch) {\n        let targetId = event.target.id;\n        if (((targetId.indexOf('AxisLabel') > -1) || targetId.indexOf('Axis_MultiLevelLabel') > -1) &&\n            (event.target.textContent.indexOf('...') > -1)) {\n            showTooltip(this.findAxisLabel(targetId), x, y, this.element.offsetWidth, this.element.id + '_EJ2_AxisLabel_Tooltip', getElement(this.element.id + '_Secondary_Element'), isTouch);\n        }\n        else {\n            removeElement(this.element.id + '_EJ2_AxisLabel_Tooltip');\n        }\n    }\n    findAxisLabel(text) {\n        let texts;\n        if (text.indexOf('AxisLabel') > -1) {\n            texts = ((text.replace(this.element.id, '')).replace('AxisLabel_', '')).split('_');\n            return this.axisCollections[parseInt(texts[0], 10)].visibleLabels[parseInt(texts[1], 10)].originalText;\n        }\n        else {\n            texts = ((text.replace(this.element.id, '')).replace('Axis_MultiLevelLabel_Level_', '').replace('Text_', '')).split('_');\n            return (this.axisCollections[parseInt(texts[0], 10)].multiLevelLabels[parseInt(texts[1], 10)]\n                .categories[parseInt(texts[2], 10)].text);\n        }\n    }\n    /**\n     * Handles the mouse down on chart.\n     * @return {boolean}\n     * @private\n     */\n    chartOnMouseDown(e) {\n        let pageX;\n        let pageY;\n        let target;\n        let touchArg;\n        let offset = Browser.isDevice ? 20 : 30;\n        let rect = this.element.getBoundingClientRect();\n        let element = e.target;\n        this.trigger(chartMouseDown, { target: element.id, x: this.mouseX, y: this.mouseY });\n        if (e.type === 'touchstart') {\n            this.isTouch = true;\n            touchArg = e;\n            pageX = touchArg.changedTouches[0].clientX;\n            pageY = touchArg.changedTouches[0].clientY;\n            target = touchArg.target;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch';\n            pageX = e.clientX;\n            pageY = e.clientY;\n            target = e.target;\n        }\n        let svgRect = getElement(this.element.id + '_svg').getBoundingClientRect();\n        this.mouseDownX = this.previousMouseMoveX = (pageX - rect.left) - Math.max(svgRect.left - rect.left, 0);\n        this.mouseDownY = this.previousMouseMoveY = (pageY - rect.top) - Math.max(svgRect.top - rect.top, 0);\n        if (this.isTouch) {\n            this.isDoubleTap = (new Date().getTime() < this.threshold && target.id.indexOf(this.element.id + '_Zooming_') === -1 &&\n                (this.mouseDownX - offset >= this.mouseX || this.mouseDownX + offset >= this.mouseX) &&\n                (this.mouseDownY - offset >= this.mouseY || this.mouseDownY + offset >= this.mouseY) &&\n                (this.mouseX - offset >= this.mouseDownX || this.mouseX + offset >= this.mouseDownX) &&\n                (this.mouseY - offset >= this.mouseDownY || this.mouseY + offset >= this.mouseDownY));\n        }\n        this.notify(Browser.touchStartEvent, e);\n        return false;\n    }\n    /**\n     * Handles the mouse up.\n     * @return {boolean}\n     * @private\n     */\n    mouseEnd(e) {\n        let pageY;\n        let pageX;\n        let touchArg;\n        if (e.type === 'touchend') {\n            touchArg = e;\n            pageX = touchArg.changedTouches[0].clientX;\n            this.isTouch = true;\n            pageY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            pageY = e.clientY;\n            pageX = e.clientX;\n            this.isTouch = e.pointerType === 'touch' || e.pointerType === '2';\n        }\n        this.setMouseXY(pageX, pageY);\n        this.chartOnMouseUp(e);\n        return false;\n    }\n    /**\n     * Handles the mouse up.\n     * @return {boolean}\n     * @private\n     */\n    chartOnMouseUp(e) {\n        let element = e.target;\n        this.trigger(chartMouseUp, { target: element.id, x: this.mouseX, y: this.mouseY });\n        this.isChartDrag = false;\n        if (this.isTouch) {\n            this.titleTooltip(e, this.mouseX, this.mouseY, this.isTouch);\n            this.axisTooltip(e, this.mouseX, this.mouseY, this.isTouch);\n            this.threshold = new Date().getTime() + 300;\n        }\n        this.seriesElements.removeAttribute('clip-path');\n        this.notify(Browser.touchEndEvent, e);\n        return false;\n    }\n    /**\n     * Method to set culture for chart\n     */\n    setCulture() {\n        this.intl = new Internationalization();\n        this.setLocaleConstants();\n        this.localeObject = new L10n(this.getModuleName(), this.defaultLocalConstants, this.locale);\n    }\n    /**\n     * Method to set the annotation content dynamically for chart.\n     */\n    setAnnotationValue(annotationIndex, content) {\n        let parentNode = getElement(this.element.id + '_Annotation_Collections');\n        let annotation = this.annotations[annotationIndex];\n        let element;\n        if (content !== null) {\n            annotation.content = content;\n            if (parentNode) {\n                removeElement(this.element.id + '_Annotation_' + annotationIndex);\n                element = createElement('div');\n                this.annotationModule.processAnnotation(annotation, annotationIndex, element);\n                parentNode.appendChild(element.children[0]);\n            }\n            else {\n                this.annotationModule.renderAnnotations(getElement(this.element.id + '_Secondary_Element'));\n            }\n        }\n    }\n    /**\n     * Method to set locale constants\n     */\n    setLocaleConstants() {\n        this.defaultLocalConstants = {\n            ZoomIn: 'ZoomIn',\n            Zoom: 'Zoom',\n            ZoomOut: 'ZoomOut',\n            Pan: 'Pan',\n            Reset: 'Reset',\n            ResetZoom: 'Reset Zoom'\n        };\n    }\n    /**\n     * Theming for chart\n     */\n    setTheme() {\n        /*! Set theme */\n        this.themeStyle = getThemeColor(this.theme);\n    }\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    requiredModules() {\n        let modules = [];\n        let series = this.series;\n        let enableAnnotation = false;\n        let moduleName;\n        let errorBarVisible = false;\n        let dataLabelEnable = false;\n        let zooming = this.zoomSettings;\n        this.chartAreaType = (series.length > 0 && (series[0].type === 'Polar' || series[0].type === 'Radar')) ? 'PolarRadar' : 'Cartesian';\n        if (this.tooltip.enable) {\n            modules.push({\n                member: 'Tooltip',\n                args: [this]\n            });\n        }\n        series.map((value) => {\n            this.isLegend = (this.legendSettings.visible && ((value.name !== '') || !!this.isLegend));\n            moduleName = value.type.indexOf('100') !== -1 ? value.type.replace('100', '') + 'Series' : value.type + 'Series';\n            errorBarVisible = value.errorBar.visible || errorBarVisible;\n            dataLabelEnable = value.marker.dataLabel.visible || dataLabelEnable;\n            if (!modules.some((currentModule) => {\n                return currentModule.member === moduleName;\n            })) {\n                modules.push({\n                    member: moduleName,\n                    args: [this, series]\n                });\n            }\n            if (this.chartAreaType === 'PolarRadar') {\n                modules.push({\n                    member: value.drawType + 'Series',\n                    args: [this, series]\n                });\n            }\n        });\n        this.findIndicatorModules(modules);\n        this.findTrendLineModules(modules);\n        modules = this.findAxisModule(modules);\n        enableAnnotation = this.annotations.some((value) => {\n            return (value.content !== null);\n        });\n        if (errorBarVisible) {\n            modules.push({\n                member: 'ErrorBar',\n                args: [this, series]\n            });\n        }\n        if (this.isLegend) {\n            modules.push({\n                member: 'Legend',\n                args: [this]\n            });\n        }\n        if (this.chartAreaType !== 'PolarRadar' && (zooming.enableSelectionZooming\n            || zooming.enableMouseWheelZooming || zooming.enablePinchZooming || zooming.enablePan)) {\n            modules.push({\n                member: 'Zoom',\n                args: [this, this.zoomSettings]\n            });\n        }\n        if (this.selectionMode !== 'None' && !(this.chartAreaType === 'PolarRadar' &&\n            this.selectionMode.indexOf('Drag') > -1)) {\n            modules.push({\n                member: 'Selection',\n                args: [this]\n            });\n        }\n        if (dataLabelEnable) {\n            modules.push({\n                member: 'DataLabel',\n                args: [this, series]\n            });\n        }\n        if (enableAnnotation) {\n            modules.push({\n                member: 'Annotation',\n                args: [this]\n            });\n        }\n        if (this.chartAreaType !== 'PolarRadar' && this.crosshair.enable) {\n            modules.push({\n                member: 'Crosshair',\n                args: [this]\n            });\n        }\n        return modules;\n    }\n    findAxisModule(modules) {\n        let axisCollections = [];\n        axisCollections.push(this.primaryXAxis);\n        axisCollections.push(this.primaryYAxis);\n        axisCollections = axisCollections.concat(this.axes);\n        let datetimeEnabled = false;\n        let categoryEnabled = false;\n        let logarithmicEnabled = false;\n        let striplineEnabled = false;\n        let dateTimeCategoryEnabled = false;\n        let multiLevelEnabled = false;\n        for (let axis of axisCollections) {\n            datetimeEnabled = axis.valueType === 'DateTime' || datetimeEnabled;\n            categoryEnabled = axis.valueType === 'Category' || categoryEnabled;\n            logarithmicEnabled = axis.valueType === 'Logarithmic' || logarithmicEnabled;\n            dateTimeCategoryEnabled = axis.valueType === 'DateTimeCategory' || dateTimeCategoryEnabled;\n            striplineEnabled = this.findStriplineVisibility(axis.stripLines) || striplineEnabled;\n            multiLevelEnabled = axis.multiLevelLabels.length > 0 || multiLevelEnabled;\n        }\n        if (datetimeEnabled) {\n            modules.push({\n                member: 'DateTime',\n                args: [this]\n            });\n        }\n        if (categoryEnabled) {\n            modules.push({\n                member: 'Category',\n                args: [this]\n            });\n        }\n        if (logarithmicEnabled) {\n            modules.push({\n                member: 'Logarithmic',\n                args: [this]\n            });\n        }\n        if (striplineEnabled) {\n            modules.push({\n                member: 'StripLine',\n                args: [this]\n            });\n        }\n        if (multiLevelEnabled) {\n            modules.push({\n                member: 'MultiLevelLabel',\n                args: [this]\n            });\n        }\n        if (dateTimeCategoryEnabled) {\n            modules.push({\n                member: 'DateTimeCategory',\n                args: [this]\n            });\n        }\n        return modules;\n    }\n    findIndicatorModules(modules) {\n        let macdEnable;\n        let bandEnable;\n        let indicators = this.indicators;\n        if (this.indicators.length) {\n            modules.push({\n                member: 'LineSeries',\n                args: [this]\n            });\n            indicators.map((indicator) => {\n                macdEnable = macdEnable || indicator.type === 'Macd';\n                bandEnable = bandEnable || indicator.type === 'BollingerBands';\n            });\n            if (macdEnable) {\n                modules.push({\n                    member: 'ColumnSeries',\n                    args: [this]\n                });\n            }\n            if (bandEnable) {\n                modules.push({\n                    member: 'RangeAreaSeries',\n                    args: [this]\n                });\n            }\n            for (let indicator of this.indicators) {\n                modules.push({\n                    member: indicator.type + 'Indicator',\n                    args: [this]\n                });\n            }\n        }\n    }\n    findTrendLineModules(modules) {\n        let isLine;\n        let isSpline;\n        for (let series of this.series) {\n            let markerEnable;\n            series.trendlines.map((trendline) => {\n                markerEnable = markerEnable || trendline.marker.visible;\n                isLine = isLine || (trendline.type === 'Linear' || trendline.type === 'MovingAverage') ? true : false;\n                isSpline = isSpline || !isLine ? true : false;\n            });\n            if (markerEnable) {\n                modules.push({\n                    member: 'Marker',\n                    args: [this, series]\n                });\n            }\n        }\n        if (isLine || isSpline) {\n            modules.push({\n                member: 'TrendLine',\n                args: [this]\n            });\n        }\n        if (isLine) {\n            modules.push({\n                member: 'LineSeries',\n                args: [this]\n            });\n        }\n        if (isSpline) {\n            modules.push({\n                member: 'SplineSeries',\n                args: [this]\n            });\n        }\n    }\n    findStriplineVisibility(striplines) {\n        let visible = false;\n        for (let stripline of striplines) {\n            if (stripline.visible) {\n                visible = true;\n                break;\n            }\n        }\n        return visible;\n    }\n    /**\n     * To Remove the SVG.\n     * @return {boolean}\n     * @private\n     */\n    removeSvg() {\n        if (document.getElementById(this.element.id + '_Secondary_Element')) {\n            remove(document.getElementById(this.element.id + '_Secondary_Element'));\n        }\n        let removeLength = 0;\n        if (this.zoomModule && this.zoomModule.pinchTarget) {\n            this.zoomModule.pinchTarget.id = '';\n            this.zoomModule.pinchTarget.setAttribute('opacity', '0');\n            this.svgObject.appendChild(this.zoomModule.pinchTarget);\n            removeLength = 1;\n        }\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > removeLength) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n    }\n    refreshDefinition(definitions) {\n        for (let item of definitions) {\n            item.axes = [];\n        }\n    }\n    /**\n     * Refresh the axis default value.\n     * @return {boolean}\n     * @private\n     */\n    refreshAxis() {\n        let axis = this.primaryXAxis;\n        axis.rect = new Rect(undefined, undefined, 0, 0);\n        axis = this.primaryYAxis;\n        axis.isStack100 = false;\n        axis.rect = new Rect(undefined, undefined, 0, 0);\n        for (let item of this.axes) {\n            axis = item;\n            axis.rect = new Rect(undefined, undefined, 0, 0);\n            axis.isStack100 = false;\n        }\n    }\n    axisChange(axis) {\n        if (!axis.name && !axis.valueType) {\n            return false;\n        }\n        this.refreshDefinition(this.columns);\n        this.refreshDefinition(this.rows);\n        this.calculateVisibleAxis();\n        this.processData();\n        return true;\n    }\n    /**\n     * Called internally if any of the property value changed.\n     * @private\n     */\n    // tslint:disable-next-line:max-func-body-length\n    onPropertyChanged(newProp, oldProp) {\n        let renderer = false;\n        let refreshBounds = false;\n        if (Object.keys(newProp).length === 1 && Object.keys(newProp)[0] === 'indicators') {\n            //add valid check, it should happen only when property change is triggered for target series\n            return;\n        }\n        this.animateSeries = false;\n        if (!this.delayRedraw) {\n            for (let prop of Object.keys(newProp)) {\n                switch (prop) {\n                    case 'primaryXAxis':\n                        refreshBounds = this.axisChange(newProp.primaryXAxis);\n                        if (newProp.primaryXAxis.edgeLabelPlacement) {\n                            renderer = true;\n                        }\n                        if (!newProp.primaryXAxis.crosshairTooltip) {\n                            refreshBounds = true;\n                        }\n                        break;\n                    case 'primaryYAxis':\n                        refreshBounds = this.axisChange(newProp.primaryYAxis);\n                        if (newProp.primaryYAxis.edgeLabelPlacement) {\n                            renderer = true;\n                        }\n                        if (!newProp.primaryYAxis.crosshairTooltip) {\n                            refreshBounds = true;\n                        }\n                        break;\n                    case 'height':\n                    case 'width':\n                        this.createChartSvg();\n                        refreshBounds = true;\n                        break;\n                    case 'title':\n                        refreshBounds = true;\n                        break;\n                    case 'titleStyle':\n                        if (newProp.titleStyle && (newProp.titleStyle.size || newProp.titleStyle.textOverflow)) {\n                            refreshBounds = true;\n                        }\n                        else {\n                            renderer = true;\n                        }\n                        break;\n                    case 'border':\n                        renderer = true;\n                        break;\n                    case 'zoomSettings':\n                    case 'background':\n                        renderer = true;\n                        break;\n                    case 'chartArea':\n                        if (newProp.chartArea.border && newProp.chartArea.border.width) {\n                            refreshBounds = true;\n                        }\n                        renderer = true;\n                        break;\n                    case 'legendSettings':\n                        if (!newProp.legendSettings.background || !newProp.legendSettings.opacity) {\n                            refreshBounds = true;\n                        }\n                        renderer = true;\n                        break;\n                    case 'palettes':\n                        this.calculateVisibleSeries();\n                        renderer = true;\n                        break;\n                    case 'selectedDataIndexes':\n                    case 'selectionMode':\n                        if (this.selectionModule && newProp.selectionMode && newProp.selectionMode.indexOf('Drag') === -1) {\n                            this.selectionModule.redrawSelection(this, oldProp.selectionMode);\n                        }\n                        break;\n                    case 'isMultiSelect':\n                        if (this.selectionModule && !newProp.isMultiSelect && this.selectionModule.selectedDataIndexes.length > 1) {\n                            this.selectionModule.redrawSelection(this, oldProp.selectionMode);\n                        }\n                        break;\n                    case 'theme':\n                        this.animateSeries = true;\n                        break;\n                    case 'locale':\n                    case 'currencyCode':\n                        super.refresh();\n                        break;\n                    case 'tooltip':\n                        this.tooltipModule.previousPoints = [];\n                        break;\n                }\n            }\n            if (!refreshBounds && renderer) {\n                this.removeSvg();\n                this.renderElements();\n                this.trigger('loaded', { chart: this });\n            }\n            if (refreshBounds) {\n                this.removeSvg();\n                this.refreshAxis();\n                this.refreshBound();\n                this.trigger('loaded', { chart: this });\n            }\n        }\n    }\n};\n__decorate([\n    Property(null)\n], Chart.prototype, \"width\", void 0);\n__decorate([\n    Property(null)\n], Chart.prototype, \"height\", void 0);\n__decorate([\n    Property('')\n], Chart.prototype, \"title\", void 0);\n__decorate([\n    Complex(Theme.chartTitleFont, Font)\n], Chart.prototype, \"titleStyle\", void 0);\n__decorate([\n    Complex({}, Margin)\n], Chart.prototype, \"margin\", void 0);\n__decorate([\n    Complex({ color: '#DDDDDD', width: 0 }, Border)\n], Chart.prototype, \"border\", void 0);\n__decorate([\n    Property(null)\n], Chart.prototype, \"background\", void 0);\n__decorate([\n    Complex({ border: { color: null, width: 0.5 }, background: 'transparent' }, ChartArea)\n], Chart.prototype, \"chartArea\", void 0);\n__decorate([\n    Complex({ name: 'primaryXAxis' }, Axis)\n], Chart.prototype, \"primaryXAxis\", void 0);\n__decorate([\n    Complex({ name: 'primaryYAxis' }, Axis)\n], Chart.prototype, \"primaryYAxis\", void 0);\n__decorate([\n    Collection([{}], Row)\n], Chart.prototype, \"rows\", void 0);\n__decorate([\n    Collection([{}], Column)\n], Chart.prototype, \"columns\", void 0);\n__decorate([\n    Collection([{}], Axis)\n], Chart.prototype, \"axes\", void 0);\n__decorate([\n    Collection([{}], Series)\n], Chart.prototype, \"series\", void 0);\n__decorate([\n    Collection([{}], ChartAnnotationSettings)\n], Chart.prototype, \"annotations\", void 0);\n__decorate([\n    Property([])\n], Chart.prototype, \"palettes\", void 0);\n__decorate([\n    Property('Material')\n], Chart.prototype, \"theme\", void 0);\n__decorate([\n    Complex({}, TooltipSettings)\n], Chart.prototype, \"tooltip\", void 0);\n__decorate([\n    Complex({}, CrosshairSettings)\n], Chart.prototype, \"crosshair\", void 0);\n__decorate([\n    Complex({}, LegendSettings)\n], Chart.prototype, \"legendSettings\", void 0);\n__decorate([\n    Complex({}, ZoomSettings)\n], Chart.prototype, \"zoomSettings\", void 0);\n__decorate([\n    Property('None')\n], Chart.prototype, \"selectionMode\", void 0);\n__decorate([\n    Property(false)\n], Chart.prototype, \"isMultiSelect\", void 0);\n__decorate([\n    Collection([], Indexes)\n], Chart.prototype, \"selectedDataIndexes\", void 0);\n__decorate([\n    Property(false)\n], Chart.prototype, \"useGroupingSeparator\", void 0);\n__decorate([\n    Property(false)\n], Chart.prototype, \"isTransposed\", void 0);\n__decorate([\n    Collection([], TechnicalIndicator)\n], Chart.prototype, \"indicators\", void 0);\n__decorate([\n    Property(null)\n], Chart.prototype, \"description\", void 0);\n__decorate([\n    Property(1)\n], Chart.prototype, \"tabIndex\", void 0);\n__decorate([\n    Property(true)\n], Chart.prototype, \"enableSideBySidePlacement\", void 0);\n__decorate([\n    Event()\n], Chart.prototype, \"annotationRender\", void 0);\n__decorate([\n    Event()\n], Chart.prototype, \"beforePrint\", void 0);\n__decorate([\n    Event()\n], Chart.prototype, \"loaded\", void 0);\n__decorate([\n    Event()\n], Chart.prototype, \"load\", void 0);\n__decorate([\n    Event()\n], Chart.prototype, \"animationComplete\", void 0);\n__decorate([\n    Event()\n], Chart.prototype, \"legendRender\", void 0);\n__decorate([\n    Event()\n], Chart.prototype, \"textRender\", void 0);\n__decorate([\n    Event()\n], Chart.prototype, \"pointRender\", void 0);\n__decorate([\n    Event()\n], Chart.prototype, \"seriesRender\", void 0);\n__decorate([\n    Event()\n], Chart.prototype, \"axisLabelRender\", void 0);\n__decorate([\n    Event()\n], Chart.prototype, \"axisRangeCalculated\", void 0);\n__decorate([\n    Event()\n], Chart.prototype, \"axisMultiLabelRender\", void 0);\n__decorate([\n    Event()\n], Chart.prototype, \"tooltipRender\", void 0);\n__decorate([\n    Event()\n], Chart.prototype, \"chartMouseMove\", void 0);\n__decorate([\n    Event()\n], Chart.prototype, \"chartMouseClick\", void 0);\n__decorate([\n    Event()\n], Chart.prototype, \"pointClick\", void 0);\n__decorate([\n    Event()\n], Chart.prototype, \"pointMove\", void 0);\n__decorate([\n    Event()\n], Chart.prototype, \"chartMouseLeave\", void 0);\n__decorate([\n    Event()\n], Chart.prototype, \"chartMouseDown\", void 0);\n__decorate([\n    Event()\n], Chart.prototype, \"chartMouseUp\", void 0);\n__decorate([\n    Event()\n], Chart.prototype, \"dragComplete\", void 0);\n__decorate([\n    Event()\n], Chart.prototype, \"zoomComplete\", void 0);\n__decorate([\n    Property('USD')\n], Chart.prototype, \"currencyCode\", void 0);\nChart = __decorate([\n    NotifyPropertyChanges\n], Chart);\nexport { Chart };\n","import { Double } from '../axis/double-axis';\n/**\n * Common axis classes\n * @private\n */\nexport class NiceInterval extends Double {\n    /**\n     * Method to calculate numeric datetime interval\n     */\n    calculateDateTimeNiceInterval(axis, size, start, end) {\n        let oneDay = 24 * 60 * 60 * 1000;\n        let startDate = new Date(start);\n        let endDate = new Date(end);\n        //var axisInterval ;\n        let totalDays = (Math.abs((startDate.getTime() - endDate.getTime()) / (oneDay)));\n        let interval;\n        axis.actualIntervalType = axis.intervalType;\n        switch (axis.intervalType) {\n            case 'Years':\n                interval = this.calculateNumericNiceInterval(axis, totalDays / 365, size);\n                break;\n            case 'Months':\n                interval = this.calculateNumericNiceInterval(axis, totalDays / 30, size);\n                break;\n            case 'Days':\n                interval = this.calculateNumericNiceInterval(axis, totalDays, size);\n                break;\n            case 'Hours':\n                interval = this.calculateNumericNiceInterval(axis, totalDays * 24, size);\n                break;\n            case 'Minutes':\n                interval = this.calculateNumericNiceInterval(axis, totalDays * 24 * 60, size);\n                break;\n            case 'Seconds':\n                interval = this.calculateNumericNiceInterval(axis, totalDays * 24 * 60 * 60, size);\n                break;\n            case 'Auto':\n                interval = this.calculateNumericNiceInterval(axis, totalDays / 365, size);\n                if (interval >= 1) {\n                    axis.actualIntervalType = 'Years';\n                    return interval;\n                }\n                interval = this.calculateNumericNiceInterval(axis, totalDays / 30, size);\n                if (interval >= 1) {\n                    axis.actualIntervalType = 'Months';\n                    return interval;\n                }\n                interval = this.calculateNumericNiceInterval(axis, totalDays, size);\n                if (interval >= 1) {\n                    axis.actualIntervalType = 'Days';\n                    return interval;\n                }\n                interval = this.calculateNumericNiceInterval(axis, totalDays * 24, size);\n                if (interval >= 1) {\n                    axis.actualIntervalType = 'Hours';\n                    return interval;\n                }\n                interval = this.calculateNumericNiceInterval(axis, totalDays * 24 * 60, size);\n                if (interval >= 1) {\n                    axis.actualIntervalType = 'Minutes';\n                    return interval;\n                }\n                interval = this.calculateNumericNiceInterval(axis, totalDays * 24 * 60 * 60, size);\n                axis.actualIntervalType = 'Seconds';\n                return interval;\n        }\n        return interval;\n    }\n    /**\n     * To get the skeleton for the DateTime axis.\n     * @return {string}\n     *  @private\n     */\n    getSkeleton(axis) {\n        let skeleton;\n        if (axis.skeleton) {\n            return axis.skeleton;\n        }\n        if (axis.actualIntervalType === 'Years') {\n            skeleton = 'yMMM';\n        }\n        else if (axis.actualIntervalType === 'Months') {\n            skeleton = 'MMMd';\n        }\n        else if (axis.actualIntervalType === 'Days') {\n            skeleton = 'yMd';\n        }\n        else if (axis.actualIntervalType === 'Hours') {\n            skeleton = 'EHm';\n        }\n        else if (axis.actualIntervalType === 'Minutes' || axis.actualIntervalType === 'Seconds') {\n            skeleton = 'Hms';\n        }\n        else {\n            skeleton = 'Hms';\n        }\n        return skeleton;\n    }\n}\n","import { DoubleRange } from '../utils/double-range';\nimport { withIn, firstToLowerCase } from '../../common/utils/helper';\nimport { DataUtil } from '@syncfusion/ej2-data';\nimport { NiceInterval } from '../axis/axis-helper';\n/**\n * `DateTime` module is used to render datetime axis.\n */\nexport class DateTime extends NiceInterval {\n    /**\n     * Constructor for the dateTime module.\n     * @private\n     */\n    constructor(chart) {\n        super(chart);\n    }\n    /**\n     * The function to calculate the range and labels for the axis.\n     * @return {void}\n     */\n    calculateRangeAndInterval(size, axis) {\n        this.calculateRange(axis, size);\n        this.getActualRange(axis, size);\n        this.applyRangePadding(axis, size);\n        this.calculateVisibleLabels(axis);\n    }\n    /**\n     * Actual Range for the axis.\n     * @private\n     */\n    getActualRange(axis, size) {\n        let option = {\n            skeleton: 'full',\n            type: 'dateTime'\n        };\n        let dateParser = this.chart.intl.getDateParser(option);\n        let dateFormatter = this.chart.intl.getDateFormat(option);\n        // Axis min\n        if ((axis.minimum) !== null) {\n            this.min = Date.parse(dateParser(dateFormatter(new Date(DataUtil.parse.parseJson({ val: axis.minimum }).val))));\n        }\n        else if (this.min === null || this.min === Number.POSITIVE_INFINITY) {\n            this.min = Date.parse(dateParser(dateFormatter(new Date(1970, 1, 1))));\n        }\n        // Axis Max\n        if ((axis.maximum) !== null) {\n            this.max = Date.parse(dateParser(dateFormatter(new Date(DataUtil.parse.parseJson({ val: axis.maximum }).val))));\n        }\n        else if (this.max === null || this.max === Number.NEGATIVE_INFINITY) {\n            this.max = Date.parse(dateParser(dateFormatter(new Date(1970, 5, 1))));\n        }\n        if (this.min === this.max) {\n            this.max = this.max + 2592000000;\n            this.min = this.min - 2592000000;\n        }\n        axis.actualRange = {};\n        axis.doubleRange = new DoubleRange(this.min, this.max);\n        let datetimeInterval = this.calculateDateTimeNiceInterval(axis, size, axis.doubleRange.start, axis.doubleRange.end);\n        if (!axis.interval) {\n            axis.actualRange.interval = datetimeInterval;\n        }\n        else {\n            axis.actualRange.interval = axis.interval;\n        }\n        axis.actualRange.min = axis.doubleRange.start;\n        axis.actualRange.max = axis.doubleRange.end;\n    }\n    /**\n     * Apply padding for the range.\n     * @private\n     */\n    applyRangePadding(axis, size) {\n        this.start = (axis.actualRange.min);\n        this.end = (axis.actualRange.max);\n        let minimum;\n        let maximum;\n        let interval = axis.actualRange.interval;\n        if (!axis.setRange()) {\n            let rangePadding = axis.getRangePadding(this.chart);\n            minimum = new Date(this.start);\n            maximum = new Date(this.end);\n            let intervalType = axis.actualIntervalType;\n            if (rangePadding === 'None') {\n                this.start = minimum.getTime();\n                this.end = maximum.getTime();\n            }\n            else if (rangePadding === 'Additional' || rangePadding === 'Round') {\n                switch (intervalType) {\n                    case 'Years':\n                        this.getYear(minimum, maximum, rangePadding, interval);\n                        break;\n                    case 'Months':\n                        this.getMonth(minimum, maximum, rangePadding, interval);\n                        break;\n                    case 'Days':\n                        this.getDay(minimum, maximum, rangePadding, interval);\n                        break;\n                    case 'Hours':\n                        this.getHour(minimum, maximum, rangePadding, interval);\n                        break;\n                    case 'Minutes':\n                        let minute = (minimum.getMinutes() / interval) * interval;\n                        let endMinute = maximum.getMinutes() + (minimum.getMinutes() - minute);\n                        if (rangePadding === 'Round') {\n                            this.start = (new Date(minimum.getFullYear(), minimum.getMonth(), minimum.getDate(), minimum.getHours(), minute, 0)).getTime();\n                            this.end = (new Date(maximum.getFullYear(), maximum.getMonth(), maximum.getDate(), maximum.getHours(), endMinute, 59)).getTime();\n                        }\n                        else {\n                            this.start = (new Date(minimum.getFullYear(), maximum.getMonth(), minimum.getDate(), minimum.getHours(), minute + (-interval), 0)).getTime();\n                            this.end = (new Date(maximum.getFullYear(), maximum.getMonth(), maximum.getDate(), maximum.getHours(), endMinute + (interval), 0)).getTime();\n                        }\n                        break;\n                    case 'Seconds':\n                        let second = (minimum.getSeconds() / interval) * interval;\n                        let endSecond = maximum.getSeconds() + (minimum.getSeconds() - second);\n                        if (rangePadding === 'Round') {\n                            this.start = (new Date(minimum.getFullYear(), minimum.getMonth(), minimum.getDate(), minimum.getHours(), minimum.getMinutes(), second, 0)).getTime();\n                            this.end = (new Date(maximum.getFullYear(), maximum.getMonth(), maximum.getDate(), maximum.getHours(), maximum.getMinutes(), endSecond, 0)).getTime();\n                        }\n                        else {\n                            this.start = (new Date(minimum.getFullYear(), minimum.getMonth(), minimum.getDate(), minimum.getHours(), minimum.getMinutes(), second + (-interval), 0)).getTime();\n                            this.end = (new Date(maximum.getFullYear(), maximum.getMonth(), maximum.getDate(), maximum.getHours(), maximum.getMinutes(), endSecond + (interval), 0)).getTime();\n                        }\n                        break;\n                }\n            }\n        }\n        axis.actualRange.min = (axis.minimum != null) ? this.min : this.start;\n        axis.actualRange.max = (axis.maximum != null) ? this.max : this.end;\n        axis.actualRange.delta = (axis.actualRange.max - axis.actualRange.min);\n        axis.doubleRange = new DoubleRange(axis.actualRange.min, axis.actualRange.max);\n        this.calculateVisibleRange(size, axis);\n    }\n    getYear(minimum, maximum, rangePadding, interval) {\n        let startYear = minimum.getFullYear();\n        let endYear = maximum.getFullYear();\n        if (rangePadding === 'Additional') {\n            this.start = (new Date(startYear - interval, 1, 1, 0, 0, 0)).getTime();\n            this.end = (new Date(endYear + interval, 1, 1, 0, 0, 0)).getTime();\n        }\n        else {\n            this.start = new Date(startYear, 0, 0, 0, 0, 0).getTime();\n            this.end = new Date(endYear, 11, 30, 23, 59, 59).getTime();\n        }\n    }\n    getMonth(minimum, maximum, rangePadding, interval) {\n        let month = minimum.getMonth();\n        let endMonth = maximum.getMonth();\n        if (rangePadding === 'Round') {\n            this.start = (new Date(minimum.getFullYear(), month, 0, 0, 0, 0)).getTime();\n            this.end = (new Date(maximum.getFullYear(), endMonth, new Date(maximum.getFullYear(), maximum.getMonth(), 0).getDate(), 23, 59, 59)).getTime();\n        }\n        else {\n            this.start = (new Date(minimum.getFullYear(), month + (-interval), 1, 0, 0, 0)).getTime();\n            this.end = (new Date(maximum.getFullYear(), endMonth + (interval), endMonth === 2 ? 28 : 30, 0, 0, 0)).getTime();\n        }\n    }\n    getDay(minimum, maximum, rangePadding, interval) {\n        let day = minimum.getDate();\n        let endDay = maximum.getDate();\n        if (rangePadding === 'Round') {\n            this.start = (new Date(minimum.getFullYear(), minimum.getMonth(), day, 0, 0, 0)).getTime();\n            this.end = (new Date(maximum.getFullYear(), maximum.getMonth(), endDay, 23, 59, 59)).getTime();\n        }\n        else {\n            this.start = (new Date(minimum.getFullYear(), minimum.getMonth(), day + (-interval), 0, 0, 0)).getTime();\n            this.end = (new Date(maximum.getFullYear(), maximum.getMonth(), endDay + (interval), 0, 0, 0)).getTime();\n        }\n    }\n    getHour(minimum, maximum, rangePadding, interval) {\n        let hour = (minimum.getHours() / interval) * interval;\n        let endHour = maximum.getHours() + (minimum.getHours() - hour);\n        if (rangePadding === 'Round') {\n            this.start = (new Date(minimum.getFullYear(), minimum.getMonth(), minimum.getDate(), hour, 0, 0)).getTime();\n            this.end = (new Date(maximum.getFullYear(), maximum.getMonth(), maximum.getDate(), endHour, 59, 59)).getTime();\n        }\n        else {\n            this.start = (new Date(minimum.getFullYear(), minimum.getMonth(), minimum.getDate(), hour + (-interval), 0, 0)).getTime();\n            this.end = (new Date(maximum.getFullYear(), maximum.getMonth(), maximum.getDate(), endHour + (interval), 0, 0)).getTime();\n        }\n    }\n    /**\n     * Calculate visible range for axis.\n     * @private\n     */\n    calculateVisibleRange(size, axis) {\n        axis.visibleRange = {\n            min: axis.actualRange.min,\n            max: axis.actualRange.max,\n            interval: axis.actualRange.interval,\n            delta: axis.actualRange.delta,\n        };\n        if (axis.zoomFactor < 1 || axis.zoomPosition > 0) {\n            axis.calculateVisibleRange(size);\n            axis.visibleRange.interval = (axis.enableAutoIntervalOnZooming) ?\n                this.calculateDateTimeNiceInterval(axis, size, axis.visibleRange.min, axis.visibleRange.max)\n                : axis.visibleRange.interval;\n        }\n        axis.dateTimeInterval = this.increaseDateTimeInterval(axis, axis.visibleRange.min, axis.visibleRange.interval).getTime()\n            - axis.visibleRange.min;\n        axis.triggerRangeRender(this.chart, axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.interval);\n    }\n    /**\n     * Calculate visible labels for the axis.\n     * @private\n     */\n    calculateVisibleLabels(axis) {\n        axis.visibleLabels = [];\n        let tempInterval = axis.visibleRange.min;\n        if (!axis.setRange()) {\n            tempInterval = this.alignRangeStart(axis, tempInterval, axis.visibleRange.interval, axis.actualIntervalType).getTime();\n        }\n        axis.format = this.chart.intl.getDateFormat({\n            format: axis.labelFormat, type: firstToLowerCase(axis.skeletonType), skeleton: this.getSkeleton(axis)\n        });\n        axis.startLabel = axis.format(new Date(axis.visibleRange.min));\n        axis.endLabel = axis.format(new Date(axis.visibleRange.max));\n        while (tempInterval <= axis.visibleRange.max) {\n            if (withIn(tempInterval, axis.visibleRange)) {\n                axis.triggerLabelRender(this.chart, tempInterval, axis.format(new Date(tempInterval)), axis.labelStyle);\n            }\n            tempInterval = this.increaseDateTimeInterval(axis, tempInterval, axis.visibleRange.interval).getTime();\n        }\n        axis.getMaxLabelWidth(this.chart);\n    }\n    /** @private */\n    increaseDateTimeInterval(axis, value, interval) {\n        let result = new Date(value);\n        interval = Math.ceil(interval);\n        switch (axis.actualIntervalType) {\n            case 'Years':\n                result.setFullYear(result.getFullYear() + interval);\n                return result;\n            case 'Months':\n                result.setMonth(result.getMonth() + interval);\n                return result;\n            case 'Days':\n                result.setDate(result.getDate() + interval);\n                return result;\n            case 'Hours':\n                result.setHours(result.getHours() + interval);\n                return result;\n            case 'Minutes':\n                result.setMinutes(result.getMinutes() + interval);\n                return result;\n            case 'Seconds':\n                result.setSeconds(result.getSeconds() + interval);\n                return result;\n        }\n        return result;\n    }\n    alignRangeStart(axis, sDate, intervalSize, intervalType) {\n        let sResult = new Date(sDate);\n        switch (axis.actualIntervalType) {\n            case 'Years':\n                let year = Math.floor(Math.floor(sResult.getFullYear() / intervalSize) * intervalSize);\n                sResult = new Date(year, sResult.getMonth(), sResult.getDate(), 0, 0, 0);\n                return sResult;\n            case 'Months':\n                let month = Math.floor(Math.floor((sResult.getMonth()) / intervalSize) * intervalSize);\n                sResult = new Date(sResult.getFullYear(), month, sResult.getDate(), 0, 0, 0);\n                return sResult;\n            case 'Days':\n                let day = Math.floor(Math.floor((sResult.getDate()) / intervalSize) * intervalSize);\n                sResult = new Date(sResult.getFullYear(), sResult.getMonth(), day, 0, 0, 0);\n                return sResult;\n            case 'Hours':\n                let hour = Math.floor(Math.floor((sResult.getHours()) / intervalSize) * intervalSize);\n                sResult = new Date(sResult.getFullYear(), sResult.getMonth(), sResult.getDate(), hour, 0, 0);\n                return sResult;\n            case 'Minutes':\n                let minutes = Math.floor(Math.floor((sResult.getMinutes()) / intervalSize) * intervalSize);\n                sResult = new Date(sResult.getFullYear(), sResult.getMonth(), sResult.getDate(), sResult.getHours(), minutes, 0, 0);\n                return sResult;\n            case 'Seconds':\n                let seconds = Math.floor(Math.floor((sResult.getSeconds()) / intervalSize) * intervalSize);\n                sResult = new Date(sResult.getFullYear(), sResult.getMonth(), sResult.getDate(), sResult.getHours(), sResult.getMinutes(), seconds, 0);\n                return sResult;\n        }\n        return sResult;\n    }\n    /**\n     * Get module name\n     */\n    getModuleName() {\n        /**\n         * Returns the module name\n         */\n        return 'DateTime';\n    }\n    /**\n     * To destroy the category axis.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy method performed here\n         */\n    }\n}\n","import { DoubleRange } from '../utils/double-range';\nimport { withIn } from '../../common/utils/helper';\nimport { NiceInterval } from '../axis/axis-helper';\n/**\n * `Category` module is used to render category axis.\n */\nexport class Category extends NiceInterval {\n    /**\n     * Constructor for the category module.\n     * @private\n     */\n    constructor(chart) {\n        super(chart);\n    }\n    /**\n     * The function to calculate the range and labels for the axis.\n     * @return {void}\n     */\n    calculateRangeAndInterval(size, axis) {\n        this.calculateRange(axis, size);\n        this.getActualRange(axis, size);\n        this.applyRangePadding(axis, size);\n        this.calculateVisibleLabels(axis);\n    }\n    /**\n     * Actual Range for the axis.\n     * @private\n     */\n    getActualRange(axis, size) {\n        this.initializeDoubleRange(axis);\n        // axis.doubleRange = new DoubleRange(<number>this.min, <number>this.max);\n        axis.actualRange = {};\n        if (!axis.interval) {\n            axis.actualRange.interval = Math.max(1, Math.floor(axis.doubleRange.delta / axis.getActualDesiredIntervalsCount(size)));\n        }\n        else {\n            axis.actualRange.interval = Math.ceil(axis.interval);\n        }\n        axis.actualRange.min = axis.doubleRange.start;\n        axis.actualRange.max = axis.doubleRange.end;\n        axis.actualRange.delta = axis.doubleRange.delta;\n    }\n    /**\n     * Padding for the axis.\n     * @private\n     */\n    applyRangePadding(axis, size) {\n        let ticks = (axis.labelPlacement === 'BetweenTicks' && this.chart.chartAreaType !== 'PolarRadar') ? 0.5 : 0;\n        if (ticks > 0) {\n            axis.actualRange.min -= ticks;\n            axis.actualRange.max += ticks;\n        }\n        else {\n            axis.actualRange.max += axis.actualRange.max ? 0 : 0.5;\n        }\n        axis.doubleRange = new DoubleRange(axis.actualRange.min, axis.actualRange.max);\n        axis.actualRange.delta = axis.doubleRange.delta;\n        this.calculateVisibleRange(size, axis);\n    }\n    /**\n     * Calculate label for the axis.\n     * @private\n     */\n    calculateVisibleLabels(axis) {\n        /*! Generate axis labels */\n        axis.visibleLabels = [];\n        let tempInterval = Math.ceil(axis.visibleRange.min);\n        if (axis.zoomFactor < 1 || axis.zoomPosition > 0) {\n            tempInterval = axis.visibleRange.min - (axis.visibleRange.min % axis.visibleRange.interval);\n        }\n        let position;\n        axis.startLabel = axis.labels[Math.round(axis.visibleRange.min)];\n        axis.endLabel = axis.labels[Math.floor(axis.visibleRange.max)];\n        for (; tempInterval <= axis.visibleRange.max; tempInterval += axis.visibleRange.interval) {\n            if (withIn(tempInterval, axis.visibleRange) && axis.labels.length > 0) {\n                position = Math.round(tempInterval);\n                axis.triggerLabelRender(this.chart, position, axis.labels[position] ? axis.labels[position] : position.toString(), axis.labelStyle);\n            }\n        }\n        axis.getMaxLabelWidth(this.chart);\n    }\n    /**\n     * Get module name\n     */\n    getModuleName() {\n        /**\n         * Returns the module name\n         */\n        return 'Category';\n    }\n    /**\n     * To destroy the category axis.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy method performed here\n         */\n    }\n}\n","import { Double } from '../axis/double-axis';\nimport { logBase, withIn } from '../../common/utils/helper';\n/**\n * `Logarithmic` module is used to render log axis.\n */\nexport class Logarithmic extends Double {\n    /**\n     * Constructor for the logerithmic module.\n     * @private\n     */\n    constructor(chart) {\n        super(chart);\n    }\n    /**\n     * The method to calculate the range and labels for the axis.\n     * @return {void}\n     */\n    calculateRangeAndInterval(size, axis) {\n        this.calculateRange(axis, size);\n        this.getActualRange(axis, size);\n        this.calculateVisibleRange(size, axis);\n        this.calculateVisibleLabels(axis, this.chart);\n    }\n    /**\n     * Calculates actual range for the axis.\n     * @private\n     */\n    getActualRange(axis, size) {\n        this.initializeDoubleRange(axis);\n        this.min = this.min < 0 ? 0 : this.min;\n        let logStart = logBase(this.min, axis.logBase);\n        logStart = isFinite(logStart) ? logStart : this.min;\n        let logEnd = logBase(this.max, axis.logBase);\n        logEnd = isFinite(logStart) ? logEnd : this.max;\n        this.min = Math.floor(logStart / 1);\n        this.max = Math.ceil(logEnd / 1);\n        axis.actualRange.interval = axis.interval || this.calculateLogNiceInterval(this.max - this.min, size, axis);\n        axis.actualRange.min = this.min;\n        axis.actualRange.max = this.max;\n        axis.actualRange.delta = this.max - this.min;\n    }\n    /**\n     * Calculates visible range for the axis.\n     * @private\n     */\n    calculateVisibleRange(size, axis) {\n        axis.visibleRange = {\n            interval: axis.actualRange.interval, max: axis.actualRange.max,\n            min: axis.actualRange.min, delta: axis.actualRange.delta\n        };\n        if (axis.zoomFactor < 1 || axis.zoomPosition > 0) {\n            axis.calculateVisibleRange(size);\n            axis.visibleRange.interval = (axis.enableAutoIntervalOnZooming) ?\n                this.calculateLogNiceInterval(axis.doubleRange.delta, size, axis)\n                : axis.visibleRange.interval;\n            axis.visibleRange.interval = Math.floor(axis.visibleRange.interval) === 0 ? 1 : Math.floor(axis.visibleRange.interval);\n            axis.triggerRangeRender(this.chart, axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.interval);\n        }\n    }\n    /**\n     * Calculates log iInteval for the axis.\n     * @private\n     */\n    calculateLogNiceInterval(delta, size, axis) {\n        let actualDesiredIntervalsCount = axis.getActualDesiredIntervalsCount(size);\n        let niceInterval = delta;\n        let minInterval = Math.pow(10, Math.floor(logBase(niceInterval, 10)));\n        for (let j = 0, len = axis.intervalDivs.length; j < len; j++) {\n            let currentInterval = minInterval * axis.intervalDivs[j];\n            if (actualDesiredIntervalsCount < (delta / currentInterval)) {\n                break;\n            }\n            niceInterval = currentInterval;\n        }\n        return niceInterval;\n    }\n    /**\n     * Calculates labels for the axis.\n     * @private\n     */\n    calculateVisibleLabels(axis, chart) {\n        /*! Generate axis labels */\n        let tempInterval = axis.visibleRange.min;\n        axis.visibleLabels = [];\n        if (axis.zoomFactor < 1 || axis.zoomPosition > 0) {\n            tempInterval = axis.visibleRange.min - (axis.visibleRange.min % axis.visibleRange.interval);\n        }\n        let axisFormat = this.getFormat(axis);\n        let isCustomFormat = axisFormat.match('{value}') !== null;\n        axis.format = chart.intl.getNumberFormat({\n            format: isCustomFormat ? '' : axisFormat,\n            useGrouping: chart.useGroupingSeparator\n        });\n        axis.startLabel = axis.format(Math.pow(axis.logBase, axis.visibleRange.min));\n        axis.endLabel = axis.format(Math.pow(axis.logBase, axis.visibleRange.max));\n        for (; tempInterval <= axis.visibleRange.max; tempInterval += axis.visibleRange.interval) {\n            if (withIn(tempInterval, axis.visibleRange)) {\n                axis.triggerLabelRender(this.chart, tempInterval, this.formatValue(axis, isCustomFormat, axisFormat, Math.pow(axis.logBase, tempInterval)), axis.labelStyle);\n            }\n        }\n        axis.getMaxLabelWidth(this.chart);\n    }\n    /**\n     * Get module name\n     */\n    getModuleName() {\n        /**\n         * Returns the module name\n         */\n        return 'Logarithmic';\n    }\n    /**\n     * To destroy the category axis.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy method performed here\n         */\n    }\n}\n","import { Category } from '../axis/category-axis';\nimport { withIn, firstToLowerCase } from '../../common/utils/helper';\n/**\n * Category module is used to render category axis.\n */\nexport class DateTimeCategory extends Category {\n    /**\n     * Constructor for the category module.\n     * @private\n     */\n    constructor(chart) {\n        super(chart);\n    }\n    /**\n     * The function to calculate the range and labels for the axis.\n     * @return {void}\n     * @private\n     */\n    calculateRangeAndInterval(size, axis) {\n        this.axisSize = size;\n        this.calculateRange(axis, size);\n        this.getActualRange(axis, size);\n        this.applyRangePadding(axis, size);\n        this.calculateVisibleLabels(axis);\n    }\n    /**\n     * Calculate label for the axis.\n     * @private\n     */\n    calculateVisibleLabels(axis) {\n        /*! Generate axis labels */\n        axis.visibleLabels = [];\n        let padding = axis.labelPlacement === 'BetweenTicks' ? 0.5 : 0;\n        if (axis.intervalType === 'Auto') {\n            this.calculateDateTimeNiceInterval(axis, this.axisSize, parseInt(axis.labels[0], 10), parseInt(axis.labels[axis.labels.length - 1], 10));\n        }\n        else {\n            axis.actualIntervalType = axis.intervalType;\n        }\n        axis.format = this.chart.intl.getDateFormat({\n            format: axis.labelFormat, type: firstToLowerCase(axis.skeletonType), skeleton: this.getSkeleton(axis)\n        });\n        for (let i = 0; i < axis.labels.length; i++) {\n            if (!this.sameInterval(axis.labels.map(Number)[i], axis.labels.map(Number)[i - 1], axis.actualIntervalType, i)) {\n                if (withIn(i - padding, axis.visibleRange)) {\n                    axis.triggerLabelRender(this.chart, i, axis.format(new Date(axis.labels.map(Number)[i])), axis.labelStyle);\n                }\n            }\n        }\n        axis.getMaxLabelWidth(this.chart);\n    }\n    /**\n     * get same interval\n     */\n    sameInterval(currentDate, previousDate, type, index) {\n        let sameValue;\n        if (index === 0) {\n            sameValue = false;\n        }\n        else {\n            switch (type) {\n                case 'Years':\n                    sameValue = new Date(currentDate).getFullYear() === new Date(previousDate).getFullYear();\n                    break;\n                case 'Months':\n                    sameValue = new Date(currentDate).getFullYear() === new Date(previousDate).getFullYear() &&\n                        new Date(currentDate).getMonth() === new Date(previousDate).getMonth();\n                    break;\n                case 'Days':\n                    sameValue = (Math.abs(currentDate - previousDate) < 24 * 60 * 60 * 1000 &&\n                        new Date(currentDate).getDay() === new Date(previousDate).getDay());\n                    break;\n                case 'Hours':\n                    sameValue = (Math.abs(currentDate - previousDate) < 60 * 60 * 1000 &&\n                        new Date(currentDate).getDay() === new Date(previousDate).getDay());\n                    break;\n                case 'Minutes':\n                    sameValue = (Math.abs(currentDate - previousDate) < 60 * 1000 &&\n                        new Date(currentDate).getMinutes() === new Date(previousDate).getMinutes());\n                    break;\n                case 'Seconds':\n                    sameValue = (Math.abs(currentDate - previousDate) < 1000 &&\n                        new Date(currentDate).getDay() === new Date(previousDate).getDay());\n                    break;\n            }\n        }\n        return sameValue;\n    }\n    /**\n     * Get module name\n     */\n    getModuleName() {\n        /**\n         * Returns the module name\n         */\n        return 'DateTimeCategory';\n    }\n    /**\n     * To destroy the category axis.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy method performed here\n         */\n    }\n}\n","/**\n * StripLine src\n */\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Rect, TextOption, measureText, valueToCoefficient, textElement, logBase, RectOption } from '../../common/utils/helper';\n/**\n * `StripLine` module is used to render the stripLine in chart.\n */\nexport class StripLine {\n    measureStripLine(axis, stripline, seriesClipRect) {\n        let actualStart;\n        let actualEnd;\n        if (axis.valueType === 'DateTimeCategory') {\n            let start = stripline.start;\n            let end = stripline.end;\n            actualStart = start ? axis.labels.indexOf(start.getTime().toString()) : null;\n            actualEnd = end ? axis.labels.indexOf(end.getTime().toString()) : null;\n        }\n        else {\n            actualStart = stripline.start;\n            actualEnd = stripline.end;\n        }\n        let rect = this.getFromTovalue(actualStart, actualEnd, stripline.size, stripline.startFromAxis, axis);\n        let height = (axis.orientation === 'Vertical') ? (rect.to - rect.from) * axis.rect.height : seriesClipRect.height;\n        let width = (axis.orientation === 'Horizontal') ? (rect.to - rect.from) * axis.rect.width : seriesClipRect.width;\n        let x = (axis.orientation === 'Vertical') ? seriesClipRect.x : ((rect.from * axis.rect.width) + axis.rect.x);\n        let y = (axis.orientation === 'Horizontal') ? seriesClipRect.y : (axis.rect.y + axis.rect.height -\n            (rect.to * axis.rect.height));\n        if (height !== 0 && width !== 0) {\n            return new Rect(x, y, width, height);\n        }\n        return new Rect(0, 0, 0, 0);\n    }\n    /**\n     * To get from to value from start, end, size, start from axis\n     */\n    getFromTovalue(start, end, size, startFromAxis, axis) {\n        let from = startFromAxis ? axis.visibleRange.min : this.findValue(Math.min(start, isNullOrUndefined(end) ? start : end), axis);\n        let to = this.findValue(this.getToValue(Math.max(start, isNullOrUndefined(end) ? start : end), from, size, axis, end), axis);\n        return { from: valueToCoefficient(axis.isInversed ? to : from, axis), to: valueToCoefficient(axis.isInversed ? from : to, axis) };\n    }\n    getToValue(to, from, size, axis, end) {\n        if (axis.valueType === 'DateTime') {\n            return (isNullOrUndefined(end) ? new Date(new Date(from).getTime() + size) : to);\n        }\n        else {\n            return isNullOrUndefined(end) ? (axis.valueType === 'Logarithmic' ? Math.pow(axis.logBase, from) : from) + size : to;\n        }\n    }\n    findValue(value, axis) {\n        if (axis.valueType === 'Logarithmic') {\n            value = logBase(value, axis.logBase);\n        }\n        if (value < axis.visibleRange.min) {\n            value = axis.visibleRange.min;\n        }\n        else if (value > axis.visibleRange.max) {\n            value = axis.visibleRange.max;\n        }\n        return value;\n    }\n    /**\n     * To render striplines based start and end.\n     * @private\n     * @param chart\n     * @param position\n     * @param axes\n     */\n    renderStripLine(chart, position, axes) {\n        let id = chart.element.id + '_stripline_' + position + '_';\n        let striplineGroup = chart.renderer.createGroup({ id: id + 'collections' });\n        let seriesClipRect = chart.chartAxisLayoutPanel.seriesClipRect;\n        let rect;\n        let count = 0;\n        for (let axis of axes) {\n            for (let stripline of axis.stripLines) {\n                if (stripline.visible && stripline.zIndex === position) {\n                    rect = this.measureStripLine(axis, stripline, seriesClipRect);\n                    this.renderRectangle(stripline, rect, id + 'rect_' + count, striplineGroup, chart);\n                    this.renderText(stripline, rect, id + 'text_' + count, striplineGroup, chart, axis);\n                    count++;\n                }\n            }\n        }\n        chart.svgObject.appendChild(striplineGroup);\n    }\n    renderRectangle(stripline, rect, id, parent, chart) {\n        parent.appendChild(chart.renderer.drawRectangle(new RectOption(id, stripline.color, stripline.border, stripline.opacity, rect, 0, 0, '', '')));\n    }\n    renderText(stripline, rect, id, parent, chart, axis) {\n        let textSize = measureText(stripline.text, stripline.textStyle);\n        let textMid = 3 * (textSize.height / 8);\n        let ty = rect.y + (rect.height / 2) + textMid;\n        let rotation = (stripline.rotation === null) ? ((axis.orientation === 'Vertical') ? 0 : -90) : stripline.rotation;\n        let tx = rect.x + (rect.width / 2);\n        let alignment;\n        let anchor;\n        let padding = 5;\n        if (axis.orientation === 'Horizontal') {\n            tx = this.getTextStart(tx + (textMid * this.factor(stripline.horizontalAlignment)), rect.width, stripline.horizontalAlignment);\n            ty = this.getTextStart(ty - textMid, rect.height, stripline.verticalAlignment);\n            alignment = this.invertAlignment(stripline.horizontalAlignment);\n        }\n        else {\n            tx = this.getTextStart(tx, rect.width, stripline.horizontalAlignment);\n            ty = this.getTextStart(ty + (textMid * this.factor(stripline.verticalAlignment)) - padding, rect.height, stripline.verticalAlignment);\n            alignment = stripline.verticalAlignment;\n        }\n        anchor = alignment;\n        textElement(new TextOption(id, tx, ty, anchor, stripline.text, 'rotate(' + rotation + ' ' + tx + ',' + ty + ')', 'middle'), stripline.textStyle, stripline.textStyle.color, parent);\n    }\n    invertAlignment(anchor) {\n        switch (anchor) {\n            case 'Start':\n                anchor = 'Start';\n                break;\n            case 'End':\n                anchor = 'End';\n                break;\n        }\n        return anchor;\n    }\n    factor(anchor) {\n        let factor = 0;\n        switch (anchor) {\n            case 'Start':\n                factor = 1;\n                break;\n            case 'End':\n                factor = -1;\n                break;\n        }\n        return factor;\n    }\n    getTextStart(xy, size, textAlignment) {\n        let padding = 5;\n        switch (textAlignment) {\n            case 'Start':\n                xy = xy - (size / 2) + padding;\n                break;\n            case 'End':\n                xy = xy + (size / 2) - padding;\n                break;\n        }\n        return xy;\n    }\n    /**\n     * To get the module name for `StripLine`.\n     * @private\n     */\n    getModuleName() {\n        return 'StripLine';\n    }\n    /**\n     * To destroy the `StripLine` module.\n     * @private\n     */\n    destroy() {\n        // destroy peform here\n    }\n}\n","import { Rect, getAnimationFunction } from '../../common/utils/helper';\nimport { Animation } from '@syncfusion/ej2-base';\n/**\n * Base for line type series.\n */\nexport class LineBase {\n    /** @private */\n    constructor(chartModule) {\n        this.chart = chartModule;\n        this.padding = 5;\n    }\n    /**\n     * To improve the chart performance.\n     * @return {void}\n     * @private\n     */\n    improveChartPerformance(series) {\n        let tempPoints = [];\n        let xVisibleRange = series.xAxis.visibleRange;\n        let yVisibleRange = series.yAxis.visibleRange;\n        let seriesPoints = series.points;\n        let areaBounds = series.clipRect;\n        let xTolerance = Math.abs(xVisibleRange.delta / areaBounds.width);\n        let yTolerance = Math.abs(yVisibleRange.delta / areaBounds.height);\n        let prevXValue = (seriesPoints[0] && seriesPoints[0].x > xTolerance) ? 0 : xTolerance;\n        let prevYValue = (seriesPoints[0] && seriesPoints[0].y > yTolerance) ? 0 : yTolerance;\n        let xVal = 0;\n        let yVal = 0;\n        let currentPoint;\n        for (let currentPoint of seriesPoints) {\n            currentPoint.symbolLocations = [];\n            xVal = currentPoint.xValue ? currentPoint.xValue : xVisibleRange.min;\n            yVal = currentPoint.yValue ? currentPoint.yValue : yVisibleRange.min;\n            if (Math.abs(prevXValue - xVal) >= xTolerance || Math.abs(prevYValue - yVal) >= yTolerance) {\n                tempPoints.push(currentPoint);\n                prevXValue = xVal;\n                prevYValue = yVal;\n            }\n        }\n        return tempPoints;\n    }\n    /**\n     * To generate the line path direction\n     * @param firstPoint\n     * @param secondPoint\n     * @param series\n     * @param isInverted\n     * @param getPointLocation\n     * @param startPoint\n     */\n    getLineDirection(firstPoint, secondPoint, series, isInverted, getPointLocation, startPoint) {\n        let direction = '';\n        if (firstPoint != null) {\n            let point1 = getPointLocation(firstPoint.xValue, firstPoint.yValue, series.xAxis, series.yAxis, isInverted, series);\n            let point2 = getPointLocation(secondPoint.xValue, secondPoint.yValue, series.xAxis, series.yAxis, isInverted, series);\n            direction = startPoint + ' ' + (point1.x) + ' ' + (point1.y) + ' ' +\n                'L' + ' ' + (point2.x) + ' ' + (point2.y) + ' ';\n        }\n        return direction;\n    }\n    /**\n     * To append the line path.\n     * @return {void}\n     * @private\n     */\n    appendLinePath(options, series, clipRect) {\n        let htmlObject = series.chart.renderer.drawPath(options);\n        htmlObject.setAttribute('clip-path', clipRect);\n        series.pathElement = htmlObject;\n        series.seriesElement.appendChild(htmlObject);\n        series.isRectSeries = false;\n    }\n    /**\n     * To render the marker for the series.\n     * @return {void}\n     * @private\n     */\n    renderMarker(series) {\n        if (series.marker.visible) {\n            series.chart.markerRender.render(series);\n        }\n    }\n    /**\n     * To do the progressive animation.\n     * @return {void}\n     * @private\n     */\n    doProgressiveAnimation(series, option) {\n        let animation = new Animation({});\n        let path = series.pathElement;\n        let strokeDashArray = path.getAttribute('stroke-dasharray');\n        let pathLength = series.pathElement.getTotalLength();\n        let currentTime;\n        path.style.visibility = 'hidden';\n        animation.animate(path, {\n            duration: option.duration,\n            delay: option.delay,\n            progress: (args) => {\n                if (args.timeStamp >= args.delay) {\n                    path.style.visibility = 'visible';\n                    currentTime = Math.abs(Math.round(((args.timeStamp - args.delay) * pathLength) / args.duration));\n                    path.setAttribute('stroke-dasharray', currentTime + ',' + pathLength);\n                }\n            },\n            end: (model) => {\n                path.setAttribute('stroke-dasharray', strokeDashArray);\n                series.chart.trigger('animationComplete', { series: series });\n            }\n        });\n    }\n    /**\n     * To store the symbol location and region\n     * @param point\n     * @param series\n     * @param isInverted\n     * @param getLocation\n     */\n    storePointLocation(point, series, isInverted, getLocation) {\n        point.symbolLocations.push(getLocation(point.xValue, point.yValue, series.xAxis, series.yAxis, isInverted, series));\n        point.regions.push(new Rect(point.symbolLocations[0].x - series.marker.width, point.symbolLocations[0].y - series.marker.height, 2 * series.marker.width, 2 * series.marker.height));\n    }\n    /**\n     * To do the linear animation.\n     * @return {void}\n     * @private\n     */\n    doLinearAnimation(series, animation) {\n        let clipRect = series.clipRectElement.childNodes[0].childNodes[0];\n        let effect = getAnimationFunction('Linear');\n        let elementHeight = +clipRect.getAttribute('height');\n        let elementWidth = +clipRect.getAttribute('width');\n        let xCenter = +clipRect.getAttribute('x');\n        let yCenter = series.chart.requireInvertedAxis ? +clipRect.getAttribute('height') + +clipRect.getAttribute('y') :\n            +clipRect.getAttribute('y');\n        let value;\n        clipRect.style.visibility = 'hidden';\n        new Animation({}).animate(clipRect, {\n            duration: animation.duration,\n            delay: animation.delay,\n            progress: (args) => {\n                if (args.timeStamp >= args.delay) {\n                    clipRect.style.visibility = 'visible';\n                    if (series.chart.requireInvertedAxis) {\n                        value = effect(args.timeStamp - args.delay, 0, elementHeight, args.duration);\n                        clipRect.setAttribute('transform', 'translate(' + xCenter + ' ' + yCenter +\n                            ') scale(1,' + (value / elementHeight) + ') translate(' + (-xCenter) + ' ' + (-yCenter) + ')');\n                    }\n                    else {\n                        value = effect(args.timeStamp - args.delay, 0, elementWidth, args.duration);\n                        clipRect.setAttribute('transform', 'translate(' + xCenter + ' ' + yCenter +\n                            ') scale(' + (value / elementWidth) + ', 1) translate(' + (-xCenter) + ' ' + (-yCenter) + ')');\n                    }\n                }\n            },\n            end: (model) => {\n                clipRect.setAttribute('transform', 'translate(0,0)');\n                series.chart.trigger('animationComplete', { series: series });\n            }\n        });\n    }\n}\n","import { withInRange, getPoint, PathOption, TransformToVisible } from '../../common/utils/helper';\nimport { LineBase } from './line-base';\n/**\n * `LineSeries` module used to render the line series.\n */\nexport class LineSeries extends LineBase {\n    /**\n     * Render Line Series.\n     * @return {void}.\n     * @private\n     */\n    render(series, xAxis, yAxis, isInverted) {\n        let point1;\n        let point2;\n        let direction = '';\n        let prevPoint = null;\n        let startPoint = 'M';\n        let options;\n        let getCoordinate = series.chart.chartAreaType === 'PolarRadar' ? TransformToVisible : getPoint;\n        let visiblePoints = this.improveChartPerformance(series);\n        for (let point of visiblePoints) {\n            point.regions = [];\n            if (point.visible && withInRange(visiblePoints[point.index - 1], point, visiblePoints[point.index + 1], series)) {\n                direction += this.getLineDirection(prevPoint, point, series, isInverted, getCoordinate, startPoint);\n                startPoint = prevPoint ? 'L' : startPoint;\n                prevPoint = point;\n                this.storePointLocation(point, series, isInverted, getCoordinate);\n            }\n            else {\n                prevPoint = (series.emptyPointSettings.mode === 'Drop') ? prevPoint : null;\n                startPoint = (series.emptyPointSettings.mode === 'Drop') ? startPoint : 'M';\n                point.symbolLocations = [];\n            }\n        }\n        if (series.chart.chartAreaType === 'PolarRadar') {\n            if (series.isClosed) {\n                point2 = getCoordinate(visiblePoints[visiblePoints.length - 1].xValue, visiblePoints[visiblePoints.length - 1].yValue, xAxis, yAxis, isInverted, series);\n                point1 = getCoordinate(visiblePoints[0].xValue, visiblePoints[0].yValue, xAxis, yAxis, isInverted, series);\n                direction = direction.concat(startPoint + ' ' + point2.x + ' ' + point2.y + ' ' + 'L' + ' ' + point1.x + ' ' + point1.y);\n            }\n        }\n        let name = series.category === 'Indicator' ? series.chart.element.id + '_Indicator_' + series.index + '_' + series.name :\n            series.category === 'TrendLine' ? series.chart.element.id + '_Series_' + series.sourceIndex + '_TrendLine_' + series.index :\n                series.chart.element.id + '_Series_' + series.index;\n        options = new PathOption(name, 'none', series.width, series.interior, series.opacity, series.dashArray, direction);\n        this.appendLinePath(options, series, '');\n        this.renderMarker(series);\n    }\n    /**\n     * Animates the series.\n     * @param  {Series} series - Defines the series to animate.\n     * @return {void}\n     */\n    doAnimation(series) {\n        let option = series.animation;\n        this.doProgressiveAnimation(series, option);\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        /**\n         * Returns the module name of the series\n         */\n        return 'LineSeries';\n    }\n    /**\n     * To destroy the line series.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy method performed here\n         */\n    }\n}\n","import { Animation } from '@syncfusion/ej2-base';\nimport { DoubleRange } from '../utils/double-range';\nimport { Rect, valueToCoefficient, getMinPointsDelta, PathOption } from '../../common/utils/helper';\nimport { getAnimationFunction, getPoint } from '../../common/utils/helper';\nimport { pointRender } from '../../common/model/constants';\n/**\n * Column Series Base\n */\nexport class ColumnBase {\n    /**\n     * To get the position of the column series.\n     * @return {DoubleRange}\n     * @private\n     */\n    getSideBySideInfo(series) {\n        if (series.chart.enableSideBySidePlacement && !series.position) {\n            this.getSideBySidePositions(series);\n        }\n        let position = !series.chart.enableSideBySidePlacement ? 0 : series.position;\n        let rectCount = !series.chart.enableSideBySidePlacement ? 1 : series.rectCount;\n        series.isRectSeries = true;\n        let visibleSeries = series.chart.visibleSeries;\n        let seriesSpacing = series.chart.enableSideBySidePlacement ? series.columnSpacing : 0; // Column Spacing\n        let pointSpacing = series.columnWidth; // Column width\n        let minimumPointDelta = getMinPointsDelta(series.xAxis, visibleSeries);\n        let width = minimumPointDelta * pointSpacing;\n        let radius;\n        let location = (position) / rectCount - 0.5;\n        let doubleRange = new DoubleRange(location, location + (1 / rectCount));\n        if (!(isNaN(doubleRange.start) || isNaN(doubleRange.end))) {\n            doubleRange = new DoubleRange(doubleRange.start * width, doubleRange.end * width);\n            radius = seriesSpacing * doubleRange.delta;\n            doubleRange = new DoubleRange(doubleRange.start + radius / 2, doubleRange.end - radius / 2);\n        }\n        return doubleRange;\n    }\n    /**\n     * To get the rect values.\n     * @return {Rect}\n     * @private\n     */\n    getRectangle(x1, y1, x2, y2, series) {\n        let point1 = getPoint(x1, y1, series.xAxis, series.yAxis, series.chart.requireInvertedAxis);\n        let point2 = getPoint(x2, y2, series.xAxis, series.yAxis, series.chart.requireInvertedAxis);\n        return new Rect(Math.min(point1.x, point2.x), Math.min(point1.y, point2.y), Math.abs(point2.x - point1.x), Math.abs(point2.y - point1.y));\n    }\n    /**\n     * To get the position of each series.\n     * @return {void}\n     * @private\n     */\n    getSideBySidePositions(series) {\n        let chart = series.chart;\n        let seriesCollection = [];\n        for (let columnItem of chart.columns) {\n            for (let item of chart.rows) {\n                this.findRectPosition(series.findSeriesCollection(columnItem, item, false));\n            }\n        }\n    }\n    findRectPosition(seriesCollection) {\n        let stackingGroup = [];\n        let vSeries = { rectCount: 0, position: null };\n        seriesCollection.forEach((value) => {\n            if (value.type.indexOf('Stacking') !== -1) {\n                if (value.stackingGroup) {\n                    if (stackingGroup[value.stackingGroup] === undefined) {\n                        value.position = vSeries.rectCount;\n                        stackingGroup[value.stackingGroup] = vSeries.rectCount++;\n                    }\n                    else {\n                        value.position = stackingGroup[value.stackingGroup];\n                    }\n                }\n                else {\n                    if (vSeries.position === null) {\n                        value.position = vSeries.rectCount;\n                        vSeries.position = vSeries.rectCount++;\n                    }\n                    else {\n                        value.position = vSeries.position;\n                    }\n                }\n            }\n            else {\n                value.position = vSeries.rectCount++;\n            }\n        });\n        seriesCollection.forEach((value) => {\n            value.rectCount = vSeries.rectCount;\n        });\n    }\n    /**\n     * Updates the symbollocation for points\n     * @return void\n     * @private\n     */\n    updateSymbolLocation(point, rect, series) {\n        if (!series.chart.requireInvertedAxis) {\n            this.updateXRegion(point, rect, series);\n        }\n        else {\n            this.updateYRegion(point, rect, series);\n        }\n    }\n    /**\n     * Update the region for the point.\n     * @return {void}\n     * @private\n     */\n    updateXRegion(point, rect, series) {\n        point.regions.push(rect);\n        point.symbolLocations.push({\n            x: rect.x + (rect.width) / 2,\n            y: (series.seriesType === 'BoxPlot' || series.seriesType.indexOf('HighLow') !== -1 ||\n                (point.yValue >= 0 === !series.yAxis.isInversed)) ? rect.y : (rect.y + rect.height)\n        });\n    }\n    /**\n     * Update the region for the point in bar series.\n     * @return {void}\n     * @private\n     */\n    updateYRegion(point, rect, series) {\n        point.regions.push(rect);\n        point.symbolLocations.push({\n            x: (series.seriesType === 'BoxPlot' || series.seriesType.indexOf('HighLow') !== -1 ||\n                (point.yValue >= 0 === !series.yAxis.isInversed)) ? rect.x + rect.width : rect.x,\n            y: rect.y + rect.height / 2\n        });\n    }\n    /**\n     * To trigger the point rendering event.\n     * @return {void}\n     * @private\n     */\n    triggerEvent(series, point, fill, border) {\n        let argsData = {\n            cancel: false, name: pointRender, series: series, point: point,\n            fill: series.setPointColor(point, fill),\n            border: series.setBorderColor(point, border)\n        };\n        series.chart.trigger(pointRender, argsData);\n        point.color = argsData.fill;\n        return argsData;\n    }\n    /**\n     * To draw the rectangle for points.\n     * @return {void}\n     * @private\n     */\n    drawRectangle(series, point, rect, argsData) {\n        let check = series.chart.requireInvertedAxis ? rect.height : rect.width;\n        if (check <= 0) {\n            return null;\n        }\n        let direction = this.calculateRoundedRectPath(rect, series.cornerRadius.topLeft, series.cornerRadius.topRight, series.cornerRadius.bottomLeft, series.cornerRadius.bottomRight);\n        let name = series.category === 'Indicator' ? series.chart.element.id + '_Indicator_' + series.index + '_' + series.name +\n            '_Point_' + point.index : series.chart.element.id + '_Series_' + series.index + '_Point_' + point.index;\n        let options = new PathOption(name, argsData.fill, argsData.border.width, argsData.border.color, series.opacity, series.dashArray, direction);\n        let element = series.chart.renderer.drawPath(options);\n        switch (series.seriesType) {\n            case 'XY':\n                element.setAttribute('aria-label', point.x.toString() + ':' + point.yValue.toString());\n                break;\n            case 'HighLow':\n                element.setAttribute('aria-label', point.x.toString() + ':' + point.high.toString() + ':' + point.low.toString());\n                break;\n        }\n        series.seriesElement.appendChild(element);\n    }\n    /**\n     * To animate the series.\n     * @return {void}\n     * @private\n     */\n    animate(series) {\n        let rectElements = series.seriesElement.childNodes;\n        let count = series.category === 'Indicator' ? 0 : 1;\n        for (let point of series.points) {\n            if (!point.symbolLocations.length && !(series.type === 'BoxAndWhisker' && point.regions.length)) {\n                continue;\n            }\n            this.animateRect(rectElements[count], series, point);\n            count++;\n        }\n    }\n    /**\n     * To animate the series.\n     * @return {void}\n     * @private\n     */\n    animateRect(element, series, point) {\n        let option = series.animation;\n        let effect = getAnimationFunction('Linear');\n        let isPlot = point.yValue < 0;\n        let x;\n        let y;\n        let elementHeight = +point.regions[0].height;\n        let elementWidth = +point.regions[0].width;\n        let centerX;\n        let centerY;\n        if (!series.chart.requireInvertedAxis) {\n            x = +point.regions[0].x;\n            if (series.type.indexOf('Stacking') > -1) {\n                y = (1 - valueToCoefficient(0, series.yAxis)) * (series.yAxis.rect.height);\n                centerX = x;\n                centerY = y;\n            }\n            else {\n                y = +point.regions[0].y;\n                centerY = (series.seriesType.indexOf('HighLow') !== -1 || series.type.indexOf('Waterfall') !== -1) ? y + elementHeight / 2 :\n                    (isPlot !== series.yAxis.isInversed) ? y : y + elementHeight;\n                centerX = isPlot ? x : x + elementWidth;\n            }\n        }\n        else {\n            y = +point.regions[0].y;\n            if (series.type.indexOf('Stacking') > -1) {\n                x = (valueToCoefficient(0, series.yAxis)) * series.yAxis.rect.width;\n                centerX = x;\n                centerY = y;\n            }\n            else {\n                x = +point.regions[0].x;\n                centerY = isPlot ? y : y + elementHeight;\n                centerX = (series.seriesType.indexOf('HighLow') !== -1 || series.type.indexOf('Waterfall') !== -1) ? x + elementWidth / 2 :\n                    (isPlot !== series.yAxis.isInversed) ? x + elementWidth : x;\n            }\n        }\n        let value;\n        element.style.visibility = 'hidden';\n        new Animation({}).animate(element, {\n            duration: option.duration,\n            delay: option.delay,\n            progress: (args) => {\n                if (args.timeStamp >= args.delay) {\n                    element.style.visibility = 'visible';\n                    if (!series.chart.requireInvertedAxis) {\n                        elementHeight = elementHeight ? elementHeight : 1;\n                        value = effect(args.timeStamp - args.delay, 0, elementHeight, args.duration);\n                        element.setAttribute('transform', 'translate(' + centerX + ' ' + centerY +\n                            ') scale(1,' + (value / elementHeight) + ') translate(' + (-centerX) + ' ' + (-centerY) + ')');\n                    }\n                    else {\n                        elementWidth = elementWidth ? elementWidth : 1;\n                        value = effect(args.timeStamp - args.delay, 0, elementWidth, args.duration);\n                        element.setAttribute('transform', 'translate(' + centerX + ' ' + centerY +\n                            ') scale(' + (value / elementWidth) + ', 1) translate(' + (-centerX) + ' ' + (-centerY) + ')');\n                    }\n                }\n            },\n            end: (model) => {\n                element.setAttribute('transform', 'translate(0,0)');\n                let seriesElement = series.seriesElement;\n                if (element === seriesElement.lastElementChild || point.index === series.points.length - 1 ||\n                    (series.type === 'Waterfall' && element === seriesElement.children[seriesElement.childElementCount - 2])) {\n                    series.chart.trigger('animationComplete', { series: series });\n                    if (series.type === 'Waterfall') {\n                        let rectElements = seriesElement.childNodes;\n                        for (let i = 0; i < rectElements.length; i++) {\n                            if (rectElements[i].id.indexOf('Connector') !== -1) {\n                                rectElements[i].style.visibility = 'visible';\n                                rectElements[i].setAttribute('transform', 'translate(0,0)');\n                            }\n                        }\n                    }\n                }\n            }\n        });\n    }\n    /**\n     * To get rounded rect path direction\n     */\n    calculateRoundedRectPath(rect, topLeft, topRight, bottomLeft, bottomRight) {\n        return 'M' + ' ' + rect.x + ' ' + (topLeft + rect.y) +\n            ' Q ' + rect.x + ' ' + rect.y + ' ' + (rect.x + topLeft) + ' ' +\n            rect.y + ' ' + 'L' + ' ' + (rect.x + rect.width - topRight) + ' ' + rect.y +\n            ' Q ' + (rect.x + rect.width) + ' ' + rect.y + ' ' +\n            (rect.x + rect.width) + ' ' + (rect.y + topRight) + ' ' + 'L ' +\n            (rect.x + rect.width) + ' ' + (rect.y + rect.height - bottomRight)\n            + ' Q ' + (rect.x + rect.width) + ' ' + (rect.y + rect.height) + ' ' + (rect.x + rect.width - bottomRight) + ' ' +\n            (rect.y + rect.height) + ' ' + 'L ' + (rect.x + bottomLeft) + ' ' + (rect.y + rect.height) + ' Q ' + rect.x + ' ' +\n            (rect.y + rect.height) + ' ' + rect.x + ' ' + (rect.y + rect.height - bottomLeft) + ' ' + 'L' + ' ' + rect.x + ' ' +\n            (topLeft + rect.y) + ' ' + 'Z';\n    }\n}\n","import { withInRange } from '../../common/utils/helper';\nimport { ColumnBase } from './column-base';\n/**\n * `ColumnSeries` Module used to render the column series.\n */\nexport class ColumnSeries extends ColumnBase {\n    /**\n     * Render Column series.\n     * @return {void}\n     * @private\n     */\n    render(series) {\n        let rect;\n        let sideBySideInfo = this.getSideBySideInfo(series);\n        let origin = Math.max(series.yAxis.visibleRange.min, 0);\n        let argsData;\n        for (let pointColumn of series.points) {\n            pointColumn.symbolLocations = [];\n            pointColumn.regions = [];\n            if (pointColumn.visible && withInRange(series.points[pointColumn.index - 1], pointColumn, series.points[pointColumn.index + 1], series)) {\n                rect = this.getRectangle(pointColumn.xValue + sideBySideInfo.start, pointColumn.yValue, pointColumn.xValue + sideBySideInfo.end, origin, series);\n                let color = series.category === 'Indicator' ? pointColumn.color : series.interior;\n                argsData = this.triggerEvent(series, pointColumn, color, { width: series.border.width, color: series.border.color });\n                if (!argsData.cancel) {\n                    this.updateSymbolLocation(pointColumn, rect, series);\n                    this.drawRectangle(series, pointColumn, rect, argsData);\n                }\n            }\n        }\n    }\n    /**\n     * Animates the series.\n     * @param  {Series} series - Defines the series to animate.\n     * @return {void}\n     */\n    doAnimation(series) {\n        this.animate(series);\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        return 'ColumnSeries';\n        /**\n         * return the module name\n         */\n    }\n    /**\n     * To destroy the column series.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy method performed here\n         */\n    }\n}\n","import { getPoint } from '../../common/utils/helper';\nimport { LineBase } from './line-base';\nimport { RectOption } from '../../common/utils/helper';\nimport { DataUtil } from '@syncfusion/ej2-data';\n/**\n * Base class for multi colored series\n */\nexport class MultiColoredSeries extends LineBase {\n    /**\n     * To Generate the area path direction\n     * @param xValue\n     * @param yValue\n     * @param series\n     * @param isInverted\n     * @param getPointLocation\n     * @param startPoint\n     * @param startPath\n     */\n    getAreaPathDirection(xValue, yValue, series, isInverted, getPointLocation, startPoint, startPath) {\n        let direction = '';\n        let firstPoint;\n        if (startPoint === null) {\n            firstPoint = getPointLocation(xValue, yValue, series.xAxis, series.yAxis, isInverted, series);\n            direction += (startPath + ' ' + (firstPoint.x) + ' ' + (firstPoint.y) + ' ');\n        }\n        return direction;\n    }\n    /**\n     * To Generate the empty point direction\n     * @param firstPoint\n     * @param secondPoint\n     * @param series\n     * @param isInverted\n     * @param getPointLocation\n     */\n    getAreaEmptyDirection(firstPoint, secondPoint, series, isInverted, getPointLocation) {\n        let direction = '';\n        direction += this.getAreaPathDirection(firstPoint.x, firstPoint.y, series, isInverted, getPointLocation, null, 'L');\n        direction += this.getAreaPathDirection(secondPoint.x, secondPoint.y, series, isInverted, getPointLocation, null, 'L');\n        return direction;\n    }\n    /**\n     * To set point color\n     * @param points\n     */\n    setPointColor(currentPoint, previous, series, isXSegment, segments) {\n        if (series.pointColorMapping === '') {\n            let segment;\n            let value;\n            for (let i = 0; i < segments.length; i++) {\n                segment = segments[i];\n                value = isXSegment ? currentPoint.xValue : currentPoint.yValue;\n                if (value <= this.getAxisValue(segment.value, isXSegment ? series.xAxis : series.yAxis, series.chart) || !segment.value) {\n                    currentPoint.interior = segment.color;\n                    break;\n                }\n            }\n            if (currentPoint.interior == null) {\n                currentPoint.interior = series.interior;\n            }\n            return false;\n        }\n        else {\n            if (previous) {\n                return series.setPointColor(currentPoint, series.interior) !== series.setPointColor(previous, series.interior);\n            }\n            else {\n                return false;\n            }\n        }\n    }\n    sortSegments(series, chartSegments) {\n        let axis = series.segmentAxis === 'X' ? series.xAxis : series.yAxis;\n        let segments = [].concat(chartSegments);\n        let access = this;\n        return segments.sort((a, b) => {\n            return access.getAxisValue(a.value, axis, series.chart) - access.getAxisValue(b.value, axis, series.chart);\n        });\n    }\n    /**\n     * Segment calculation performed here\n     * @param series\n     * @param options\n     * @param chartSegments\n     */\n    applySegmentAxis(series, options, segments) {\n        if (series.pointColorMapping !== '') {\n            options.map((option) => {\n                this.appendLinePath(option, series, '');\n            });\n            return null;\n        }\n        let isXSegment = series.segmentAxis === 'X';\n        let axis = isXSegment ? series.xAxis : series.yAxis;\n        let chart = series.chart;\n        let segment;\n        this.includeSegment(segments, axis, series, segments.length);\n        let length = segments.length;\n        let value;\n        let clipPath;\n        for (let index = 0; index < length; index++) {\n            segment = segments[index];\n            value = this.getAxisValue(segment.value, axis, series.chart);\n            clipPath = this.createClipRect(index ? this.getAxisValue(segments[index - 1].value, axis, series.chart)\n                : axis.visibleRange.min, value, series, index, isXSegment);\n            if (clipPath) {\n                options.map((option) => {\n                    series.seriesElement.appendChild(chart.renderer.drawPath({\n                        'clip-path': clipPath,\n                        'stroke-dasharray': segment.dashArray,\n                        'opacity': option.opacity,\n                        'stroke': series.type.indexOf('Line') > -1 ? segment.color || series.interior : series.border.color,\n                        'stroke-width': option['stroke-width'],\n                        'fill': series.type.indexOf('Line') > -1 ? 'none' : segment.color || series.interior,\n                        'id': option.id + '_Segment_' + index,\n                        'd': option.d\n                    }));\n                });\n            }\n        }\n    }\n    includeSegment(segments, axis, series, length) {\n        if (length <= 0) {\n            segments.push({ value: axis.visibleRange.max, color: series.interior });\n            return null;\n        }\n        if (this.getAxisValue(segments[length - 1].value, axis, series.chart) < axis.visibleRange.max) {\n            segments.push({ value: axis.visibleRange.max, color: series.interior });\n        }\n    }\n    /**\n     * To create clip rect for segment axis\n     * @param startValue\n     * @param endValue\n     * @param series\n     * @param index\n     * @param isX\n     * @param chart\n     */\n    createClipRect(startValue, endValue, series, index, isX) {\n        let isRequired = series.chart.requireInvertedAxis;\n        let startPointLocation = getPoint(isX ? startValue : series.xAxis.visibleRange.min, isX ? series.yAxis.visibleRange.max : endValue, series.xAxis, series.yAxis, isRequired);\n        let endPointLocation = getPoint(isX ? endValue : series.xAxis.visibleRange.max, isX ? series.yAxis.visibleRange.min : startValue, series.xAxis, series.yAxis, isRequired);\n        endPointLocation = isRequired ?\n            [startPointLocation, startPointLocation = endPointLocation][0] : endPointLocation;\n        if ((endPointLocation.x - startPointLocation.x > 0) && (endPointLocation.y - startPointLocation.y > 0)) {\n            series.seriesElement.appendChild(series.chart.renderer.drawClipPath(new RectOption(series.chart.element.id + '_ChartSegmentClipRect_' + index, 'transparent', { width: 1, color: 'Gray' }, 1, {\n                x: startPointLocation.x,\n                y: startPointLocation.y,\n                width: endPointLocation.x - startPointLocation.x,\n                height: endPointLocation.y - startPointLocation.y\n            })));\n            return 'url(#' + series.chart.element.id + '_ChartSegmentClipRect_' + index + ')';\n        }\n        return null;\n    }\n    /**\n     * To get exact value from segment value\n     * @param segmentValue\n     * @param axis\n     * @param chart\n     */\n    getAxisValue(segmentValue, axis, chart) {\n        if (segmentValue === null) {\n            segmentValue = axis.visibleRange.max;\n        }\n        if (axis.valueType === 'DateTime') {\n            let option = { skeleton: 'full', type: 'dateTime' };\n            return Date.parse(chart.intl.getDateParser(option)(chart.intl.getDateFormat(option)(new Date(DataUtil.parse.parseJson({ val: segmentValue }).val))));\n        }\n        else if (axis.valueType.indexOf('Category') > -1) {\n            let xValue = axis.valueType === 'DateTimeCategory' ?\n                (segmentValue.getTime()).toString() :\n                segmentValue;\n            return (axis.labels.indexOf(xValue) < 0) ? +segmentValue : axis.labels.indexOf(xValue);\n        }\n        else {\n            return +segmentValue;\n        }\n    }\n}\n","import { getPoint, withInRange, ChartLocation, PathOption, TransformToVisible } from '../../common/utils/helper';\nimport { MultiColoredSeries } from './multi-colored-base';\n/**\n * `AreaSeries` module is used to render the area series.\n */\nexport class AreaSeries extends MultiColoredSeries {\n    /**\n     * Render Area series.\n     * @return {void}\n     * @private\n     */\n    render(series, xAxis, yAxis, isInverted) {\n        let startPoint = null;\n        let direction = '';\n        let origin = series.chart.chartAreaType === 'PolarRadar' ? series.points[0].yValue :\n            Math.max(series.yAxis.visibleRange.min, 0);\n        let currentXValue;\n        let getCoordinate = series.chart.chartAreaType === 'PolarRadar' ? TransformToVisible : getPoint;\n        series.points.map((point, i, seriesPoints) => {\n            currentXValue = point.xValue;\n            point.symbolLocations = [];\n            point.regions = [];\n            if (point.visible && withInRange(seriesPoints[i - 1], point, seriesPoints[i + 1], series)) {\n                direction += this.getAreaPathDirection(currentXValue, origin, series, isInverted, getCoordinate, startPoint, 'M');\n                startPoint = startPoint || new ChartLocation(currentXValue, origin);\n                // First Point to draw the area path\n                direction += this.getAreaPathDirection(currentXValue, point.yValue, series, isInverted, getCoordinate, null, 'L');\n                if (seriesPoints[i + 1] && !seriesPoints[i + 1].visible && series.emptyPointSettings.mode !== 'Drop') {\n                    direction += this.getAreaEmptyDirection({ 'x': currentXValue, 'y': origin }, startPoint, series, isInverted, getCoordinate);\n                    startPoint = null;\n                }\n                this.storePointLocation(point, series, isInverted, getPoint);\n            }\n        });\n        this.appendLinePath(new PathOption(series.chart.element.id + '_Series_' + series.index, series.interior, series.border.width, series.border.color, series.opacity, series.dashArray, (series.points.length > 1 ? (direction + this.getAreaPathDirection(series.points[series.points.length - 1].xValue, series.chart.chartAreaType === 'PolarRadar' ?\n            series.points[series.points.length - 1].yValue : origin, series, isInverted, getCoordinate, null, 'L')) : '')), series, '');\n        this.renderMarker(series);\n    }\n    /**\n     * To destroy the area series.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy method calling here\n         */\n    }\n    /**\n     * Get module name\n     */\n    getModuleName() {\n        /**\n         * Returns the module name of the series\n         */\n        return 'AreaSeries';\n    }\n    /**\n     * Animates the series.\n     * @param  {Series} series - Defines the series to animate.\n     * @return {void}\n     */\n    doAnimation(series) {\n        let option = series.animation;\n        this.doLinearAnimation(series, option);\n    }\n}\n","import { withInRange } from '../../common/utils/helper';\nimport { ColumnBase } from './column-base';\n/**\n * `BarSeries` module is used to render the bar series.\n */\nexport class BarSeries extends ColumnBase {\n    /**\n     * Render Bar series.\n     * @return {void}\n     * @private\n     */\n    render(series) {\n        let origin = Math.max(series.yAxis.visibleRange.min, 0);\n        let sideBySideInfo = this.getSideBySideInfo(series);\n        let rect;\n        let argsData;\n        for (let pointBar of series.points) {\n            pointBar.symbolLocations = [];\n            pointBar.regions = [];\n            if (pointBar.visible && withInRange(series.points[pointBar.index - 1], pointBar, series.points[pointBar.index + 1], series)) {\n                rect = this.getRectangle(pointBar.xValue + sideBySideInfo.start, pointBar.yValue, pointBar.xValue + sideBySideInfo.end, origin, series);\n                argsData = this.triggerEvent(series, pointBar, series.interior, { width: series.border.width, color: series.border.color });\n                if (!argsData.cancel) {\n                    this.updateSymbolLocation(pointBar, rect, series);\n                    this.drawRectangle(series, pointBar, rect, argsData);\n                }\n            }\n        }\n    }\n    /**\n     * Animates the series.\n     * @param  {Series} series - Defines the series to animate.\n     * @return {void}\n     */\n    doAnimation(series) {\n        this.animate(series);\n    }\n    /**\n     * To destroy the bar series.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy method performed here\n         */\n    }\n    /**\n     * Get module name\n     */\n    getModuleName() {\n        return 'BarSeries';\n    }\n}\n","import { valueToCoefficient, TextOption, inside, measureText } from '../../common/utils/helper';\nimport { Size, Rect, PathOption, CircleOption } from '../../common/utils/helper';\nimport { LineBase } from '../series/line-base';\nimport { textElement, valueToPolarCoefficient, CoefficientToVector } from '../../common/utils/helper';\n/**\n * Specifies the Polar Axis Layout.\n */\nconst axisPadding = 10;\nexport class PolarRadarPanel extends LineBase {\n    /**\n     * Measure the polar radar axis size.\n     * @return {void}\n     * @private\n     */\n    measureAxis(rect) {\n        let chart = this.chart;\n        this.initialClipRect = rect;\n        this.seriesClipRect = new Rect(rect.x, rect.y, rect.width, rect.height);\n        //Measure axis size calculation\n        this.measureRowAxis(chart, this.initialClipRect);\n        this.measureColumnAxis(chart, this.initialClipRect);\n        this.calculateAxisSize();\n    }\n    measureRowAxis(chart, rect) {\n        this.calculateRowSize(rect);\n        let row = chart.rows[0];\n        this.measureDefinition(row, chart, new Size(chart.availableSize.width, row.computedHeight), rect);\n    }\n    measureColumnAxis(chart, rect) {\n        this.calculateColumnSize(rect);\n        let column = chart.columns[0];\n        this.measureDefinition(column, chart, new Size(column.computedWidth, chart.availableSize.height), rect);\n    }\n    /**\n     * Measure the column and row in chart.\n     * @return {void}\n     * @private\n     */\n    measureDefinition(definition, chart, size, clipRect) {\n        for (let axis of definition.axes) {\n            axis.getModule(chart);\n            axis.baseModule.calculateRangeAndInterval(size, axis);\n        }\n    }\n    /**\n     * Measure the axis.\n     * @return {void}\n     * @private\n     */\n    calculateAxisSize() {\n        let chart = this.chart;\n        let axis;\n        let padding = 5;\n        this.centerX = this.initialClipRect.width * 0.5 + this.initialClipRect.x;\n        this.centerY = this.initialClipRect.height * 0.5 + this.initialClipRect.y;\n        chart.radius = Math.min(this.initialClipRect.width, this.initialClipRect.height) / 2 - padding -\n            chart.primaryXAxis.majorTickLines.height - chart.primaryXAxis.maxLabelSize.height;\n        chart.radius = (chart.primaryXAxis.coefficient * chart.radius) / 100;\n        this.seriesClipRect.y = this.centerY - chart.radius;\n        this.seriesClipRect.x = this.centerX - chart.radius;\n        this.seriesClipRect.height = 2 * chart.radius;\n        this.seriesClipRect.width = 2 * chart.radius;\n        this.calculateRowSize(this.seriesClipRect);\n        axis = chart.primaryYAxis;\n        axis.rect = this.seriesClipRect;\n        this.calculateColumnSize(this.seriesClipRect);\n        axis = chart.primaryXAxis;\n        axis.rect = this.seriesClipRect;\n    }\n    /**\n     * Measure the axis.\n     * @return {void}\n     * @private\n     */\n    measure() {\n        let chart = this.chart;\n        chart.verticalAxes.push(chart.primaryYAxis);\n        let row = chart.rows[0];\n        row.axes[0] = chart.primaryYAxis;\n        chart.rows[0] = row;\n        chart.horizontalAxes.push(chart.primaryXAxis);\n        let column = chart.columns[0];\n        column.axes[0] = chart.primaryXAxis;\n        chart.columns[0] = column;\n    }\n    /**\n     * Measure the row size.\n     * @return {void}\n     */\n    calculateRowSize(rect) {\n        /*! Calculate row size */\n        let chart = this.chart;\n        let row = chart.rows[0];\n        row.computedHeight = rect.height / 2;\n        row.computedTop = rect.y;\n        chart.rows[0] = row;\n    }\n    /**\n     * Measure the row size.\n     * @return {void}\n     */\n    calculateColumnSize(rect) {\n        /*! Calculate column size */\n        let chart = this.chart;\n        let column = chart.columns[0];\n        column.computedLeft = rect.x;\n        column.computedWidth = rect.width;\n        chart.columns[0] = column;\n    }\n    /**\n     * To render the axis element.\n     * @return {void}\n     * @private\n     */\n    renderAxes() {\n        let axis;\n        let chart = this.chart;\n        this.startAngle = chart.primaryXAxis.startAngle;\n        let axisElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisCollection' });\n        let axisLineElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisOutsideCollection' });\n        for (let i = 0, len = chart.axisCollections.length; i < len; i++) {\n            this.element = chart.renderer.createGroup({ id: chart.element.id + 'AxisGroup' + i });\n            axis = chart.axisCollections[i];\n            if (axis.orientation === 'Horizontal') {\n                if (axis.majorGridLines.width > 0 || axis.majorTickLines.width > 0) {\n                    this.drawXAxisGridLine(axis, i);\n                }\n                if (axis.visible) {\n                    this.drawXAxisLabels(axis, i);\n                }\n            }\n            else {\n                this.drawYAxisGridLine(axis, i);\n                if (axis.lineStyle.width > 0) {\n                    this.drawYAxisLine(axis, i, axis.plotOffset, 0);\n                }\n                if (axis.visible) {\n                    this.drawYAxisLabels(axis, i);\n                }\n            }\n            axisElement.appendChild(this.element);\n        }\n        axisElement.appendChild(this.element);\n        chart.svgObject.appendChild(axisElement);\n        return axisLineElement;\n    }\n    drawYAxisLine(axis, index, plotX, plotY) {\n        let chart = this.chart;\n        let optionsLine = {};\n        let vector = CoefficientToVector(valueToPolarCoefficient(axis.visibleLabels[0].value, axis), this.startAngle);\n        let axisLine = 'M ' + this.centerX + ' ' + this.centerY + 'L ' +\n            (this.centerX + chart.radius * vector.x) + ' ' + (this.centerY + chart.radius * vector.y);\n        optionsLine = {\n            'id': chart.element.id + 'AxisLine_' + index,\n            'd': axisLine,\n            'stroke-dasharray': axis.lineStyle.dashArray,\n            'stroke-width': axis.lineStyle.width,\n            'stroke': axis.lineStyle.color || chart.themeStyle.axisLine\n        };\n        chart.yAxisElements.appendChild(chart.renderer.drawPath(optionsLine));\n    }\n    drawYAxisLabels(axis, index) {\n        let chart = this.chart;\n        let elementSize;\n        let options;\n        let pointX = 0;\n        let pointY = 0;\n        let vector;\n        let angle = this.startAngle < 0 ? this.startAngle + 360 : this.startAngle;\n        let anchor = 'middle';\n        let radius;\n        let padding = 5;\n        let labelElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisLabels' + index });\n        vector = CoefficientToVector(valueToPolarCoefficient(axis.visibleLabels[0].value, axis), this.startAngle);\n        for (let i = 0, len = axis.visibleLabels.length; i < len; i++) {\n            radius = chart.radius * valueToCoefficient(axis.visibleLabels[i].value, axis);\n            elementSize = axis.visibleLabels[i].size;\n            radius = chart.radius * valueToCoefficient(axis.visibleLabels[i].value, axis);\n            pointX = (this.centerX + radius * vector.x) + ((axis.majorTickLines.height + elementSize.width / 2 + padding / 2)\n                * (Math.cos(angle * Math.PI / 180)) * (axis.labelPosition === 'Inside' ? 1 : -1));\n            pointY = (this.centerY + radius * vector.y) + ((axis.majorTickLines.height + elementSize.height / 2)\n                * (Math.sin(angle * Math.PI / 180)) * (axis.labelPosition === 'Inside' ? 1 : -1));\n            options = new TextOption(chart.element.id + index + '_AxisLabel_' + i, pointX, pointY + (elementSize.height / 4), anchor, axis.visibleLabels[i].text);\n            textElement(options, axis.labelStyle, axis.labelStyle.color || chart.themeStyle.axisLabel, labelElement);\n        }\n        chart.yAxisElements.appendChild(labelElement);\n    }\n    drawYAxisGridLine(axis, index) {\n        let chart = this.chart;\n        let options;\n        let radius;\n        let majorTick = '';\n        let majorGrid = '';\n        let vector;\n        let vector2;\n        let angle = this.startAngle < 0 ? this.startAngle + 360 : this.startAngle;\n        let rect = axis.rect;\n        let x1;\n        let y1;\n        let x2;\n        let y2;\n        let border = {\n            color: axis.majorGridLines.color || chart.themeStyle.majorGridLine,\n            width: axis.majorGridLines.width\n        };\n        if (axis.majorGridLines.width > 0) {\n            if (chart.visibleSeries[0].type === 'Polar') {\n                for (let j = 0; j < axis.visibleLabels.length; j++) {\n                    radius = chart.radius * valueToCoefficient(axis.visibleLabels[j].value, axis);\n                    options = new CircleOption(chart.element.id + '_MajorGridLine_' + index, 'transparent', border, axis.majorGridLines.width, this.centerX, this.centerY, radius);\n                    this.element.appendChild(chart.renderer.drawCircle(options));\n                }\n            }\n            else {\n                for (let j = 0; j < axis.visibleLabels.length; j++) {\n                    radius = chart.radius * valueToCoefficient(axis.visibleLabels[j].value, axis);\n                    for (let i = 0, len = chart.primaryXAxis.visibleLabels.length; i < len; i++) {\n                        vector = CoefficientToVector(valueToPolarCoefficient(chart.primaryXAxis.visibleLabels[i].value, chart.primaryXAxis), this.startAngle);\n                        if (i + 1 < len) {\n                            vector2 = CoefficientToVector(valueToPolarCoefficient(chart.primaryXAxis.visibleLabels[i + 1].value, chart.primaryXAxis), this.startAngle);\n                        }\n                        else {\n                            vector2 = CoefficientToVector(valueToPolarCoefficient(chart.primaryXAxis.visibleLabels[0].value, chart.primaryXAxis), this.startAngle);\n                        }\n                        x1 = this.centerX + radius * vector.x;\n                        y1 = this.centerY + radius * vector.y;\n                        x2 = this.centerX + radius * vector2.x;\n                        y2 = this.centerY + radius * vector2.y;\n                        majorGrid = majorGrid.concat('M' + ' ' + x1 + ' ' + y1 + ' ' + 'L' + ' ' + x2 + ' ' + y2 + ' ');\n                    }\n                }\n                options = new PathOption(chart.element.id + '_MajorGridLine_' + index, 'transparent', axis.majorGridLines.width, axis.majorGridLines.color || chart.themeStyle.majorGridLine, null, null, majorGrid);\n                this.element.appendChild(chart.renderer.drawPath(options));\n            }\n        }\n        if (axis.majorTickLines.width > 0) {\n            vector = CoefficientToVector(valueToPolarCoefficient(axis.visibleLabels[0].value, axis), this.startAngle);\n            for (let i = 0; i < axis.visibleLabels.length; i++) {\n                radius = chart.radius * valueToCoefficient(axis.visibleLabels[i].value, axis);\n                x1 = this.centerX + radius * vector.x;\n                y1 = this.centerY + radius * vector.y;\n                x2 = x1 + (axis.majorTickLines.height * (Math.cos(angle * Math.PI / 180)) * (axis.tickPosition === 'Inside' ? 1 : -1));\n                y2 = y1 + (axis.majorTickLines.height * (Math.sin(angle * Math.PI / 180)) * (axis.tickPosition === 'Inside' ? 1 : -1));\n                majorTick = majorTick.concat('M ' + x1 + ' ' + y1 +\n                    ' L ' + x2 + ' ' + y2 + ' ');\n            }\n        }\n        this.renderTickLine(axis, index, majorTick, '');\n    }\n    drawXAxisGridLine(axis, index) {\n        let chart = this.chart;\n        let tempInterval;\n        let vector;\n        let majorGrid = '';\n        let majorTick = '';\n        let minorGirdLine = '';\n        let minorTickLine = '';\n        let x1 = this.centerX;\n        let x2;\n        let y1 = this.centerY;\n        let y2;\n        let minorDirection;\n        let tickSize = axis.majorTickLines.height;\n        let rect = axis.rect;\n        let length = axis.visibleLabels.length;\n        //Gridlines\n        for (let i = 0; i < length; i++) {\n            tempInterval = axis.visibleLabels[i].value;\n            vector = CoefficientToVector(valueToPolarCoefficient(axis.visibleLabels[i].value, axis), this.startAngle);\n            x2 = this.centerX + chart.radius * vector.x;\n            y2 = this.centerY + chart.radius * vector.y;\n            let xLoc = x2 + (axis.majorTickLines.height * vector.x * (axis.tickPosition === 'Inside' ? -1 : 1));\n            let yLoc = y2 + (axis.majorTickLines.height * vector.y * (axis.tickPosition === 'Inside' ? -1 : 1));\n            majorGrid = majorGrid.concat('M ' + x1 + ' ' + y1 + ' ' + 'L' + x2 + ' ' + y2);\n            majorTick = majorTick.concat('M ' + x2 + ' ' + y2 +\n                ' L ' + xLoc + ' ' + yLoc + ' ');\n            if (axis.minorTicksPerInterval > 0 && (axis.minorGridLines.width > 0 || axis.minorTickLines.width > 0)\n                && axis.valueType !== 'Category' && chart.visibleSeries[0].type !== 'Radar') {\n                minorDirection = this.drawAxisMinorLine(axis, tempInterval, minorGirdLine, minorTickLine);\n                minorGirdLine = minorDirection[0];\n                minorTickLine = minorDirection[1];\n            }\n        }\n        this.renderTickLine(axis, index, majorTick, minorTickLine);\n        this.renderGridLine(axis, index, majorGrid, minorGirdLine);\n    }\n    drawAxisMinorLine(axis, tempInterval, minorGird, minorTick) {\n        let value = tempInterval;\n        let x;\n        let y;\n        let vector;\n        let range = axis.visibleRange;\n        let direction = [];\n        let tickSize = axis.minorTickLines.height;\n        let rect = axis.rect;\n        for (let j = 0; j < axis.minorTicksPerInterval; j++) {\n            value += (axis.valueType === 'DateTime' ? axis.dateTimeInterval : axis.visibleRange.interval) /\n                (axis.minorTicksPerInterval + 1);\n            if (inside(value, range)) {\n                vector = CoefficientToVector(valueToPolarCoefficient(value, axis), this.startAngle);\n                x = this.centerX + this.chart.radius * vector.x;\n                y = this.centerY + this.chart.radius * vector.y;\n                let tickXSize = x + (axis.minorTickLines.height * vector.x * (axis.tickPosition === 'Inside' ? -1 : 1));\n                let tickYSize = y + (axis.minorTickLines.height * vector.y * (axis.tickPosition === 'Inside' ? -1 : 1));\n                minorGird = minorGird.concat('M' + ' ' + this.centerX + ' ' + this.centerY\n                    + 'L ' + x + ' ' + y);\n                minorTick = minorTick.concat('M' + ' ' + x + ' ' + y + 'L' + ' ' + (tickXSize) + ' ' +\n                    (tickYSize));\n            }\n        }\n        direction.push(minorGird);\n        direction.push(minorTick);\n        return direction;\n    }\n    /**\n     * To render the axis label.\n     * @return {void}\n     * @private\n     */\n    drawXAxisLabels(axis, index) {\n        let chart = this.chart;\n        let pointX = 0;\n        let elementSize;\n        let pointY = 0;\n        let labelElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisLabels' + index });\n        let options;\n        let vector;\n        let labelText;\n        let firstLabelX;\n        let islabelInside = axis.labelPosition === 'Inside';\n        let padding = 5;\n        let lastLabelX;\n        let textAnchor = '';\n        let ticksbwtLabel = axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks'\n            && chart.visibleSeries[0].type !== 'Radar' ? 0.5 : 0;\n        let radius = chart.radius + axis.majorTickLines.height;\n        radius = (islabelInside) ? -radius : radius;\n        for (let i = 0, len = axis.visibleLabels.length; i < len; i++) {\n            vector = CoefficientToVector(valueToPolarCoefficient(axis.visibleLabels[i].value + ticksbwtLabel, axis), this.startAngle);\n            if (!isNaN(vector.x) && !isNaN(vector.y)) {\n                pointX = this.centerX + (radius + axis.majorTickLines.height + padding) * vector.x;\n                pointY = this.centerY + (radius + axis.majorTickLines.height + padding) * vector.y;\n                textAnchor = parseFloat(pointX.toFixed(1)) === parseFloat(this.centerX.toFixed(1)) ? 'middle' :\n                    ((pointX < this.centerX && !islabelInside) || (pointX > this.centerX && islabelInside)) ? 'end' : 'start';\n            }\n            labelText = axis.visibleLabels[i].text;\n            if (i === 0) {\n                firstLabelX = pointX;\n            }\n            else if (i === axis.visibleLabels.length - 1 && axis.valueType !== 'Category') {\n                lastLabelX = measureText(labelText, axis.labelStyle).height;\n                lastLabelX += pointX;\n                labelText = (lastLabelX > firstLabelX) ? '' : labelText;\n            }\n            options = new TextOption(chart.element.id + index + '_AxisLabel_' + i, pointX, pointY, textAnchor, labelText, '', 'central');\n            textElement(options, axis.labelStyle, axis.labelStyle.color || chart.themeStyle.axisLabel, labelElement);\n        }\n        this.element.appendChild(labelElement);\n    }\n    renderTickLine(axis, index, majorTickLine, minorTickLine) {\n        let tickOptions;\n        let chart = this.chart;\n        if (axis.majorTickLines.width > 0) {\n            tickOptions = new PathOption(chart.element.id + '_MajorTickLine_' + index, 'transparent', axis.majorTickLines.width, axis.majorTickLines.color || chart.themeStyle.majorTickLine, null, null, majorTickLine);\n            chart.yAxisElements.appendChild(chart.renderer.drawPath(tickOptions));\n        }\n        if (axis.minorTickLines.width > 0) {\n            tickOptions = new PathOption(chart.element.id + '_MinorTickLine_' + index, 'transparent', axis.minorTickLines.width, axis.minorTickLines.color || chart.themeStyle.minorTickLine, null, null, minorTickLine);\n            chart.yAxisElements.appendChild(chart.renderer.drawPath(tickOptions));\n        }\n    }\n    renderGridLine(axis, index, majorGrid, minorGird) {\n        let chart = this.chart;\n        let gridOptions;\n        if (axis.majorGridLines.width > 0) {\n            gridOptions = new PathOption(chart.element.id + '_MajorGridLine_' + index, 'transparent', axis.majorGridLines.width, axis.majorGridLines.color || chart.themeStyle.majorGridLine, null, axis.majorGridLines.dashArray, majorGrid);\n            this.element.appendChild(chart.renderer.drawPath(gridOptions));\n        }\n        if (axis.minorGridLines.width > 0) {\n            gridOptions = new PathOption(chart.element.id + '_MinorGridLine_' + index, 'transparent', axis.minorGridLines.width, axis.minorGridLines.color || chart.themeStyle.minorGridLine, null, axis.minorGridLines.dashArray, minorGird);\n            this.element.appendChild(chart.renderer.drawPath(gridOptions));\n        }\n    }\n}\n","import { withInRange, PathOption, logBase, markerAnimate, PolarArc, valueToCoefficient, firstToLowerCase } from '../../common/utils/helper';\nimport { PolarRadarPanel } from '../axis/polar-radar-panel';\nimport { pointRender } from '../../common/model/constants';\nimport { Animation } from '@syncfusion/ej2-base';\n/**\n * `PolarSeries` module is used to render the polar series.\n */\nexport class PolarSeries extends PolarRadarPanel {\n    /**\n     * Render Polar Series.\n     * @return {void}.\n     * @private\n     */\n    render(series) {\n        let seriesType = firstToLowerCase(series.drawType);\n        if (series.drawType.indexOf('Column') > -1) {\n            this.columnDrawTypeRender(series);\n        }\n        else {\n            series.chart[seriesType + 'SeriesModule'].render(series, series.xAxis, series.yAxis, series.chart.requireInvertedAxis);\n        }\n    }\n    /**\n     * Render Column DrawType.\n     * @return {void}.\n     * @private\n     */\n    columnDrawTypeRender(series) {\n        let visiblePoints = series.points;\n        let rect;\n        let options;\n        let argsData;\n        let startAngle;\n        let endAngle;\n        let itemCurrentXPos;\n        let radius;\n        let pointStartAngle;\n        let pointEndAngle;\n        let x1;\n        let x2;\n        let y1;\n        let y2;\n        let startValue;\n        let endValue;\n        let innerRadius;\n        let centerX = (series.clipRect.width / 2) + series.clipRect.x;\n        let dStartX;\n        let dStartY;\n        let centerY = (series.clipRect.height / 2) + series.clipRect.y;\n        let dEndX;\n        let dEndY;\n        let axisInversed = series.xAxis.isInversed ? 1 : 0;\n        let direction = '';\n        let sumofYValues = 0;\n        let interval = (series.points[1] ? series.points[1].xValue : 2 * series.points[0].xValue) - series.points[0].xValue;\n        let ticks = series.xAxis.valueType === 'Category' && series.xAxis.labelPlacement === 'BetweenTicks' ? 0 : interval / 2;\n        let rangeInterval = series.xAxis.valueType === 'DateTime' ? series.xAxis.dateTimeInterval : 1;\n        let min = series.xAxis.actualRange.min;\n        let inversedValue;\n        this.getSeriesPosition(series);\n        let position = series.xAxis.isInversed ? (series.rectCount - 1 - series.position) : series.position;\n        let ticksbwtLabel = series.xAxis.valueType === 'Category' && series.xAxis.labelPlacement === 'BetweenTicks' ? 0.5\n            : 0.5 - (series.rectCount / 2);\n        do {\n            sumofYValues += rangeInterval;\n            min += rangeInterval;\n        } while (min <= series.xAxis.actualRange.max - (series.xAxis.valueType === 'Category' ? 0 : 1));\n        for (let point of series.points) {\n            point.symbolLocations = [];\n            point.regions = [];\n            if (point.visible && withInRange(series.points[point.index - 1], point, series.points[point.index + 1], series)) {\n                inversedValue = series.xAxis.isInversed ? (series.xAxis.visibleRange.max - point.xValue) :\n                    point.xValue - series.xAxis.visibleRange.min;\n                itemCurrentXPos = (inversedValue) +\n                    ((interval / series.rectCount) * position - ticks) + (sumofYValues / 360 * series.xAxis.startAngle);\n                itemCurrentXPos = (((itemCurrentXPos) / (sumofYValues)));\n                startAngle = 2 * Math.PI * (itemCurrentXPos + series.xAxis.startAngle);\n                endAngle = 2 * Math.PI * ((itemCurrentXPos + series.xAxis.startAngle) + (interval / series.rectCount) / (sumofYValues));\n                pointStartAngle = startAngle;\n                pointEndAngle = endAngle;\n                startAngle = (startAngle - 0.5 * Math.PI);\n                endAngle = (endAngle - 0.5 * Math.PI) - 0.000001;\n                if (series.drawType === 'StackingColumn' || series.drawType === 'RangeColumn') {\n                    startValue = series.drawType === 'RangeColumn' ? point.low : series.stackedValues.startValues[point.index];\n                    endValue = series.drawType === 'RangeColumn' ? point.high : series.stackedValues.endValues[point.index];\n                    endValue = (series.yAxis.valueType === 'Logarithmic' ?\n                        logBase(endValue === 0 ? 1 : endValue, series.yAxis.logBase) : endValue);\n                    endValue = endValue > series.yAxis.actualRange.max ? series.yAxis.actualRange.max : endValue;\n                    radius = startValue === endValue ? 0 : series.chart.radius * valueToCoefficient(endValue, series.yAxis);\n                    x1 = centerX + radius * Math.cos(startAngle);\n                    x2 = centerX + radius * Math.cos(endAngle);\n                    y1 = centerY + radius * Math.sin(startAngle);\n                    y2 = centerY + radius * Math.sin(endAngle);\n                    innerRadius = series.chart.radius * valueToCoefficient((startValue === 0 && series.yAxis.visibleRange.min !== 0) ? series.yAxis.visibleRange.min : startValue, series.yAxis);\n                    dStartX = centerX + innerRadius * Math.cos(startAngle);\n                    dStartY = centerY + innerRadius * Math.sin(startAngle);\n                    dEndX = centerX + innerRadius * Math.cos(endAngle);\n                    dEndY = centerY + innerRadius * Math.sin(endAngle);\n                    if (series.type === 'Polar') {\n                        direction = ('M' + ' ' + x1 + ' ' + y1 + ' ' + 'A' + ' ' + radius + ' ' + radius + ' ' + '0' + ' '\n                            + '0' + ' ' + 1 + ' ' + x2 + ' ' + y2 + ' ' + 'L' + ' ' + dEndX + ' ' + dEndY + ' ' +\n                            'A' + ' ' + innerRadius + ' ' + innerRadius + ' ' + '1' + ' ' + '0' + ' ' + '0' + ' '\n                            + dStartX + ' ' + dStartY + ' ' + 'z');\n                    }\n                    else {\n                        direction = ('M' + ' ' + x1 + ' ' + y1 + ' ' + 'L' + ' ' + x2 + ' ' + y2 + ' ' + 'L'\n                            + dEndX + ' ' + dEndY + ' ' + 'L' + ' ' + dStartX + ' ' + dStartY + ' ' + 'z');\n                    }\n                    point.regionData = new PolarArc(pointStartAngle, pointEndAngle, innerRadius, radius, itemCurrentXPos);\n                }\n                else {\n                    endValue = point.yValue > series.yAxis.actualRange.max ? series.yAxis.actualRange.max : point.yValue;\n                    radius = series.chart.radius * valueToCoefficient((series.yAxis.valueType === 'Logarithmic' ? logBase(endValue, series.yAxis.logBase) : endValue), series.yAxis);\n                    x1 = centerX + radius * Math.cos(startAngle);\n                    x2 = centerX + radius * Math.cos(endAngle);\n                    y1 = centerY + radius * Math.sin(startAngle);\n                    y2 = centerY + radius * Math.sin(endAngle);\n                    if (series.type === 'Polar') {\n                        direction = ('M' + ' ' + x1 + ' ' + y1 + ' ' + 'A' + ' ' + radius + ' ' + radius + ' ' + '0' + ' ' +\n                            '0' + ' ' + 1 + ' ' + x2 + ' ' + y2 + ' ' + 'L' + ' ' + centerX + ' ' +\n                            centerY + ' ' + 'z');\n                    }\n                    else {\n                        direction = ('M' + ' ' + x1 + ' ' + y1 + ' ' + 'L' + ' ' + x2 + ' ' + y2 + ' ' + 'L' + ' '\n                            + centerX + ' ' + centerY + ' ' + 'z');\n                    }\n                    point.regionData = new PolarArc(pointStartAngle, pointEndAngle, 0, radius, itemCurrentXPos);\n                }\n                argsData = this.triggerEvent(series.chart, series, point);\n                options = new PathOption(series.chart.element.id + '_Series_' + series.index + '_Point_' + point.index, argsData.fill, argsData.border.width, argsData.border.color, series.opacity, series.dashArray, direction);\n                if (!argsData.cancel) {\n                    this.appendLinePath(options, series, '');\n                    if (series.type === 'Polar') {\n                        point.symbolLocations.push({\n                            x: centerX + radius * Math.cos((startAngle + (endAngle - startAngle) / 2)),\n                            y: centerY + radius * Math.sin((startAngle + (endAngle - startAngle) / 2))\n                        });\n                    }\n                    else {\n                        point.symbolLocations.push({ x: (x1 + x2) / 2, y: (y1 + y2) / 2 });\n                    }\n                }\n            }\n        }\n        series.isRectSeries = true;\n    }\n    /**\n     * To trigger the point rendering event.\n     * @return {void}\n     * @private\n     */\n    triggerEvent(chart, series, point) {\n        let argsData = {\n            cancel: false, name: pointRender, series: series, point: point,\n            fill: series.setPointColor(point, series.interior),\n            border: series.setBorderColor(point, { width: series.border.width, color: series.border.color })\n        };\n        chart.trigger(pointRender, argsData);\n        point.color = argsData.fill;\n        return argsData;\n    }\n    /** get position for column drawtypes\n     * @return {void}.\n     * @private\n     */\n    getSeriesPosition(series) {\n        let chart = series.chart;\n        let seriesCollection = [];\n        let stackingGroup = [];\n        let vSeries = { rectCount: 0, position: null };\n        for (let series of chart.visibleSeries) {\n            if (series.visible && (series.type === 'Polar' || series.type === 'Radar') && series.drawType.indexOf('Column') !== -1) {\n                seriesCollection.push(series);\n            }\n        }\n        seriesCollection.forEach((series) => {\n            if (series.drawType.indexOf('Stacking') !== -1) {\n                if (series.stackingGroup) {\n                    if (stackingGroup[series.stackingGroup] === undefined) {\n                        series.position = vSeries.rectCount;\n                        stackingGroup[series.stackingGroup] = vSeries.rectCount++;\n                    }\n                    else {\n                        series.position = stackingGroup[series.stackingGroup];\n                    }\n                }\n                else {\n                    if (vSeries.position === null) {\n                        series.position = vSeries.rectCount;\n                        vSeries.position = vSeries.rectCount++;\n                    }\n                    else {\n                        series.position = vSeries.position;\n                    }\n                }\n            }\n            else {\n                series.position = vSeries.rectCount++;\n            }\n        });\n        seriesCollection.forEach((value) => {\n            value.rectCount = vSeries.rectCount;\n        });\n    }\n    /**\n     * Animates the series.\n     * @param  {Series} series - Defines the series to animate.\n     * @return {void}\n     */\n    doAnimation(series) {\n        let option = series.animation;\n        let duration = series.animation.duration;\n        let delay = series.animation.delay;\n        let rectElements = series.seriesElement.childNodes;\n        let count = 1;\n        if (series.drawType === 'Scatter') {\n            for (let point of series.points) {\n                if (!point.symbolLocations.length || !rectElements[count]) {\n                    continue;\n                }\n                markerAnimate(rectElements[count], delay, duration, series, point.index, point.symbolLocations[0], false);\n                count++;\n            }\n        }\n        else {\n            for (count = 1; count < rectElements.length; count++) {\n                this.doPolarRadarAnimation(rectElements[count], delay, duration, series);\n            }\n        }\n    }\n    /**\n     * To do the Polar Radar draw type column animation.\n     * @return {void}\n     * @private\n     */\n    doPolarRadarAnimation(animateElement, delay, duration, series) {\n        let chartcenterX = series.clipRect.width / 2 + series.clipRect.x;\n        let chartcenterY = series.clipRect.height / 2 + series.clipRect.y;\n        let elementHeight = 0;\n        animateElement.style.visibility = 'hidden';\n        new Animation({}).animate(animateElement, {\n            duration: duration,\n            delay: delay,\n            progress: (args) => {\n                if (args.timeStamp > args.delay) {\n                    args.element.style.visibility = 'visible';\n                    elementHeight = ((args.timeStamp - args.delay) / args.duration);\n                    animateElement.setAttribute('transform', 'translate(' + chartcenterX\n                        + ' ' + chartcenterY + ') scale(' + elementHeight + ') translate(' + (-chartcenterX) + ' ' + (-chartcenterY) + ')');\n                }\n            },\n            end: (model) => {\n                animateElement.style.visibility = 'visible';\n                animateElement.removeAttribute('transform');\n                series.chart.trigger('animationComplete', { series: series });\n            }\n        });\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        /**\n         * Returns the module name of the series\n         */\n        return 'PolarSeries';\n    }\n    /**\n     * To destroy the polar series.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy method performed here\n         */\n    }\n}\n","import { firstToLowerCase } from '../../common/utils/helper';\nimport { PolarSeries } from '../series/polar-series';\n/**\n * `RadarSeries` module is used to render the radar series.\n */\nexport class RadarSeries extends PolarSeries {\n    /**\n     * Render radar Series.\n     * @return {void}.\n     * @private\n     */\n    render(series) {\n        let seriesType = firstToLowerCase(series.drawType);\n        if (series.drawType.indexOf('Column') === -1) {\n            series.chart[seriesType + 'SeriesModule'].render(series, series.xAxis, series.yAxis, series.chart.requireInvertedAxis);\n        }\n        else {\n            this.columnDrawTypeRender(series);\n        }\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        /**\n         * Returns the module name of the series\n         */\n        return 'RadarSeries';\n    }\n    /**\n     * To destroy the radar series.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy method performed here\n         */\n    }\n}\n","import { withInRange } from '../../common/utils/helper';\nimport { ColumnBase } from './column-base';\n/**\n * `StackingBarSeries` module is used to render the stacking bar series.\n */\nexport class StackingBarSeries extends ColumnBase {\n    /**\n     * Render the Stacking bar series.\n     * @return {void}\n     * @private\n     */\n    render(series) {\n        let origin = Math.max(series.yAxis.visibleRange.min, 0);\n        let sideBySideInfo = this.getSideBySideInfo(series);\n        let stackedValue = series.stackedValues;\n        let rect;\n        let argsData;\n        for (let pointStack of series.points) {\n            pointStack.symbolLocations = [];\n            pointStack.regions = [];\n            if (pointStack.visible && withInRange(series.points[pointStack.index - 1], pointStack, series.points[pointStack.index + 1], series)) {\n                rect = this.getRectangle(pointStack.xValue + sideBySideInfo.start, stackedValue.endValues[pointStack.index], pointStack.xValue + sideBySideInfo.end, stackedValue.startValues[pointStack.index], series);\n                argsData = this.triggerEvent(series, pointStack, series.interior, { width: series.border.width, color: series.border.color });\n                if (!argsData.cancel) {\n                    this.drawRectangle(series, pointStack, rect, argsData);\n                    this.updateSymbolLocation(pointStack, rect, series);\n                }\n            }\n        }\n    }\n    /**\n     * To destroy the stacking bar.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy method performed here\n         */\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        return 'StackingBarSeries';\n    }\n    /**\n     * Animates the series.\n     * @param  {Series} series - Defines the series to animate.\n     * @return {void}\n     */\n    doAnimation(series) {\n        this.animate(series);\n    }\n}\n","import { withInRange, PathOption } from '../../common/utils/helper';\nimport { ColumnBase } from './column-base';\n/**\n * `CandleSeries` module is used to render the candle series.\n */\nexport class CandleSeries extends ColumnBase {\n    /**\n     * Render Candle series.\n     * @return {void}\n     * @private\n     */\n    render(series) {\n        let sideBySideInfo = this.getSideBySideInfo(series);\n        let argsData;\n        let borderWidth = Math.max(series.border.width, 1);\n        for (let point of series.points) {\n            let direction = '';\n            let centerRegion;\n            let tickRegion;\n            let midPoint;\n            midPoint = (sideBySideInfo.start + sideBySideInfo.end) / 2;\n            //initializing after zooming and also normal initialization\n            point.regions = [];\n            point.symbolLocations = [];\n            if (point.visible && withInRange(series.points[point.index - 1], point, series.points[point.index + 1], series)) {\n                //region to cover the top and bottom ticks\n                tickRegion = this.getRectangle((point.xValue + sideBySideInfo.median), Math.max(point.high, point.low), (point.xValue + sideBySideInfo.median), Math.min(point.high, point.low), series);\n                if (!series.chart.requireInvertedAxis) {\n                    tickRegion.x -= borderWidth / 2;\n                    tickRegion.width = borderWidth;\n                }\n                else {\n                    tickRegion.y -= borderWidth / 2;\n                    tickRegion.height = borderWidth;\n                }\n                //get middleRect\n                centerRegion = this.getRectangle((point.xValue + sideBySideInfo.start), Math.max(point.open, point.close), (point.xValue + sideBySideInfo.end), Math.min(point.open, point.close), series);\n                direction = this.getPathString(tickRegion, centerRegion, series);\n                argsData = this.triggerPointRenderEvent(series, point);\n                if (!argsData.cancel) {\n                    this.drawCandle(series, point, centerRegion, argsData, direction);\n                    this.updateSymbolLocation(point, tickRegion, series);\n                    this.updateSymbolLocation(point, centerRegion, series);\n                }\n            }\n        }\n    }\n    /**\n     * Trigger point rendering event\n     */\n    triggerPointRenderEvent(series, point) {\n        let fill;\n        fill = this.getCandleColor(point, series);\n        let border = { color: series.border.color, width: Math.max(series.border.width, 1) };\n        return this.triggerEvent(series, point, fill, border);\n    }\n    /**\n     * Find the color of the candle\n     * @param series\n     * @private\n     */\n    getCandleColor(point, series) {\n        let currentPoint = point;\n        let previousPoint = series.points[point.index - 1];\n        if (series.enableSolidCandles === false) {\n            if (!previousPoint) {\n                return series.bearFillColor;\n            }\n            else {\n                return previousPoint.close > point.close ? series.bullFillColor :\n                    series.bearFillColor;\n            }\n        }\n        else {\n            return point.open > point.close ? series.bullFillColor :\n                series.bearFillColor;\n        }\n    }\n    /**\n     * Finds the path of the candle shape\n     * @param Series\n     * @private\n     */\n    getPathString(topRect, midRect, series) {\n        let direction = '';\n        let width = series.chart.requireInvertedAxis ? topRect.height : topRect.width;\n        let center = series.chart.requireInvertedAxis ? topRect.y + topRect.height / 2 :\n            topRect.x + topRect.width / 2;\n        //tick 1 segment\n        direction += !series.chart.requireInvertedAxis ?\n            'M' + ' ' + (center) + ' ' + (topRect.y) + ' ' + 'L' + ' ' + (center) + ' ' + midRect.y :\n            'M' + ' ' + (topRect.x) + ' ' + (center) + ' ' + 'L' + ' ' + (midRect.x) + ' ' + center;\n        direction = direction.concat(' M' + ' ' + (midRect.x) + ' ' + (midRect.y) + ' ' +\n            'L' + ' ' + (midRect.x + midRect.width) + ' ' + (midRect.y) + ' ' +\n            'L' + ' ' + (midRect.x + midRect.width) + ' ' +\n            (midRect.y + midRect.height) + ' ' +\n            'L' + ' ' + (midRect.x) + ' ' + (midRect.y + midRect.height) +\n            ' ' + 'Z');\n        direction += !series.chart.requireInvertedAxis ?\n            ' M' + ' ' + (center) + ' ' + (midRect.y + midRect.height) + ' ' + 'L' + ' ' + (center) + ' ' + (topRect.y +\n                topRect.height) :\n            ' M' + ' ' + (midRect.x + midRect.width) + ' ' + (center) + ' ' + 'L' + ' ' +\n                (topRect.x + topRect.width) + ' ' + center;\n        return direction;\n    }\n    /**\n     * Draws the candle shape\n     * @param series\n     * @private\n     */\n    drawCandle(series, point, rect, argsData, direction) {\n        let check = series.chart.requireInvertedAxis ? rect.height : rect.width;\n        if (check <= 0) {\n            return null;\n        }\n        let fill = !series.enableSolidCandles ?\n            (point.open > point.close ? argsData.fill : 'transparent') : argsData.fill;\n        argsData.border.color = argsData.fill;\n        let options = new PathOption(series.chart.element.id + '_Series_' + series.index + '_Point_' + point.index, fill, argsData.border.width, argsData.border.color, series.opacity, series.dashArray, direction);\n        let candleElement = series.chart.renderer.drawPath(options);\n        candleElement.setAttribute('aria-label', point.x.toString() + ':' + point.high.toString()\n            + ':' + point.low.toString() + ':' + point.close.toString() + ':' + point.open.toString());\n        series.seriesElement.appendChild(candleElement);\n    }\n    /**\n     * Animates the series.\n     * @param  {Series} series - Defines the series to animate.\n     * @return {void}\n     */\n    doAnimation(series) {\n        this.animate(series);\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        return 'CandleSeries';\n        /**\n         * return the module name\n         */\n    }\n    /**\n     * To destroy the candle series.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroys the candle series.\n         */\n    }\n}\n","import { withInRange } from '../../common/utils/helper';\nimport { ColumnBase } from './column-base';\n/**\n * `StackingColumnSeries` module used to render the stacking column series.\n */\nexport class StackingColumnSeries extends ColumnBase {\n    /**\n     * Render the Stacking column series.\n     * @return {void}\n     * @private\n     */\n    render(series) {\n        series.isRectSeries = true;\n        let origin = Math.max(series.yAxis.visibleRange.min, 0);\n        let sideBySideInfo = this.getSideBySideInfo(series);\n        let rect;\n        let argsData;\n        let stackedValue = series.stackedValues;\n        for (let point of series.points) {\n            point.symbolLocations = [];\n            point.regions = [];\n            if (point.visible && withInRange(series.points[point.index - 1], point, series.points[point.index + 1], series)) {\n                rect = this.getRectangle(point.xValue + sideBySideInfo.start, stackedValue.endValues[point.index], point.xValue + sideBySideInfo.end, stackedValue.startValues[point.index], series);\n                argsData = this.triggerEvent(series, point, series.interior, { width: series.border.width, color: series.border.color });\n                if (!argsData.cancel) {\n                    this.drawRectangle(series, point, rect, argsData);\n                    this.updateSymbolLocation(point, rect, series);\n                }\n            }\n        }\n    }\n    /**\n     * Animates the series.\n     * @param  {Series} series - Defines the series to animate.\n     * @return {void}\n     */\n    doAnimation(series) {\n        this.animate(series);\n    }\n    /**\n     * To destroy the stacking column.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy method performed here\n         */\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        return 'StackingColumnSeries';\n    }\n}\n","import { PathOption, getPoint, withInRange } from '../../common/utils/helper';\nimport { LineBase } from './line-base';\n/**\n * `StepLineSeries` module is used to render the step line series.\n */\nexport class StepLineSeries extends LineBase {\n    /**\n     * Render the Step line series.\n     * @return {void}\n     * @private\n     */\n    render(series, xAxis, yAxis, isInverted) {\n        let direction = '';\n        let startPoint = 'M';\n        let prevPoint = null;\n        let pathOptions;\n        let lineLength;\n        let point1;\n        let point2;\n        let visiblePoints = this.improveChartPerformance(series);\n        if (xAxis.valueType === 'Category' && xAxis.labelPlacement === 'BetweenTicks') {\n            lineLength = 0.5;\n        }\n        else {\n            lineLength = 0;\n        }\n        for (let point of visiblePoints) {\n            point.symbolLocations = [];\n            point.regions = [];\n            if (point.visible && withInRange(visiblePoints[point.index - 1], point, visiblePoints[point.index + 1], series)) {\n                if (prevPoint != null) {\n                    point2 = getPoint(point.xValue, point.yValue, xAxis, yAxis, isInverted);\n                    point1 = getPoint(prevPoint.xValue, prevPoint.yValue, xAxis, yAxis, isInverted);\n                    direction = direction.concat(startPoint + ' ' + (point1.x) + ' ' + (point1.y) + ' ' + 'L' + ' ' +\n                        (point2.x) + ' ' + (point1.y) + 'L' + ' ' + (point2.x) + ' ' + (point2.y) + ' ');\n                    startPoint = 'L';\n                }\n                else {\n                    point1 = getPoint(point.xValue - lineLength, point.yValue, xAxis, yAxis, isInverted);\n                    direction = direction.concat(startPoint + ' ' + (point1.x) + ' ' + (point1.y) + ' ');\n                    startPoint = 'L';\n                }\n                this.storePointLocation(point, series, isInverted, getPoint);\n                prevPoint = point;\n            }\n            else {\n                prevPoint = series.emptyPointSettings.mode === 'Drop' ? prevPoint : null;\n                startPoint = series.emptyPointSettings.mode === 'Drop' ? startPoint : 'M';\n            }\n        }\n        point1 = getPoint(visiblePoints[visiblePoints.length - 1].xValue + lineLength, visiblePoints[visiblePoints.length - 1].yValue, xAxis, yAxis, isInverted);\n        direction = direction.concat(startPoint + ' ' + (point1.x) + ' ' + (point1.y) + ' ');\n        pathOptions = new PathOption(series.chart.element.id + '_Series_' + series.index, 'transparent', series.width, series.interior, series.opacity, series.dashArray, direction);\n        this.appendLinePath(pathOptions, series, '');\n        this.renderMarker(series);\n    }\n    /**\n     * Animates the series.\n     * @param  {Series} series - Defines the series to animate.\n     * @return {void}\n     */\n    doAnimation(series) {\n        let option = series.animation;\n        this.doLinearAnimation(series, option);\n    }\n    /**\n     * To destroy the step line series.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy method calling here\n         */\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        /**\n         * Returns the module name of the series\n         */\n        return 'StepLineSeries';\n    }\n}\n","import { getPoint, withInRange, ChartLocation, PathOption } from '../../common/utils/helper';\nimport { LineBase } from './line-base';\n/**\n * `StepAreaSeries` Module used to render the step area series.\n */\nexport class StepAreaSeries extends LineBase {\n    /**\n     * Render StepArea series.\n     * @return {void}\n     * @private\n     */\n    render(series, xAxis, yAxis, isInverted) {\n        let currentPoint;\n        let secondPoint;\n        let start = null;\n        let direction = '';\n        let pointsLength = series.points.length;\n        let origin = Math.max(series.yAxis.visibleRange.min, 0);\n        let options;\n        let point;\n        let xValue;\n        let lineLength;\n        let prevPoint = null;\n        if (xAxis.valueType === 'Category' && xAxis.labelPlacement === 'BetweenTicks') {\n            lineLength = 0.5;\n        }\n        else {\n            lineLength = 0;\n        }\n        for (let i = 0; i < pointsLength; i++) {\n            point = series.points[i];\n            xValue = point.xValue;\n            point.symbolLocations = [];\n            point.regions = [];\n            if (point.visible && withInRange(series.points[i - 1], point, series.points[i + 1], series)) {\n                if (start === null) {\n                    start = new ChartLocation(xValue, 0);\n                    // Start point for the current path\n                    currentPoint = getPoint(xValue - lineLength, origin, xAxis, yAxis, isInverted);\n                    direction += ('M' + ' ' + (currentPoint.x) + ' ' + (currentPoint.y) + ' ');\n                    currentPoint = getPoint(xValue - lineLength, point.yValue, xAxis, yAxis, isInverted);\n                    direction += ('L' + ' ' + (currentPoint.x) + ' ' + (currentPoint.y) + ' ');\n                }\n                // First Point to draw the Steparea path\n                if (prevPoint != null) {\n                    currentPoint = getPoint(point.xValue, point.yValue, xAxis, yAxis, isInverted);\n                    secondPoint = getPoint(prevPoint.xValue, prevPoint.yValue, xAxis, yAxis, isInverted);\n                    direction += ('L' + ' ' +\n                        (currentPoint.x) + ' ' + (secondPoint.y) + 'L' + ' ' + (currentPoint.x) + ' ' + (currentPoint.y) + ' ');\n                }\n                else if (series.emptyPointSettings.mode === 'Gap') {\n                    currentPoint = getPoint(point.xValue, point.yValue, xAxis, yAxis, isInverted);\n                    direction += 'L' + ' ' + (currentPoint.x) + ' ' + (currentPoint.y) + ' ';\n                }\n                this.storePointLocation(point, series, isInverted, getPoint);\n                prevPoint = point;\n            }\n            if (series.points[i + 1] && !series.points[i + 1].visible && series.emptyPointSettings.mode !== 'Drop') {\n                // current start point\n                currentPoint = getPoint(xValue + lineLength, origin, xAxis, yAxis, isInverted);\n                direction += ('L' + ' ' + (currentPoint.x) + ' ' + (currentPoint.y));\n                start = null;\n                prevPoint = null;\n            }\n        }\n        if (pointsLength > 1) {\n            start = { 'x': series.points[pointsLength - 1].xValue + lineLength, 'y': series.points[pointsLength - 1].yValue };\n            secondPoint = getPoint(start.x, start.y, xAxis, yAxis, isInverted);\n            direction += ('L' + ' ' + (secondPoint.x) + ' ' + (secondPoint.y) + ' ');\n            start = { 'x': series.points[pointsLength - 1].xValue + lineLength, 'y': origin };\n            secondPoint = getPoint(start.x, start.y, xAxis, yAxis, isInverted);\n            direction += ('L' + ' ' + (secondPoint.x) + ' ' + (secondPoint.y) + ' ');\n        }\n        options = new PathOption(series.chart.element.id + '_Series_' + series.index, series.interior, series.border.width, series.border.color, series.opacity, series.dashArray, direction);\n        this.appendLinePath(options, series, '');\n        this.renderMarker(series);\n    }\n    /**\n     * Animates the series.\n     * @param  {Series} series - Defines the series to animate.\n     * @return {void}\n     */\n    doAnimation(series) {\n        let option = series.animation;\n        this.doLinearAnimation(series, option);\n    }\n    /**\n     * To destroy the step Area series.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy method calling here\n         */\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        /**\n         * Returns the module name of the series\n         */\n        return 'StepAreaSeries';\n    }\n}\n","import { PathOption, getPoint, withInRange, Rect, TransformToVisible } from '../../common/utils/helper';\nimport { LineBase } from './line-base';\n/**\n * `StackingAreaSeries` module used to render the Stacking Area series.\n */\nexport class StackingAreaSeries extends LineBase {\n    /**\n     * Render the Stacking area series.\n     * @return {void}\n     * @private\n     */\n    render(series, xAxis, yAxis, isInverted) {\n        let polarAreaType = series.chart.chartAreaType === 'PolarRadar';\n        let getCoordinate = polarAreaType ? TransformToVisible : getPoint;\n        let lineDirection = '';\n        let visiblePoints = series.points;\n        let pointsLength = visiblePoints.length;\n        let stackedvalue = series.stackedValues;\n        let origin = polarAreaType ?\n            Math.max(series.yAxis.visibleRange.min, stackedvalue.endValues[0]) :\n            Math.max(series.yAxis.visibleRange.min, stackedvalue.startValues[0]);\n        let border = series.border;\n        let options;\n        let startPoint = 0;\n        let point1 = getCoordinate(visiblePoints[0].xValue, origin, xAxis, yAxis, isInverted, series);\n        let point2;\n        lineDirection = lineDirection.concat('M' + ' ' + (point1.x) + ' ' + (point1.y) + ' ');\n        for (let i = 0; i < pointsLength; i++) {\n            visiblePoints[i].symbolLocations = [];\n            visiblePoints[i].regions = [];\n            if (visiblePoints[i].visible && withInRange(visiblePoints[i - 1], visiblePoints[i], visiblePoints[i + 1], series)) {\n                point1 = getCoordinate(visiblePoints[i].xValue, stackedvalue.endValues[i], xAxis, yAxis, isInverted, series);\n                lineDirection = lineDirection.concat('L' + ' ' + (point1.x) + ' ' + (point1.y) + ' ');\n                visiblePoints[i].symbolLocations.push(getCoordinate(visiblePoints[i].xValue, stackedvalue.endValues[i], xAxis, yAxis, isInverted, series));\n                visiblePoints[i].regions.push(new Rect(visiblePoints[i].symbolLocations[0].x - series.marker.width, visiblePoints[i].symbolLocations[0].y - series.marker.height, 2 * series.marker.width, 2 * series.marker.height));\n            }\n            else {\n                if (series.emptyPointSettings.mode !== 'Drop') {\n                    for (let j = i - 1; j >= startPoint; j--) {\n                        point2 = getCoordinate(visiblePoints[j].xValue, stackedvalue.startValues[j], xAxis, yAxis, isInverted, series);\n                        lineDirection = lineDirection.concat('L' + ' ' + (point2.x) + ' ' + (point2.y) + ' ');\n                    }\n                    if (visiblePoints[i + 1] && visiblePoints[i + 1].visible) {\n                        point1 = getCoordinate(visiblePoints[i + 1].xValue, stackedvalue.startValues[i + 1], xAxis, yAxis, isInverted, series);\n                        lineDirection = lineDirection.concat('M' + ' ' + (point1.x) + ' ' + (point1.y) + ' ');\n                    }\n                    startPoint = i + 1;\n                }\n            }\n        }\n        if (series.chart.chartAreaType === 'PolarRadar' && visiblePoints.length > 1) {\n            point1 = { 'x': series.points[0].xValue, 'y': stackedvalue.endValues[0] };\n            point2 = getCoordinate(point1.x, point1.y, xAxis, yAxis, isInverted, series);\n            lineDirection += ('L' + ' ' + (point2.x) + ' ' + (point2.y) + ' ');\n        }\n        for (let j = pointsLength - 1; j >= startPoint; j--) {\n            let previousSeries = this.getPreviousSeries(series);\n            if (previousSeries.emptyPointSettings.mode !== 'Drop' || !previousSeries.points[j].isEmpty) {\n                point2 = getCoordinate(visiblePoints[j].xValue, stackedvalue.startValues[j], xAxis, yAxis, isInverted, series);\n                lineDirection = lineDirection.concat(((j === (pointsLength - 1) && polarAreaType) ? 'M' : 'L')\n                    + ' ' + (point2.x) + ' ' + (point2.y) + ' ');\n            }\n        }\n        options = new PathOption(series.chart.element.id + '_Series_' + series.index, series.interior, series.border.width, series.border.color, series.opacity, series.dashArray, lineDirection);\n        this.appendLinePath(options, series, '');\n        this.renderMarker(series);\n    }\n    /**\n     * Animates the series.\n     * @param  {Series} series - Defines the series to animate.\n     * @return {void}\n     */\n    doAnimation(series) {\n        let option = series.animation;\n        this.doLinearAnimation(series, option);\n    }\n    /**\n     * To destroy the stacking area.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy method calling here\n         */\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        /**\n         * Returns the module name of the series\n         */\n        return 'StackingAreaSeries';\n    }\n    /**\n     * To find previous visible series\n     */\n    getPreviousSeries(series) {\n        let seriesCollection = series.chart.visibleSeries;\n        for (let i = 0, length = seriesCollection.length; i < length; i++) {\n            if (series.index === seriesCollection[i].index && i !== 0) {\n                return seriesCollection[i - 1];\n            }\n        }\n        return seriesCollection[0];\n    }\n}\n","import { withInRange, getPoint, PathOption, drawSymbol, Size, Rect, markerAnimate, TransformToVisible } from '../../common/utils/helper';\nimport { pointRender } from '../../common/model/constants';\n/**\n * `ScatterSeries` module is used to render the scatter series.\n */\nexport class ScatterSeries {\n    /**\n     * Render the scatter series.\n     * @return {void}\n     * @private\n     */\n    render(series, xAxis, yAxis, isInverted) {\n        let seriesIndex = series.index;\n        let marker = series.marker;\n        let border = series.border;\n        let visiblePoints = series.points;\n        let pointIndex;\n        let symbolId;\n        let shapeOption;\n        let argsData;\n        let getCoordinate = series.chart.chartAreaType === 'PolarRadar' ? TransformToVisible : getPoint;\n        for (let point of visiblePoints) {\n            point.symbolLocations = [];\n            point.regions = [];\n            if (point.visible && withInRange(visiblePoints[point.index - 1], point, visiblePoints[point.index + 1], series)) {\n                symbolId = series.chart.element.id + '_Series_' + seriesIndex + '_Point_' + point.index;\n                argsData = {\n                    cancel: false, name: pointRender, series: series, point: point,\n                    fill: series.setPointColor(point, series.interior),\n                    border: series.setBorderColor(point, { width: series.border.width, color: series.border.color }),\n                    height: marker.height, width: marker.width, shape: marker.shape\n                };\n                series.chart.trigger(pointRender, argsData);\n                if (!argsData.cancel) {\n                    point.symbolLocations.push(getCoordinate(point.xValue, point.yValue, xAxis, yAxis, isInverted, series));\n                    point.color = argsData.fill;\n                    shapeOption = new PathOption(symbolId, argsData.fill, argsData.border.width, argsData.border.color, series.opacity, null);\n                    series.seriesElement.appendChild(drawSymbol(point.symbolLocations[0], argsData.shape, new Size(argsData.width, argsData.height), marker.imageUrl, shapeOption, point.x.toString() + ':' + point.yValue.toString()));\n                    point.regions.push(new Rect(point.symbolLocations[0].x - marker.width, point.symbolLocations[0].y - marker.height, 2 * marker.width, 2 * marker.height));\n                    point.marker = {\n                        border: argsData.border, fill: argsData.fill,\n                        height: argsData.height, visible: true,\n                        width: argsData.width, shape: argsData.shape\n                    };\n                }\n                else {\n                    point.marker = { visible: true };\n                }\n            }\n        }\n    }\n    /**\n     * Animates the series.\n     * @param  {Series} series - Defines the series to animate.\n     * @return {void}\n     */\n    doAnimation(series) {\n        let duration = series.animation.duration;\n        let delay = series.animation.delay;\n        let rectElements = series.seriesElement.childNodes;\n        let count = 1;\n        for (let point of series.points) {\n            if (!point.symbolLocations.length || !rectElements[count]) {\n                continue;\n            }\n            markerAnimate(rectElements[count], delay, duration, series, point.index, point.symbolLocations[0], false);\n            count++;\n        }\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        /**\n         * Returns the module name of the series\n         */\n        return 'ScatterSeries';\n    }\n    /**\n     * To destroy the scatter.\n     * @return {void}\n     */\n    destroy(chart) {\n        /**\n         * Destroy method calling here\n         */\n    }\n}\n","import { withInRange } from '../../common/utils/helper';\nimport { ColumnBase } from './column-base';\n/**\n * `RangeColumnSeries` module is used to render the range column series.\n */\nexport class RangeColumnSeries extends ColumnBase {\n    /**\n     * Render Range Column series.\n     * @return {void}\n     * @private\n     */\n    render(series) {\n        let rect;\n        let sideBySideInfo = this.getSideBySideInfo(series);\n        //let origin: number = Math.max(<number>series.yAxis.visibleRange.min, 0);\n        let argsData;\n        for (let rangePoint of series.points) {\n            rangePoint.symbolLocations = [];\n            rangePoint.regions = [];\n            if (rangePoint.visible && withInRange(series.points[rangePoint.index - 1], rangePoint, series.points[rangePoint.index + 1], series)) {\n                rect = this.getRectangle(rangePoint.xValue + sideBySideInfo.start, rangePoint.high, rangePoint.xValue + sideBySideInfo.end, rangePoint.low, series);\n                argsData = this.triggerEvent(series, rangePoint, series.interior, { width: series.border.width, color: series.border.color });\n                if (!argsData.cancel) {\n                    this.updateSymbolLocation(rangePoint, rect, series);\n                    this.drawRectangle(series, rangePoint, rect, argsData);\n                }\n            }\n        }\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        return 'RangeColumnSeries';\n        /**\n         * return the module name\n         */\n    }\n    /**\n     * Animates the series.\n     * @param  {Series} series - Defines the series to animate.\n     * @return {void}\n     */\n    doAnimation(series) {\n        this.animate(series);\n    }\n    /**\n     * To destroy the range column series.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy method performed here\n         */\n    }\n}\n","import { PathOption, withInRange, subArraySum } from '../../common/utils/helper';\nimport { ColumnBase } from './column-base';\n/**\n * `WaterfallSeries` module is used to render the waterfall series.\n */\nexport class WaterfallSeries extends ColumnBase {\n    /**\n     * Render waterfall series.\n     * @return {void}\n     * @private\n     */\n    render(series) {\n        let rect;\n        let sideBySideInfo = this.getSideBySideInfo(series);\n        let origin = Math.max(series.yAxis.visibleRange.min, 0);\n        let argsData;\n        let prevEndValue = 0;\n        let direction = '';\n        let currentEndValue = 0;\n        let originValue;\n        let prevRegion = null;\n        let y;\n        let isInversed = series.chart.requireInvertedAxis;\n        let intermediateOrigin = 0;\n        for (let point of series.points) {\n            point.symbolLocations = [];\n            point.regions = [];\n            if (point.visible && withInRange(series.points[point.index - 1], point, series.points[point.index + 1], series)) {\n                //Calcute the current point value to render waterfall series.\n                let isSum = this.isIntermediateSum(series, point.index);\n                let totalSum = this.isSumIndex(series, point.index);\n                currentEndValue += isSum || totalSum === true ? 0 : point.yValue;\n                //Calcute the origin value for points\n                originValue = (isSum === true ? intermediateOrigin : ((prevEndValue !== null && !totalSum) ? prevEndValue : origin));\n                rect = this.getRectangle(point.xValue + sideBySideInfo.start, currentEndValue, point.xValue + sideBySideInfo.end, originValue, series);\n                argsData = this.triggerPointRenderEvent(series, point);\n                //intermediateOrigin is used only for imtermediate data \n                if (isSum) {\n                    intermediateOrigin = currentEndValue;\n                }\n                prevEndValue = currentEndValue;\n                if (!argsData.cancel) {\n                    this.updateSymbolLocation(point, rect, series);\n                    this.drawRectangle(series, point, rect, argsData);\n                }\n                let currentRegion = point.regions[0];\n                if (prevRegion !== null) {\n                    let prevLeft = isInversed ? prevRegion.x : prevRegion.y;\n                    let currentLeft = isInversed ? currentRegion.x : currentRegion.y;\n                    let prevBottom = isInversed ? prevRegion.x + prevRegion.width : prevRegion.y + prevRegion.height;\n                    let currentBottom = isInversed ?\n                        currentRegion.x + currentRegion.width : currentRegion.y + currentRegion.height;\n                    if (Math.round(prevLeft) === Math.round(currentLeft) ||\n                        Math.round(prevBottom) === Math.round(currentLeft)) {\n                        y = isInversed ? currentRegion.x : currentRegion.y;\n                    }\n                    else {\n                        y = currentBottom;\n                    }\n                    if (isInversed) {\n                        direction = direction.concat('M' + ' ' + y + ' ' + (prevRegion.y + prevRegion.height) + ' ' +\n                            'L' + ' ' + y + ' ' + currentRegion.y + ' ');\n                    }\n                    else {\n                        direction = direction.concat('M' + ' ' + prevRegion.x + ' ' + y + ' ' +\n                            'L' + ' ' + (currentRegion.x + currentRegion.width) + ' ' + y + ' ');\n                    }\n                }\n                prevRegion = point.regions[0];\n            }\n        }\n        let options = new PathOption(series.chart.element.id + '_Series_' + series.index + '_Connector_', 'none', series.connector.width, series.connector.color, series.opacity, series.connector.dashArray, direction);\n        let element = series.chart.renderer.drawPath(options);\n        if (series.chart.animateSeries) {\n            element.style.visibility = 'hidden';\n        }\n        series.seriesElement.appendChild(element);\n    }\n    /**\n     * To check intermediateSumIndex in waterfall series.\n     * @return boolean\n     * @private\n     */\n    isIntermediateSum(series, index) {\n        if (series.intermediateSumIndexes !== undefined && series.intermediateSumIndexes.indexOf(index) !== -1) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     * To check sumIndex in waterfall series.\n     * @return boolean\n     * @private\n     */\n    isSumIndex(series, index) {\n        if (series.sumIndexes !== undefined && series.sumIndexes.indexOf(index) !== -1) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     * To trigger the point rendering event for waterfall series.\n     * @return IPointRenderEventArgs\n     * @private\n     */\n    triggerPointRenderEvent(series, point) {\n        let color;\n        let isSum = this.isIntermediateSum(series, point.index);\n        let totalSum = this.isSumIndex(series, point.index);\n        if (isSum || totalSum) {\n            color = series.summaryFillColor;\n        }\n        else if (point.y < 0) {\n            color = series.negativeFillColor;\n        }\n        else {\n            color = series.interior;\n        }\n        return this.triggerEvent(series, point, color, { color: series.border.color, width: series.border.width });\n    }\n    /**\n     * Add sumIndex and intermediateSumIndex data.\n     * @return {object[]}\n     * @private\n     */\n    processWaterfallData(json, series) {\n        let data = json;\n        let length = json.length;\n        let index;\n        let intermediateSum = series.intermediateSumIndexes;\n        let sumIndex = series.sumIndexes;\n        if (intermediateSum !== undefined && intermediateSum.length > 0) {\n            for (let i = 0; i < intermediateSum.length; i++) {\n                for (let j = 0; j < data.length; j++) {\n                    if (j === intermediateSum[i]) {\n                        if (i === 0) {\n                            index = subArraySum(data, -1, intermediateSum[i], null, series);\n                        }\n                        else {\n                            index = subArraySum(data, intermediateSum[i - 1], intermediateSum[i], null, series);\n                        }\n                        data[j][series.yName] = index;\n                    }\n                }\n            }\n        }\n        if (sumIndex !== undefined && sumIndex.length > 0) {\n            for (let k = 0; k < sumIndex.length; k++) {\n                for (let j = 0; j < data.length; j++) {\n                    if (j === sumIndex[k]) {\n                        if (intermediateSum !== undefined) {\n                            index = subArraySum(data, -1, sumIndex[k], sumIndex, series);\n                        }\n                        else {\n                            index = subArraySum(data, -1, sumIndex[k], null, series);\n                        }\n                        data[j][series.yName] = index;\n                    }\n                }\n            }\n        }\n        return data;\n    }\n    /**\n     * Animates the series.\n     * @param  {Series} series - Defines the series to animate.\n     * @return {void}\n     */\n    doAnimation(series) {\n        this.animate(series);\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        return 'WaterfallSeries';\n        /**\n         * return the module name\n         */\n    }\n    /**\n     * To destroy the waterfall series.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroys the waterfall series.\n         */\n    }\n}\n","import { withInRange } from '../../common/utils/helper';\nimport { ColumnBase } from './column-base';\n/**\n * `HiloSeries` module is used to render the hilo series.\n */\nexport class HiloSeries extends ColumnBase {\n    /**\n     * Render Hiloseries.\n     * @return {void}\n     * @private\n     */\n    render(series) {\n        let region;\n        let sideBySideInfo = this.getSideBySideInfo(series);\n        let argsData;\n        for (let point of series.points) {\n            point.symbolLocations = [];\n            point.regions = [];\n            if (point.visible &&\n                withInRange(series.points[point.index - 1], point, series.points[point.index + 1], series)) {\n                region = this.getRectangle(point.xValue + sideBySideInfo.median, point.high, point.xValue + sideBySideInfo.median, point.low, series);\n                argsData = this.triggerPointRenderEvent(series, point);\n                if (!argsData.cancel) {\n                    if (!series.chart.requireInvertedAxis) {\n                        region.width = argsData.border.width;\n                        region.x = region.x - (region.width / 2);\n                    }\n                    else {\n                        region.height = argsData.border.width;\n                        region.y = region.y - (region.height / 2);\n                    }\n                    argsData.border.width = 0;\n                    this.updateSymbolLocation(point, region, series);\n                    this.drawRectangle(series, point, region, argsData);\n                }\n            }\n        }\n    }\n    /**\n     * To trigger the point rendering event.\n     * @return {void}\n     * @private\n     */\n    triggerPointRenderEvent(series, point) {\n        let border = { color: series.fill, width: Math.max(series.border.width, 2) };\n        return super.triggerEvent(series, point, series.interior, border);\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        return 'HiloSeries';\n        /**\n         * return the module name\n         */\n    }\n    /**\n     * Animates the series.\n     * @param  {Series} series - Defines the series to animate.\n     * @return {void}\n     */\n    doAnimation(series) {\n        this.animate(series);\n    }\n    /**\n     * To destroy the Hilo series.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroys the Hilo Series\n         */\n    }\n}\n","import { withInRange, PathOption } from '../../common/utils/helper';\nimport { ColumnBase } from './column-base';\n/**\n * `HiloOpenCloseSeries` module is used to render the hiloOpenClose series.\n */\nexport class HiloOpenCloseSeries extends ColumnBase {\n    /**\n     * Render HiloOpenCloseSeries series.\n     * @return {void}\n     * @private\n     */\n    render(series) {\n        let highLowRect;\n        let open;\n        let close;\n        let sideBySideInfo = this.getSideBySideInfo(series);\n        let argsData;\n        let borderWidth = Math.max(series.border.width, 2);\n        for (let point of series.points) {\n            point.symbolLocations = [];\n            point.regions = [];\n            if (point.visible &&\n                withInRange(series.points[point.index - 1], point, series.points[point.index + 1], series)) {\n                //highlow\n                highLowRect = this.getRectangle(point.xValue + sideBySideInfo.start, Math.max(point.high, point.low), point.xValue + sideBySideInfo.end, Math.min(point.high, point.low), series);\n                point.regions.push(this.getRectangle(point.xValue + sideBySideInfo.median, Math.max(point.high, point.low), point.xValue + sideBySideInfo.median, Math.min(point.high, point.low), series));\n                this.updateTickRegion(!series.chart.requireInvertedAxis, point.regions[0], borderWidth);\n                //open\n                point.regions.push(this.getRectangle(point.xValue + sideBySideInfo.start, Math.max(point.open, point.close), point.xValue + sideBySideInfo.median, Math.max(point.open, point.close), series));\n                //close\n                point.regions.push(this.getRectangle(point.xValue + sideBySideInfo.median, Math.min(point.open, point.close), point.xValue + sideBySideInfo.end, Math.min(point.open, point.close), series));\n                argsData = this.triggerPointRenderEvent(series, point);\n                if (!argsData.cancel) {\n                    this.updateSymbolLocation(point, point.regions[0], series);\n                    let open = { x: point.regions[1].x, y: point.regions[1].y };\n                    let close = { x: point.regions[2].x, y: point.regions[2].y };\n                    this.drawHiloOpenClosePath(series, point, open, close, highLowRect, argsData);\n                }\n                this.updateTickRegion(series.chart.requireInvertedAxis, point.regions[1], borderWidth);\n                this.updateTickRegion(series.chart.requireInvertedAxis, point.regions[2], borderWidth);\n            }\n        }\n    }\n    /**\n     * Updates the tick region\n     */\n    updateTickRegion(horizontal, region, borderWidth) {\n        if (horizontal) {\n            region.x -= borderWidth / 2;\n            region.width = borderWidth;\n        }\n        else {\n            region.y -= borderWidth / 2;\n            region.height = borderWidth;\n        }\n    }\n    /**\n     * Trigger point rendering event\n     */\n    triggerPointRenderEvent(series, point) {\n        let fill = (point.open <= point.close) ? series.bearFillColor : series.bullFillColor;\n        let border = { color: series.border.color, width: Math.max(series.border.width, 1) };\n        return this.triggerEvent(series, point, fill, border);\n    }\n    /**\n     * To draw the rectangle for points.\n     * @return {void}\n     * @private\n     */\n    drawHiloOpenClosePath(series, point, open, close, rect, argsData) {\n        // region highlow\n        let direction;\n        let options;\n        if (series.chart.requireInvertedAxis) {\n            direction = ('M' + ' ' + (rect.x) + ' ' + (rect.y + rect.height / 2) + ' ' +\n                'L' + ' ' + (rect.x + rect.width) + ' ' + (rect.y + rect.height / 2) + ' ');\n            direction += ('M' + ' ' + (open.x) + ' ' + (rect.y + rect.height / 2) + ' ' +\n                'L' + ' ' + (open.x) + ' ' + (rect.y + rect.height) + ' ');\n            direction += ('M' + ' ' + (close.x) + ' ' + (rect.y + rect.height / 2) + ' ' +\n                'L' + ' ' + (close.x) + ' ' + (rect.y) + ' ');\n        }\n        else {\n            direction = ('M' + ' ' + (rect.x + rect.width / 2) + ' ' + (rect.y + rect.height) + ' ' +\n                'L' + ' ' + (rect.x + rect.width / 2) + ' ' + (rect.y) + ' ');\n            //region opentick\n            direction += ('M' + ' ' + (rect.x) + ' ' + (open.y) + ' ' +\n                'L' + ' ' + (rect.x + rect.width / 2) + ' ' + (open.y) + ' ');\n            //region closetick\n            direction += ('M' + ' ' + (rect.x + rect.width / 2) + ' ' + (close.y) + ' ' +\n                'L' + ' ' + (rect.x + rect.width) + ' ' + (close.y) + ' ');\n        }\n        options = new PathOption(series.chart.element.id + '_Series_' + series.index + '_Point_' + point.index, argsData.fill, argsData.border.width, argsData.fill, series.opacity, series.dashArray, direction);\n        let element = series.chart.renderer.drawPath(options);\n        element.setAttribute('aria-label', point.x.toString() + ':' + point.high.toString()\n            + ':' + point.low.toString() + ':' + point.close.toString() + ':' + point.open.toString());\n        series.seriesElement.appendChild(element);\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        return 'HiloOpenCloseSeries';\n        /**\n         * return the module name\n         */\n    }\n    /**\n     * Animates the series.\n     * @param  {Series} series - Defines the series to animate.\n     * @return {void}\n     */\n    doAnimation(series) {\n        this.animate(series);\n    }\n    /**\n     * To destroy the column series.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy method performed here\n         */\n    }\n}\n","import { withInRange, getPoint, PathOption, Rect } from '../../common/utils/helper';\nimport { LineBase } from './line-base';\n/**\n * `RangeAreaSeries` module is used to render the range area series.\n */\nexport class RangeAreaSeries extends LineBase {\n    /**\n     * Render RangeArea Series.\n     * @return {void}.\n     * @private\n     */\n    render(series) {\n        let point;\n        let direction = '';\n        let command = 'M';\n        let closed = undefined;\n        let visiblePoints = this.improveChartPerformance(series);\n        for (let i = 0, length = visiblePoints.length; i < length; i++) {\n            point = visiblePoints[i];\n            point.symbolLocations = [];\n            point.regions = [];\n            let low = Math.min(point.low, point.high);\n            let high = Math.max(point.low, point.high);\n            if (series.yAxis.isInversed) {\n                let temp = low;\n                low = high;\n                high = temp;\n            }\n            let lowPoint = getPoint(point.xValue, low, series.xAxis, series.yAxis, series.chart.requireInvertedAxis);\n            let highPoint = getPoint(point.xValue, high, series.xAxis, series.yAxis, series.chart.requireInvertedAxis);\n            point.symbolLocations.push(highPoint);\n            point.symbolLocations.push(lowPoint);\n            let rect = new Rect(Math.min(lowPoint.x, highPoint.x), Math.min(lowPoint.y, highPoint.y), Math.max(Math.abs(highPoint.x - lowPoint.x), series.marker.width), Math.max(Math.abs(highPoint.y - lowPoint.y), series.marker.width));\n            if (!series.chart.requireInvertedAxis) {\n                rect.x -= series.marker.width / 2;\n            }\n            else {\n                rect.y -= series.marker.width / 2;\n            }\n            point.regions.push(rect);\n            //Path to connect the high points\n            if (point.visible && withInRange(visiblePoints[point.index - 1], point, visiblePoints[point.index + 1], series)) {\n                direction = direction.concat(command + ' ' + (lowPoint.x) + ' ' + (lowPoint.y) + ' ');\n                closed = false;\n                if ((i + 1 < visiblePoints.length && !visiblePoints[i + 1].visible)\n                    || i === visiblePoints.length - 1) {\n                    // Path to connect the low points\n                    direction = this.closeRangeAreaPath(visiblePoints, point, series, direction, i);\n                    command = 'M';\n                    direction = direction.concat(' ' + 'Z');\n                    closed = true;\n                }\n                command = 'L';\n            }\n            else {\n                if (closed === false && i !== 0) {\n                    direction = this.closeRangeAreaPath(visiblePoints, point, series, direction, i);\n                    closed = true;\n                }\n                command = 'M';\n                point.symbolLocations = [];\n            }\n        }\n        let name = series.category === 'Indicator' ? series.chart.element.id + '_Indicator_' + series.index + '_' + series.name :\n            series.chart.element.id + '_Series_' + series.index;\n        let options = new PathOption(name, series.interior, series.border.width, series.border.color, series.opacity, series.dashArray, direction);\n        this.appendLinePath(options, series, '');\n        this.renderMarker(series);\n    }\n    /**\n     * path for rendering the low points\n     * @return {void}.\n     * @private\n     */\n    closeRangeAreaPath(visiblePoints, point, series, direction, i) {\n        for (let j = i; j >= 0; j--) {\n            if (visiblePoints[j].visible && visiblePoints[j].symbolLocations[0]) {\n                point = visiblePoints[j];\n                direction += 'L' + ' ' + (point.symbolLocations[0].x) + ' ' + ((point.symbolLocations[0].y)) + ' ';\n            }\n            else {\n                break;\n            }\n        }\n        return direction;\n    }\n    /**\n     * Animates the series.\n     * @param  {Series} series - Defines the series to animate.\n     * @return {void}\n     */\n    doAnimation(series) {\n        let option = series.animation;\n        this.doLinearAnimation(series, option);\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        /**\n         * Returns the module name of the series\n         */\n        return 'RangeAreaSeries';\n    }\n    /**\n     * To destroy the line series.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroys range area series\n         */\n    }\n}\n","import { withInRange, getPoint, PathOption, drawSymbol, Size, Rect, markerAnimate } from '../../common/utils/helper';\nimport { pointRender } from '../../common/model/constants';\n/**\n * `BubbleSeries` module is used to render the bubble series.\n */\nexport class BubbleSeries {\n    /**\n     * Render the Bubble series.\n     * @return {void}\n     * @private\n     */\n    render(series, xAxis, yAxis, isInverted) {\n        let marker = series.marker;\n        let visiblePoints = series.points;\n        let shapeOption;\n        let argsData;\n        //let bubbleMode: RadiusMode = bubbleOptions.radiusMode;\n        let segmentRadius;\n        let radius;\n        let value = Math.max(series.chart.initialClipRect.height, series.chart.initialClipRect.width);\n        let percentChange = value / 100;\n        let maxRadius = series.maxRadius * percentChange;\n        let minRadius = series.minRadius * percentChange;\n        let maximumSize = null;\n        let maxValue = null;\n        if ((series.maxRadius === null || series.minRadius === null)) {\n            for (let value of series.chart.visibleSeries) {\n                if (value.type === 'Bubble' && value.visible === true && (value.maxRadius === null || value.minRadius === null)) {\n                    maximumSize = value.sizeMax > maximumSize ? value.sizeMax : maximumSize;\n                }\n            }\n            maxValue = (value / 5) / 2;\n            minRadius = maxRadius = 1;\n            radius = maxValue * maxRadius;\n        }\n        else {\n            maximumSize = series.sizeMax;\n            radius = maxRadius - minRadius;\n        }\n        for (let bubblePoint of visiblePoints) {\n            bubblePoint.symbolLocations = [];\n            bubblePoint.regions = [];\n            if (bubblePoint.visible &&\n                withInRange(visiblePoints[bubblePoint.index - 1], bubblePoint, visiblePoints[bubblePoint.index + 1], series)) {\n                if ((series.maxRadius === null || series.minRadius === null)) {\n                    segmentRadius = radius * Math.abs(+bubblePoint.size / maximumSize);\n                }\n                else {\n                    segmentRadius = minRadius + radius * Math.abs(+bubblePoint.size / maximumSize);\n                }\n                segmentRadius = segmentRadius || minRadius;\n                argsData = {\n                    cancel: false, name: pointRender, series: series, point: bubblePoint,\n                    fill: series.setPointColor(bubblePoint, series.interior),\n                    border: series.setBorderColor(bubblePoint, { width: series.border.width, color: series.border.color }),\n                    height: 2 * segmentRadius, width: 2 * segmentRadius\n                };\n                series.chart.trigger(pointRender, argsData);\n                if (!argsData.cancel) {\n                    bubblePoint.symbolLocations.push(getPoint(bubblePoint.xValue, bubblePoint.yValue, xAxis, yAxis, isInverted));\n                    bubblePoint.color = argsData.fill;\n                    shapeOption = new PathOption(series.chart.element.id + '_Series_' + series.index + '_Point_' + bubblePoint.index, argsData.fill, argsData.border.width, argsData.border.color, series.opacity, null);\n                    series.seriesElement.appendChild(drawSymbol(bubblePoint.symbolLocations[0], 'Circle', new Size(argsData.width, argsData.height), marker.imageUrl, shapeOption, bubblePoint.x.toString() + ':' + bubblePoint.yValue.toString()));\n                    bubblePoint.regions.push(new Rect(bubblePoint.symbolLocations[0].x - segmentRadius, bubblePoint.symbolLocations[0].y - segmentRadius, 2 * segmentRadius, 2 * segmentRadius));\n                    bubblePoint.marker = {\n                        border: argsData.border, fill: argsData.fill,\n                        height: argsData.height, visible: true,\n                        shape: 'Circle', width: argsData.width\n                    };\n                }\n                else {\n                    bubblePoint.marker = { visible: false };\n                }\n            }\n        }\n    }\n    /**\n     * To destroy the Bubble.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy method calling here\n         */\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        /**\n         * Returns the module name of the series\n         */\n        return 'BubbleSeries';\n    }\n    /**\n     * Animates the series.\n     * @param  {Series} series - Defines the series to animate.\n     * @return {void}\n     */\n    doAnimation(series) {\n        let duration = series.animation.duration;\n        let delay = series.animation.delay;\n        let rectElements = series.seriesElement.childNodes;\n        let count = 1;\n        for (let bubblePoint of series.points) {\n            if (!bubblePoint.symbolLocations.length) {\n                continue;\n            }\n            markerAnimate(rectElements[count], delay, duration, series, bubblePoint.index, bubblePoint.symbolLocations[0], false);\n            count++;\n        }\n    }\n}\n","import { ChartLocation, ControlPoints } from '../../common/utils/helper';\nimport { extend, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { LineBase } from './line-base';\n/**\n * render Line series\n */\nexport class SplineBase extends LineBase {\n    /** @private */\n    constructor(chartModule) {\n        super(chartModule);\n        this.splinePoints = [];\n    }\n    /**\n     * To find the control points for spline.\n     * @return {void}\n     * @private\n     */\n    findSplinePoint(series) {\n        let value;\n        let points = this.filterEmptyPoints(series);\n        this.splinePoints = this.findSplineCoefficients(points, series);\n        if (points.length > 1) {\n            series.drawPoints = [];\n            for (let point of points) {\n                if (point.index !== 0) {\n                    let previous = this.getPreviousIndex(points, point.index - 1, series);\n                    value = this.getControlPoints(points[previous], point, this.splinePoints[previous], this.splinePoints[point.index], series);\n                    series.drawPoints.push(value);\n                    if (point.yValue && value.controlPoint1.y && value.controlPoint2.y) {\n                        series.yMin = Math.floor(Math.min(series.yMin, point.yValue, value.controlPoint1.y, value.controlPoint2.y));\n                        series.yMax = Math.ceil(Math.max(series.yMax, point.yValue, value.controlPoint1.y, value.controlPoint2.y));\n                    }\n                }\n            }\n        }\n    }\n    getPreviousIndex(points, i, series) {\n        if (series.emptyPointSettings.mode !== 'Drop') {\n            return i;\n        }\n        while (isNullOrUndefined(points[i]) && i > -1) {\n            i = i - 1;\n        }\n        return i;\n    }\n    getNextIndex(points, i, series) {\n        if (series.emptyPointSettings.mode !== 'Drop') {\n            return i;\n        }\n        while (isNullOrUndefined(points[i]) && i < points.length) {\n            i = i + 1;\n        }\n        return i;\n    }\n    filterEmptyPoints(series) {\n        if (series.emptyPointSettings.mode !== 'Drop') {\n            return series.points;\n        }\n        let points = extend([], series.points, null, true);\n        for (let i = 0; i < points.length; i++) {\n            points[i].index = i;\n            if (points[i].isEmpty) {\n                points[i].symbolLocations = [];\n                points[i].regions = [];\n                points.splice(i, 1);\n                i--;\n            }\n        }\n        return points;\n    }\n    /**\n     * To find the natural spline.\n     * @return {void}\n     * @private\n     */\n    findSplineCoefficients(points, series) {\n        let count = points.length;\n        let ySpline = [];\n        let ySplineDuplicate = [];\n        let coefficient1;\n        let coefficient2;\n        let coefficient3;\n        let dy1;\n        let dy2;\n        let dx = [];\n        let dy = [];\n        let slope = [];\n        let interPoint;\n        let slopeLength;\n        let cardinalSplineTension = series.cardinalSplineTension ? series.cardinalSplineTension : 0.5;\n        cardinalSplineTension = cardinalSplineTension < 0 ? 0 : cardinalSplineTension > 1 ? 1 : cardinalSplineTension;\n        switch (series.splineType) {\n            case 'Monotonic':\n                for (let i = 0; i < count - 1; i++) {\n                    dx[i] = points[i + 1].xValue - points[i].xValue;\n                    dy[i] = points[i + 1].yValue - points[i].yValue;\n                    slope[i] = dy[i] / dx[i];\n                }\n                //interpolant points\n                slopeLength = slope.length;\n                // to find the first and last co-efficient value\n                ySpline[0] = slope[0];\n                ySpline[count - 1] = slope[slopeLength - 1];\n                //to find the other co-efficient values\n                for (let j = 0; j < dx.length; j++) {\n                    if (slopeLength > j + 1) {\n                        if (slope[j] * slope[j + 1] <= 0) {\n                            ySpline[j + 1] = 0;\n                        }\n                        else {\n                            interPoint = dx[j] + dx[j + 1];\n                            ySpline[j + 1] = 3 * interPoint / ((interPoint + dx[j + 1]) / slope[j] + (interPoint + dx[j]) / slope[j + 1]);\n                        }\n                    }\n                }\n                break;\n            case 'Cardinal':\n                for (let i = 0; i < count; i++) {\n                    if (i === 0) {\n                        ySpline[i] = (count > 2) ? (cardinalSplineTension * (points[i + 2].xValue - points[i].xValue)) : 0;\n                    }\n                    else if (i === (count - 1)) {\n                        ySpline[i] = (count > 2) ? (cardinalSplineTension * (points[count - 1].xValue - points[count - 3].xValue)) : 0;\n                    }\n                    else {\n                        ySpline[i] = (cardinalSplineTension * (points[i + 1].xValue - points[i - 1].xValue));\n                    }\n                }\n                break;\n            default:\n                if (series.splineType === 'Clamped') {\n                    let firstIndex = (points[1].yValue - points[0].yValue) / (points[1].xValue - points[0].xValue);\n                    let lastIndex = (points[count - 1].xValue - points[count - 2].xValue) /\n                        (points[count - 1].yValue - points[count - 2].yValue);\n                    ySpline[0] = (3 * (points[1].yValue - points[0].yValue)) / (points[1].xValue - points[0].xValue) - 3;\n                    ySplineDuplicate[0] = 0.5;\n                    ySpline[points.length - 1] = (3 * (points[points.length - 1].yValue - points[points.length - 2].yValue)) /\n                        (points[points.length - 1].xValue - points[points.length - 2].xValue);\n                    ySpline[0] = ySplineDuplicate[0] = Math.abs(ySpline[0]) === Infinity ? 0 : ySpline[0];\n                    ySpline[points.length - 1] = ySplineDuplicate[points.length - 1] = Math.abs(ySpline[points.length - 1]) === Infinity ?\n                        0 : ySpline[points.length - 1];\n                }\n                else {\n                    // assigning the first and last value as zero\n                    ySpline[0] = ySplineDuplicate[0] = 0;\n                    ySpline[points.length - 1] = 0;\n                }\n                for (let i = 1; i < count - 1; i++) {\n                    coefficient1 = points[i].xValue - points[i - 1].xValue;\n                    coefficient2 = points[i + 1].xValue - points[i - 1].xValue;\n                    coefficient3 = points[i + 1].xValue - points[i].xValue;\n                    dy1 = points[i + 1].yValue - points[i].yValue || null;\n                    dy2 = points[i].yValue - points[i - 1].yValue || null;\n                    if (coefficient1 === 0 || coefficient2 === 0 || coefficient3 === 0) {\n                        ySpline[i] = 0;\n                        ySplineDuplicate[i] = 0;\n                    }\n                    else {\n                        let p = 1 / (coefficient1 * ySpline[i - 1] + 2 * coefficient2);\n                        ySpline[i] = -p * coefficient3;\n                        ySplineDuplicate[i] = p * (6 * (dy1 / coefficient3 - dy2 / coefficient1) - coefficient1 * ySplineDuplicate[i - 1]);\n                    }\n                }\n                for (let k = count - 2; k >= 0; k--) {\n                    ySpline[k] = ySpline[k] * ySpline[k + 1] + ySplineDuplicate[k];\n                }\n                break;\n        }\n        return ySpline;\n    }\n    /**\n     * To find the control points for spline.\n     * @return {void}\n     * @private\n     */\n    getControlPoints(point1, point2, ySpline1, ySpline2, series) {\n        let controlPoint1;\n        let controlPoint2;\n        let point;\n        let ySplineDuplicate1 = ySpline1;\n        let ySplineDuplicate2 = ySpline2;\n        switch (series.splineType) {\n            case 'Cardinal':\n                if (series.xAxis.valueType === 'DateTime') {\n                    ySplineDuplicate1 = ySpline1 / this.dateTimeInterval(series);\n                    ySplineDuplicate2 = ySpline2 / this.dateTimeInterval(series);\n                }\n                controlPoint1 = new ChartLocation(point1.xValue + ySpline1 / 3, point1.yValue + ySplineDuplicate1 / 3);\n                controlPoint2 = new ChartLocation(point2.xValue - ySpline2 / 3, point2.yValue - ySplineDuplicate2 / 3);\n                point = new ControlPoints(controlPoint1, controlPoint2);\n                break;\n            case 'Monotonic':\n                let value = (point2.xValue - point1.xValue) / 3;\n                controlPoint1 = new ChartLocation(point1.xValue + value, point1.yValue + ySpline1 * value);\n                controlPoint2 = new ChartLocation(point2.xValue - value, point2.yValue - ySpline2 * value);\n                point = new ControlPoints(controlPoint1, controlPoint2);\n                break;\n            default:\n                let one3 = 1 / 3.0;\n                let deltaX2 = (point2.xValue - point1.xValue);\n                deltaX2 = deltaX2 * deltaX2;\n                let y1 = one3 * (((2 * point1.yValue) + point2.yValue) - one3 * deltaX2 * (ySpline1 + 0.5 * ySpline2));\n                let y2 = one3 * ((point1.yValue + (2 * point2.yValue)) - one3 * deltaX2 * (0.5 * ySpline1 + ySpline2));\n                controlPoint1 = new ChartLocation((2 * (point1.xValue) + (point2.xValue)) * one3, y1);\n                controlPoint2 = new ChartLocation(((point1.xValue) + 2 * (point2.xValue)) * one3, y2);\n                point = new ControlPoints(controlPoint1, controlPoint2);\n                break;\n        }\n        return point;\n    }\n    /**\n     * calculate datetime interval in hours\n     *\n     */\n    dateTimeInterval(series) {\n        let interval = series.xAxis.actualIntervalType;\n        let intervalInMilliseconds;\n        if (interval === 'Years') {\n            intervalInMilliseconds = 365 * 24 * 60 * 60 * 1000;\n        }\n        else if (interval === 'Months') {\n            intervalInMilliseconds = 30 * 24 * 60 * 60 * 1000;\n        }\n        else if (interval === 'Days') {\n            intervalInMilliseconds = 24 * 60 * 60 * 1000;\n        }\n        else if (interval === 'Hours') {\n            intervalInMilliseconds = 60 * 60 * 1000;\n        }\n        else if (interval === 'Minutes') {\n            intervalInMilliseconds = 60 * 1000;\n        }\n        else if (interval === 'Seconds') {\n            intervalInMilliseconds = 1000;\n        }\n        else {\n            intervalInMilliseconds = 30 * 24 * 60 * 60 * 1000;\n        }\n        return intervalInMilliseconds;\n    }\n    /**\n     * Animates the series.\n     * @param  {Series} series - Defines the series to animate.\n     * @return {void}\n     */\n    doAnimation(series) {\n        let option = series.animation;\n        this.doLinearAnimation(series, option);\n    }\n}\n","import { PathOption, getPoint, withInRange, TransformToVisible } from '../../common/utils/helper';\nimport { SplineBase } from './spline-base';\n/**\n * `SplineSeries` module is used to render the spline series.\n */\nexport class SplineSeries extends SplineBase {\n    /**\n     * Render the spline series.\n     * @return {void}\n     * @private\n     */\n    render(series, xAxis, yAxis, isInverted) {\n        let chart = series.chart;\n        let marker = series.marker;\n        let ySpline;\n        let options;\n        let firstPoint = null;\n        let secondPoint = null;\n        let direction = '';\n        let pt1;\n        let pt2;\n        let bpt1;\n        let bpt2;\n        let data;\n        let controlPointCount = 0;\n        let controlPoint1;\n        let controlPoint2;\n        let startPoint = 'M';\n        let points = this.filterEmptyPoints(series);\n        let previous;\n        let getCoordinate = series.chart.chartAreaType === 'PolarRadar' ? TransformToVisible : getPoint;\n        for (let point of points) {\n            previous = this.getPreviousIndex(points, point.index - 1, series);\n            point.symbolLocations = [];\n            point.regions = [];\n            if (point.visible && withInRange(points[previous], point, points[this.getNextIndex(points, point.index - 1, series)], series)) {\n                if (firstPoint !== null) {\n                    data = series.drawPoints[previous];\n                    controlPoint1 = data.controlPoint1;\n                    controlPoint2 = data.controlPoint2;\n                    pt1 = getCoordinate(firstPoint.xValue, firstPoint.yValue, xAxis, yAxis, isInverted, series);\n                    pt2 = getCoordinate(point.xValue, point.yValue, xAxis, yAxis, isInverted, series);\n                    bpt1 = getCoordinate(controlPoint1.x, controlPoint1.y, xAxis, yAxis, isInverted, series);\n                    bpt2 = getCoordinate(controlPoint2.x, controlPoint2.y, xAxis, yAxis, isInverted, series);\n                    direction = direction.concat((startPoint + ' ' + (pt1.x) + ' ' + (pt1.y) + ' ' + 'C' + ' ' + (bpt1.x) + ' '\n                        + (bpt1.y) + ' ' + (bpt2.x) + ' ' + (bpt2.y) + ' ' + (pt2.x) + ' ' + (pt2.y) + ' '));\n                    startPoint = 'L';\n                }\n                firstPoint = point;\n                this.storePointLocation(point, series, isInverted, getCoordinate);\n            }\n            else {\n                startPoint = 'M';\n                firstPoint = null;\n                point.symbolLocations = [];\n            }\n        }\n        let name = series.category === 'TrendLine' ? series.chart.element.id + '_Series_' + series.sourceIndex + '_TrendLine_' + series.index :\n            series.chart.element.id + '_Series_' + series.index;\n        options = new PathOption(name, 'transparent', series.width, series.interior, series.opacity, series.dashArray, direction);\n        this.appendLinePath(options, series, '');\n        this.renderMarker(series);\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        /**\n         * Returns the module name of the series\n         */\n        return 'SplineSeries';\n    }\n    /**\n     * To destroy the spline.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy method calling here\n         */\n    }\n}\n","import { PathOption, getPoint, withInRange, TransformToVisible } from '../../common/utils/helper';\nimport { SplineBase } from './spline-base';\n/**\n * `SplineAreaSeries` module used to render the spline area series.\n */\nexport class SplineAreaSeries extends SplineBase {\n    /**\n     * Render the splineArea series.\n     * @return {void}\n     * @private\n     */\n    render(series, xAxis, yAxis, isInverted) {\n        let firstPoint = null;\n        let direction = '';\n        let startPoint = null;\n        let startPoint1 = null;\n        let pt1;\n        let pt2;\n        let bpt1;\n        let bpt2;\n        let controlPt1;\n        let controlPt2;\n        let points = this.filterEmptyPoints(series);\n        let pointsLength = series.points.length;\n        let point;\n        let previous;\n        let getCoordinate = series.chart.chartAreaType === 'PolarRadar' ? TransformToVisible : getPoint;\n        let origin = series.chart.chartAreaType === 'PolarRadar' ? series.points[0].yValue :\n            Math.max(series.yAxis.visibleRange.min, 0);\n        for (let i = 0; i < pointsLength; i++) {\n            point = series.points[i];\n            point.symbolLocations = [];\n            point.regions = [];\n            previous = this.getPreviousIndex(points, point.index - 1, series);\n            if (point.visible &&\n                withInRange(points[previous], point, points[this.getNextIndex(points, point.index - 1, series)], series)) {\n                if (firstPoint) {\n                    controlPt1 = series.drawPoints[previous].controlPoint1;\n                    controlPt2 = series.drawPoints[previous].controlPoint2;\n                    pt1 = getCoordinate(firstPoint.xValue, firstPoint.yValue, xAxis, yAxis, isInverted, series);\n                    pt2 = getCoordinate(point.xValue, point.yValue, xAxis, yAxis, isInverted, series);\n                    bpt1 = getCoordinate(controlPt1.x, controlPt1.y, xAxis, yAxis, isInverted, series);\n                    bpt2 = getCoordinate(controlPt2.x, controlPt2.y, xAxis, yAxis, isInverted, series);\n                    direction = direction.concat(' C' + bpt1.x + ' '\n                        + bpt1.y + ' ' + bpt2.x + ' ' + bpt2.y + ' ' + pt2.x + ' ' + pt2.y + ' ');\n                }\n                else {\n                    // Start point for the current path\n                    startPoint = getCoordinate(point.xValue, origin, xAxis, yAxis, isInverted, series);\n                    direction += ('M ' + startPoint.x + ' ' + startPoint.y + ' ');\n                    // First Point to draw the area path\n                    startPoint1 = getCoordinate(point.xValue, point.yValue, xAxis, yAxis, isInverted, series);\n                    direction += ('L ' + startPoint1.x + ' ' + startPoint1.y + ' ');\n                }\n                this.storePointLocation(point, series, isInverted, getCoordinate);\n                firstPoint = point;\n            }\n            else {\n                firstPoint = null;\n                point.symbolLocations = [];\n            }\n            if (((i + 1 < pointsLength && !series.points[i + 1].visible) || i === pointsLength - 1)\n                && pt2 && startPoint) {\n                startPoint = getCoordinate(point.xValue, origin, xAxis, yAxis, isInverted, series);\n                direction = direction.concat('L ' + (startPoint.x) + ' ' + (startPoint.y));\n            }\n        }\n        this.appendLinePath(new PathOption(series.chart.element.id + '_Series_' + series.index, series.interior, series.border.width, series.border.color, series.opacity, series.dashArray, direction), series, '');\n        this.renderMarker(series);\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        /**\n         * Returns the module name of the series\n         */\n        return 'SplineAreaSeries';\n    }\n    /**\n     * To destroy the spline.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy method calling here\n         */\n    }\n}\n","import { LineBase } from '../series/line-base';\nimport { Series, Points } from '../series/chart-series';\nimport { RectOption, Rect } from '../../common/utils/helper';\nimport { findClipRect } from '../../common/utils/helper';\n/**\n * Technical Analysis module helps to predict the market trend\n */\nexport class TechnicalAnalysis extends LineBase {\n    /**\n     * Defines the collection of series, that are used to represent the given technical indicator\n     * @private\n     */\n    initSeriesCollection(indicator, chart) {\n        indicator.targetSeries = [];\n        let signalLine = new Series(indicator, 'targetSeries', {}, true);\n        this.setSeriesProperties(signalLine, indicator, 'SignalLine', indicator.fill, indicator.width, chart);\n    }\n    /**\n     * Initializes the properties of the given series\n     * @private\n     */\n    setSeriesProperties(series, indicator, name, fill, width, chart) {\n        series.name = name;\n        series.xName = 'x';\n        series.yName = 'y';\n        series.fill = fill || '#606eff';\n        series.dashArray = indicator.dashArray;\n        series.width = width;\n        series.xAxisName = indicator.xAxisName;\n        series.animation = indicator.animation;\n        series.yAxisName = indicator.yAxisName;\n        series.clipRectElement = indicator.clipRectElement;\n        series.points = [];\n        series.enableTooltip = true;\n        series.interior = series.fill;\n        series.category = 'Indicator';\n        series.index = indicator.index;\n        series.chart = chart;\n        series.xMin = Infinity;\n        series.xMax = -Infinity;\n        series.yMin = Infinity;\n        series.yMax = -Infinity;\n        series.xData = [];\n        series.yData = [];\n        series.marker.visible = false;\n        indicator.targetSeries.push(series);\n    }\n    /**\n     * Creates the elements of a technical indicator\n     * @private\n     */\n    createIndicatorElements(chart, indicator, index) {\n        if (indicator.seriesName || indicator.dataSource) {\n            findClipRect(indicator.targetSeries[0]);\n        }\n        let clipRect = new Rect(0, 0, 0, 0);\n        if (indicator.seriesName || indicator.dataSource) {\n            clipRect = indicator.targetSeries[0].clipRect;\n        }\n        //defines the clip rect element\n        let clipRectElement = chart.renderer.drawClipPath(new RectOption(chart.element.id + '_ChartIndicatorClipRect_' + index, 'transparent', { width: 1, color: 'Gray' }, 1, {\n            x: 0, y: 0, width: clipRect.width,\n            height: clipRect.height,\n        }));\n        //creates the group for an indicator\n        indicator.indicatorElement = chart.renderer.createGroup({\n            'id': chart.element.id + 'IndicatorGroup' + index,\n            'transform': 'translate(' + clipRect.x + ',' + clipRect.y + ')',\n            'clip-path': 'url(#' + chart.element.id + '_ChartIndicatorClipRect_' + index + ')'\n        });\n        indicator.indicatorElement.appendChild(clipRectElement);\n        //Defines a group for each series in a technical indicator\n        for (let series of indicator.targetSeries) {\n            series.clipRectElement = clipRectElement;\n            let element = series.chart.renderer.createGroup({\n                'id': series.chart.element.id + '_Indicator_' +\n                    indicator.index + '_' + series.name + '_Group'\n            });\n            indicator.indicatorElement.appendChild(element);\n            series.seriesElement = element;\n        }\n        chart.indicatorElements.appendChild(indicator.indicatorElement);\n    }\n    getDataPoint(x, y, sourcePoint, series, index, indicator = null) {\n        let point = new Points();\n        point.x = x;\n        point.y = y;\n        point.xValue = sourcePoint.xValue;\n        point.color = series.fill;\n        point.index = index;\n        point.yValue = y;\n        point.visible = true;\n        series.xMin = Math.min(series.xMin, point.xValue);\n        series.yMin = Math.min(series.yMin, point.yValue);\n        series.xMax = Math.max(series.xMax, point.xValue);\n        series.yMax = Math.max(series.yMax, point.yValue);\n        series.xData.push(point.xValue);\n        if (indicator && indicator.type === 'Macd' && series.type === 'Column') {\n            if (point.y >= 0) {\n                point.color = indicator.macdPositiveColor;\n            }\n            else {\n                point.color = indicator.macdNegativeColor;\n            }\n        }\n        return point;\n    }\n    getRangePoint(x, high, low, sourcePoint, series, index, indicator = null) {\n        let point = new Points();\n        point.x = x;\n        point.high = high;\n        point.low = low;\n        point.xValue = sourcePoint.xValue;\n        point.color = series.fill;\n        point.index = index;\n        point.visible = true;\n        series.xData.push(point.xValue);\n        return point;\n    }\n    setSeriesRange(points, indicator, series = null) {\n        if (!series) {\n            indicator.targetSeries[0].points = points;\n        }\n        else {\n            series.points = points;\n        }\n    }\n}\n","import { firstToLowerCase } from '../../common/utils/helper';\nimport { TechnicalAnalysis } from './indicator-base';\n/**\n * `SmaIndicator` module is used to render SMA indicator.\n */\nexport class SmaIndicator extends TechnicalAnalysis {\n    /**\n     * Defines the predictions based on SMA approach\n     * @private\n     */\n    initDataSource(indicator, chart) {\n        let smaPoints = [];\n        let points = indicator.points;\n        if (points && points.length) {\n            //prepare data\n            let validData = points;\n            let field = firstToLowerCase(indicator.field);\n            let xField = 'x';\n            let signalSeries = indicator.targetSeries[0];\n            if (validData && validData.length && validData.length >= indicator.period) {\n                //find initial average\n                let average = 0;\n                let sum = 0;\n                for (let i = 0; i < indicator.period; i++) {\n                    sum += validData[i][field];\n                }\n                average = sum / indicator.period;\n                smaPoints.push(this.getDataPoint(validData[indicator.period - 1][xField], average, validData[indicator.period - 1], signalSeries, smaPoints.length));\n                let index = indicator.period;\n                while (index < validData.length) {\n                    sum -= validData[index - indicator.period][field];\n                    sum += validData[index][field];\n                    average = sum / indicator.period;\n                    smaPoints.push(this.getDataPoint(validData[index][xField], average, validData[index], signalSeries, smaPoints.length));\n                    index++;\n                }\n            }\n            this.setSeriesRange(smaPoints, indicator);\n        }\n    }\n    /**\n     * To destroy the SMA indicator\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroys the SMA indicator\n         */\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        /**\n         * Returns the module name of the series\n         */\n        return 'SmaIndicator';\n    }\n}\n","import { firstToLowerCase } from '../../common/utils/helper';\nimport { TechnicalAnalysis } from './indicator-base';\n/**\n * `EmaIndicator` module is used to render EMA indicator.\n */\nexport class EmaIndicator extends TechnicalAnalysis {\n    /**\n     * Defines the predictions based on EMA approach\n     * @private\n     */\n    initDataSource(indicator, chart) {\n        let field = firstToLowerCase(indicator.field);\n        let xField = 'x';\n        let emaPoints = [];\n        let signalSeries = indicator.targetSeries[0];\n        //prepare data\n        let validData = indicator.points;\n        if (validData && validData.length && validData.length >= indicator.period) {\n            //find initial average\n            let sum = 0;\n            let average = 0;\n            //smoothing factor\n            let k = (2 / (indicator.period + 1));\n            for (let i = 0; i < indicator.period; i++) {\n                sum += validData[i][field];\n            }\n            average = sum / indicator.period;\n            emaPoints.push(this.getDataPoint(validData[indicator.period - 1][xField], average, validData[indicator.period - 1], signalSeries, emaPoints.length));\n            let index = indicator.period;\n            while (index < validData.length) {\n                //previous average\n                let prevAverage = emaPoints[index - indicator.period][signalSeries.yName];\n                let yValue = (validData[index][field] - prevAverage) * k + prevAverage;\n                emaPoints.push(this.getDataPoint(validData[index][xField], yValue, validData[index], signalSeries, emaPoints.length));\n                index++;\n            }\n        }\n        this.setSeriesRange(emaPoints, indicator);\n    }\n    /**\n     * To destroy the EMA Indicator\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroys the EMA Indicator\n         */\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        /**\n         * Returns the module name of the series\n         */\n        return 'EmaIndicator';\n    }\n}\n","import { firstToLowerCase } from '../../common/utils/helper';\nimport { TechnicalAnalysis } from './indicator-base';\n/**\n * `TmaIndicator` module is used to render TMA indicator.\n */\nexport class TmaIndicator extends TechnicalAnalysis {\n    /**\n     * Defines the predictions based on TMA approach\n     * @private\n     */\n    initDataSource(indicator, chart) {\n        let tmaPoints = [];\n        let field = firstToLowerCase(indicator.field);\n        let xField = 'x';\n        let signalSeries = indicator.targetSeries[0];\n        //prepare data\n        let validData = indicator.points;\n        if (validData && validData.length && validData.length >= indicator.period) {\n            let signalSeries = indicator.targetSeries[0];\n            //prepare data\n            let validData = indicator.points;\n            if (validData.length && validData.length >= indicator.period) {\n                //smoothing factor\n                let k = (2 / (indicator.period + 1));\n                //find initial average\n                let average = 0;\n                let sum = 0;\n                let sumOfSMA = 0;\n                let averageSMA = 0;\n                let smaValues = [];\n                //sma values\n                let index = 0;\n                let length = validData.length;\n                let period = indicator.period;\n                while (length >= period) {\n                    sum = 0;\n                    index = validData.length - length;\n                    for (let j = index; j < index + period; j++) {\n                        sum = sum + validData[j][field];\n                    }\n                    sum = sum / period;\n                    smaValues.push(sum);\n                    length--;\n                }\n                //initial values\n                for (let k = 0; k < period - 1; k++) {\n                    sum = 0;\n                    for (let j = 0; j < k + 1; j++) {\n                        sum = sum + validData[j][field];\n                    }\n                    sum = sum / (k + 1);\n                    smaValues.splice(k, 0, sum);\n                }\n                index = indicator.period;\n                while (index <= smaValues.length) {\n                    sum = 0;\n                    for (let j = index - indicator.period; j < index; j++) {\n                        sum = sum + smaValues[j];\n                    }\n                    sum = sum / indicator.period;\n                    tmaPoints.push(this.getDataPoint(validData[index - 1][xField], sum, validData[index - 1], signalSeries, tmaPoints.length));\n                    index++;\n                }\n            }\n        }\n        this.setSeriesRange(tmaPoints, indicator);\n    }\n    /**\n     * To destroy the TMA indicator.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroys the TMA Indicator\n         */\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        /**\n         * Returns the module name of the series\n         */\n        return 'TmaIndicator';\n    }\n}\n","import { TechnicalAnalysis } from './indicator-base';\n/**\n * `AccumulationDistributionIndicator` module is used to render accumulation distribution indicator.\n */\nexport class AccumulationDistributionIndicator extends TechnicalAnalysis {\n    /**\n     * Defines the predictions using accumulation distribution approach\n     * @private\n     */\n    initDataSource(indicator, chart) {\n        let sourceSeries = indicator.sourceSeries;\n        let adPoints = [];\n        let validData = indicator.points;\n        if (validData.length > 0 && validData.length > indicator.period) {\n            adPoints = this.calculateADPoints(indicator, validData);\n        }\n        this.setSeriesRange(adPoints, indicator);\n    }\n    /**\n     *  Calculates the Accumulation Distribution values\n     * @private\n     */\n    calculateADPoints(indicator, validData) {\n        let temp = [];\n        let sum = 0;\n        let i = 0;\n        let value = 0;\n        let high = 0;\n        let low = 0;\n        let close = 0;\n        let signalSeries = indicator.targetSeries[0];\n        for (i = 0; i < validData.length; i++) {\n            high = Number(validData[i].high);\n            low = Number(validData[i].low);\n            close = Number(validData[i].close);\n            /**\n             * Money Flow Multiplier = [(Close -  Low) - (High - Close)] /(High - Low)\n             * Money Flow Volume = Money Flow Multiplier x Volume for the Period\n             * ADL = Previous ADL + Current Period's Money Flow Volume\n             */\n            value = ((close - low) - (high - close)) / (high - low);\n            /**\n             * Sum is to calculate the Y values of the Accumulation distribution indicator\n             */\n            sum = sum + value * Number(validData[i].volume);\n            /**\n             * To calculate the x and y values for the Accumulation distribution indicator\n             */\n            temp[i] = this.getDataPoint(validData[i].x, sum, validData[i], signalSeries, temp.length);\n        }\n        return temp;\n    }\n    /**\n     * To destroy the Accumulation Distribution Technical Indicator.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroys the Accumulation Distribution Technical indicator\n         */\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        /**\n         * Returns the module name of the Indicator\n         */\n        return 'AccumulationDistributionIndicator';\n    }\n}\n","import { TechnicalAnalysis } from './indicator-base';\n/**\n * `AtrIndicator` module is used to render ATR indicator.\n */\nexport class AtrIndicator extends TechnicalAnalysis {\n    /**\n     * Defines the predictions using Average True Range approach\n     * @private\n     */\n    initDataSource(indicator, chart) {\n        let sourceSeries = indicator.sourceSeries;\n        let atrPoints = [];\n        let validData = indicator.points;\n        if (validData.length > 0 && validData.length > indicator.period) {\n            this.calculateATRPoints(indicator, validData);\n        }\n    }\n    /**\n     *  To calculate Average True Range indicator points\n     * @private\n     */\n    calculateATRPoints(indicator, validData) {\n        let average = 0;\n        let highLow = 0;\n        let highClose = 0;\n        let lowClose = 0;\n        let trueRange = 0;\n        let points = [];\n        let temp = [];\n        let period = indicator.period;\n        let sum = 0;\n        let y = 'y';\n        let signalSeries = indicator.targetSeries[0];\n        for (let i = 0; i < validData.length; i++) {\n            /**\n             * Current High less the current Low\n             * Current High less the previous Close (absolute value)\n             * Current Low less the previous Close (absolute value)\n             */\n            highLow = Number(validData[i].high) - Number(validData[i].low);\n            if (i > 0) {\n                //\n                highClose = Math.abs(Number(validData[i].high) - Number(validData[i - 1].close));\n                lowClose = Math.abs(Number(validData[i].low) - Number(validData[i - 1].close));\n            }\n            /**\n             * To find the maximum of highLow, highClose, lowClose\n             */\n            trueRange = Math.max(highLow, highClose, lowClose);\n            sum = sum + trueRange;\n            /**\n             * Push the x and y values for the Average true range indicator\n             */\n            if (i >= period) {\n                average = (Number(temp[i - 1][y]) * (period - 1) + trueRange) / period;\n                points.push(this.getDataPoint(validData[i].x, average, validData[i], signalSeries, points.length));\n            }\n            else {\n                average = sum / period;\n                if (i === period - 1) {\n                    points.push(this.getDataPoint(validData[i].x, average, validData[i], signalSeries, points.length));\n                }\n            }\n            temp[i] = { x: validData[i].x, y: average };\n        }\n        this.setSeriesRange(points, indicator);\n    }\n    /**\n     * To destroy the Average true range indicator.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy the Average true range indicator\n         */\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        /**\n         * Returns the module name of the Indicator\n         */\n        return 'AtrIndicator';\n    }\n}\n","import { Series } from '../series/chart-series';\nimport { TechnicalAnalysis } from './indicator-base';\n/**\n * `MomentumIndicator` module is used to render Momentum indicator.\n */\nexport class MomentumIndicator extends TechnicalAnalysis {\n    /**\n     * Defines the collection of series to represent a momentum indicator\n     * @private\n     */\n    initSeriesCollection(indicator, chart) {\n        super.initSeriesCollection(indicator, chart);\n        let upperLine = new Series(indicator, 'targetSeries', {}, true);\n        super.setSeriesProperties(upperLine, indicator, 'UpperLine', indicator.upperLine.color, indicator.upperLine.width, chart);\n    }\n    /**\n     * Defines the predictions using momentum approach\n     * @private\n     */\n    initDataSource(indicator, chart) {\n        let upperCollection = [];\n        let signalCollection = [];\n        let validData = indicator.points;\n        if (validData && validData.length) {\n            let upperSeries = indicator.targetSeries[1];\n            let signalSeries = indicator.targetSeries[0];\n            let length = indicator.period;\n            if (validData.length >= indicator.period) {\n                for (let i = 0; i < validData.length; i++) {\n                    upperCollection.push(this.getDataPoint(validData[i].x, 100, validData[i], upperSeries, upperCollection.length));\n                    if (!(i < length)) {\n                        signalCollection.push(this.getDataPoint(validData[i].x, (Number(validData[i].close) / Number(validData[i - length].close) * 100), validData[i], signalSeries, signalCollection.length));\n                    }\n                }\n            }\n            this.setSeriesRange(signalCollection, indicator, indicator.targetSeries[0]);\n            this.setSeriesRange(upperCollection, indicator, indicator.targetSeries[1]);\n        }\n    }\n    /**\n     * To destroy the momentum indicator\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroys the momentum indicator\n         */\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        /**\n         * Returns the module name of the series\n         */\n        return 'MomentumIndicator';\n    }\n}\n","import { Series } from '../series/chart-series';\nimport { TechnicalAnalysis } from './indicator-base';\n/**\n * `RsiIndicator` module is used to render RSI indicator.\n */\nexport class RsiIndicator extends TechnicalAnalysis {\n    /**\n     * Initializes the series collection to represent the RSI Indicator\n     * @private\n     */\n    initSeriesCollection(indicator, chart) {\n        super.initSeriesCollection(indicator, chart);\n        if (indicator.showZones) {\n            let lowerLine = new Series(indicator, 'targetSeries', {}, true);\n            super.setSeriesProperties(lowerLine, indicator, 'LowerLine', indicator.lowerLine.color, indicator.lowerLine.width, chart);\n            let upperLine = new Series(indicator, 'targetSeries', {}, true);\n            super.setSeriesProperties(upperLine, indicator, 'UpperLine', indicator.upperLine.color, indicator.upperLine.width, chart);\n        }\n    }\n    /**\n     * Defines the predictions using RSI approach\n     * @private\n     */\n    initDataSource(indicator, chart) {\n        let signalCollection = [];\n        let lowerCollection = [];\n        let upperCollection = [];\n        let signalSeries = indicator.targetSeries[0];\n        //prepare data\n        let validData = indicator.points;\n        if (validData.length && validData.length >= indicator.period) {\n            //Find upper band and lower band values\n            if (indicator.showZones) {\n                for (let i = 0; i < validData.length; i++) {\n                    upperCollection.push(this.getDataPoint(validData[i].x, indicator.overBought, validData[i], indicator.targetSeries[1], upperCollection.length));\n                    lowerCollection.push(this.getDataPoint(validData[i].x, indicator.overSold, validData[i], indicator.targetSeries[2], lowerCollection.length));\n                }\n            }\n            //Find signal line value\n            let prevClose = Number(validData[0].close);\n            let gain = 0;\n            let loss = 0;\n            for (let i = 1; i <= indicator.period; i++) {\n                let close = Number(validData[i].close);\n                if (close > prevClose) {\n                    gain += close - prevClose;\n                }\n                else {\n                    loss += prevClose - close;\n                }\n                prevClose = close;\n            }\n            gain = gain / indicator.period;\n            loss = loss / indicator.period;\n            signalCollection.push(this.getDataPoint(validData[indicator.period].x, 100 - (100 / (1 + gain / loss)), validData[indicator.period], signalSeries, signalCollection.length));\n            for (let j = indicator.period + 1; j < validData.length; j++) {\n                let close = Number(validData[j].close);\n                if (close > prevClose) {\n                    gain = (gain * (indicator.period - 1) + (close - prevClose)) / indicator.period;\n                    loss = (loss * (indicator.period - 1)) / indicator.period;\n                }\n                else if (close < prevClose) {\n                    loss = (loss * (indicator.period - 1) + (prevClose - close)) / indicator.period;\n                    gain = (gain * (indicator.period - 1)) / indicator.period;\n                }\n                prevClose = close;\n                signalCollection.push(this.getDataPoint(validData[j].x, 100 - (100 / (1 + gain / loss)), validData[j], signalSeries, signalCollection.length));\n            }\n        }\n        this.setSeriesRange(signalCollection, indicator, indicator.targetSeries[0]);\n        if (indicator.showZones) {\n            this.setSeriesRange(upperCollection, indicator, indicator.targetSeries[1]);\n            this.setSeriesRange(lowerCollection, indicator, indicator.targetSeries[2]);\n        }\n    }\n    /**\n     * To destroy the RSI Indicator.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroys the RSI Indicator\n         */\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        /**\n         * Returns the module name of the indicator.\n         */\n        return 'RsiIndicator';\n    }\n}\n","import { Series } from '../series/chart-series';\nimport { TechnicalAnalysis } from './indicator-base';\n/**\n * `StochasticIndicator` module is used to render stochastic indicator.\n */\nexport class StochasticIndicator extends TechnicalAnalysis {\n    /**\n     * Defines the collection of series that represents the stochastic indicator\n     * @private\n     */\n    initSeriesCollection(indicator, chart) {\n        super.initSeriesCollection(indicator, chart);\n        let periodLine = new Series(indicator, 'targetSeries', {}, true);\n        this.setSeriesProperties(periodLine, indicator, 'PeriodLine', indicator.periodLine.color, indicator.periodLine.width, chart);\n        if (indicator.showZones) {\n            let upperSeries = new Series(indicator, 'targetSeries', {}, true);\n            this.setSeriesProperties(upperSeries, indicator, 'UpperLine', indicator.upperLine.color, indicator.upperLine.width, chart);\n            let lowerSeries = new Series(indicator, 'targetSeries', {}, true);\n            this.setSeriesProperties(lowerSeries, indicator, 'LowerLine', indicator.lowerLine.color, indicator.lowerLine.width, chart);\n        }\n    }\n    /**\n     * Defines the predictions based on stochastic approach\n     * @private\n     */\n    initDataSource(indicator, chart) {\n        let signalCollection = [];\n        let upperCollection = [];\n        let lowerCollection = [];\n        let periodCollection = [];\n        let source = [];\n        let sourceSeries = indicator.sourceSeries;\n        let point = {};\n        //prepare data\n        let validData = indicator.points;\n        if (validData.length && validData.length >= indicator.period) {\n            if (indicator.showZones) {\n                for (let i = 0; i < validData.length; i++) {\n                    upperCollection.push(this.getDataPoint(validData[i].x, indicator.overBought, validData[i], indicator.targetSeries[2], upperCollection.length));\n                    lowerCollection.push(this.getDataPoint(validData[i].x, indicator.overSold, validData[i], indicator.targetSeries[3], lowerCollection.length));\n                }\n            }\n            source = this.calculatePeriod(indicator.period, indicator.kPeriod, validData, indicator.targetSeries[1]);\n            periodCollection = this.smaCalculation(indicator.period, indicator.kPeriod, source, indicator.targetSeries[1]);\n            signalCollection = this.smaCalculation(indicator.period + indicator.kPeriod - 1, indicator.dPeriod, source, indicator.targetSeries[0]);\n        }\n        this.setSeriesRange(signalCollection, indicator, indicator.targetSeries[0]);\n        this.setSeriesRange(periodCollection, indicator, indicator.targetSeries[1]);\n        if (indicator.showZones) {\n            this.setSeriesRange(upperCollection, indicator, indicator.targetSeries[2]);\n            this.setSeriesRange(lowerCollection, indicator, indicator.targetSeries[3]);\n        }\n    }\n    /**\n     * Calculates the SMA Values\n     * @private\n     */\n    smaCalculation(period, kPeriod, data, sourceSeries) {\n        let pointCollection = [];\n        if (data.length >= period + kPeriod) {\n            let count = period + (kPeriod - 1);\n            let temp = [];\n            let values = [];\n            for (let i = 0; i < data.length; i++) {\n                let value = Number(data[i].y);\n                temp.push(value);\n            }\n            let length = temp.length;\n            while (length >= count) {\n                let sum = 0;\n                for (let i = period - 1; i < (period + kPeriod - 1); i++) {\n                    sum = sum + temp[i];\n                }\n                sum = sum / kPeriod;\n                values.push(sum.toFixed(2));\n                temp.splice(0, 1);\n                length = temp.length;\n            }\n            let len = count - 1;\n            for (let i = 0; i < data.length; i++) {\n                if (!(i < len)) {\n                    pointCollection.push(this.getDataPoint(data[i].x, Number(values[i - len]), data[i], sourceSeries, pointCollection.length));\n                    data[i].y = Number((values[i - len]));\n                }\n            }\n        }\n        return pointCollection;\n    }\n    /**\n     * Calculates the period line values.\n     * @private\n     */\n    calculatePeriod(period, kPeriod, data, series) {\n        let lowValues = [];\n        let highValues = [];\n        let closeValues = [];\n        let modifiedSource = [];\n        for (let j = 0; j < data.length; j++) {\n            lowValues[j] = data[j].low;\n            highValues[j] = data[j].high;\n            closeValues[j] = data[j].close;\n        }\n        if (data.length > period) {\n            let totalPeriod = period + kPeriod;\n            let mins = [];\n            let maxs = [];\n            for (let i = 0; i < period - 1; ++i) {\n                maxs.push(0);\n                mins.push(0);\n                modifiedSource.push(this.getDataPoint(data[i].x, data[i].close, data[i], series, modifiedSource.length));\n            }\n            for (let i = period - 1; i < data.length; ++i) {\n                let min = Number.MAX_VALUE;\n                let max = Number.MIN_VALUE;\n                for (let j = 0; j < period; ++j) {\n                    min = Math.min(min, lowValues[i - j]);\n                    max = Math.max(max, highValues[i - j]);\n                }\n                maxs.push(max);\n                mins.push(min);\n            }\n            for (let i = period - 1; i < data.length; ++i) {\n                let top = 0;\n                let bottom = 0;\n                top += closeValues[i] - mins[i];\n                bottom += maxs[i] - mins[i];\n                modifiedSource.push(this.getDataPoint(data[i].x, (top / bottom) * 100, data[i], series, modifiedSource.length));\n            }\n        }\n        return modifiedSource;\n    }\n    /**\n     * To destroy the Stocastic Indicator.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroys the stochastic indicator\n         */\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        /**\n         * Returns the module name of the indicator.\n         */\n        return 'StochasticIndicator';\n    }\n}\n","import { Series } from '../series/chart-series';\nimport { TechnicalAnalysis } from './indicator-base';\n/**\n * `BollingerBands` module is used to render bollinger band indicator.\n */\nexport class BollingerBands extends TechnicalAnalysis {\n    /**\n     * Initializes the series collection to represent bollinger band\n     */\n    initSeriesCollection(indicator, chart) {\n        indicator.targetSeries = [];\n        let rangeArea = new Series(indicator, 'targetSeries', {}, true);\n        rangeArea.type = 'RangeArea';\n        if (indicator.bandColor !== 'transparent' && indicator.bandColor !== 'none') {\n            this.setSeriesProperties(rangeArea, indicator, 'BollingerBand', indicator.bandColor, 0, chart);\n        }\n        let signalLine = new Series(indicator, 'targetSeries', {}, true);\n        this.setSeriesProperties(signalLine, indicator, 'SignalLine', indicator.fill, indicator.width, chart);\n        let upperLine = new Series(indicator, 'targetSeries', {}, true);\n        this.setSeriesProperties(upperLine, indicator, 'UpperLine', indicator.upperLine.color, indicator.upperLine.width, chart);\n        let lowerLine = new Series(indicator, 'targetSeries', {}, true);\n        this.setSeriesProperties(lowerLine, indicator, 'LowerLine', indicator.lowerLine.color, indicator.lowerLine.width, chart);\n    }\n    /**\n     * Defines the predictions using Bollinger Band Approach\n     * @private\n     */\n    initDataSource(indicator, chart) {\n        let enableBand = indicator.bandColor !== 'transparent' && indicator.bandColor !== 'none';\n        let start = enableBand ? 1 : 0;\n        let signalCollection = [];\n        let upperCollection = [];\n        let lowerCollection = [];\n        let bandCollection = [];\n        let upperSeries = indicator.targetSeries[start + 1];\n        let lowerSeries = indicator.targetSeries[start + 2];\n        let signalSeries = indicator.targetSeries[start];\n        let rangeAreaSeries = enableBand ? indicator.targetSeries[0] : null;\n        //prepare data\n        let validData = indicator.points;\n        if (validData.length && validData.length >= indicator.period) {\n            let sum = 0;\n            let deviationSum = 0;\n            let multiplier = indicator.standardDeviation;\n            let limit = validData.length;\n            let length = Math.round(indicator.period);\n            let smaPoints = [];\n            let deviations = [];\n            let bollingerPoints = [];\n            for (let i = 0; i < length; i++) {\n                sum += Number(validData[i].close);\n            }\n            let sma = sum / indicator.period;\n            for (let i = 0; i < limit; i++) {\n                let y = Number(validData[i].close);\n                if (i >= length - 1 && i < limit) {\n                    if (i - indicator.period >= 0) {\n                        let diff = y - Number(validData[i - length].close);\n                        sum = sum + diff;\n                        sma = sum / (indicator.period);\n                        smaPoints[i] = sma;\n                        deviations[i] = Math.pow(y - sma, 2);\n                        deviationSum += deviations[i] - deviations[i - length];\n                    }\n                    else {\n                        smaPoints[i] = sma;\n                        deviations[i] = Math.pow(y - sma, 2);\n                        deviationSum += deviations[i];\n                    }\n                    let range = Math.sqrt(deviationSum / (indicator.period));\n                    let lowerBand = smaPoints[i] - (multiplier * range);\n                    let upperBand = smaPoints[i] + (multiplier * range);\n                    if (i + 1 === length) {\n                        for (let j = 0; j < length - 1; j++) {\n                            bollingerPoints[j] = {\n                                'X': validData[j].x, 'mb': smaPoints[i],\n                                'lb': lowerBand, 'ub': upperBand, visible: true\n                            };\n                        }\n                    }\n                    bollingerPoints[i] = {\n                        'X': validData[i].x, 'mb': smaPoints[i],\n                        'lb': lowerBand, 'ub': upperBand, visible: true\n                    };\n                }\n                else {\n                    if (i < indicator.period - 1) {\n                        smaPoints[i] = sma;\n                        deviations[i] = Math.pow(y - sma, 2);\n                        deviationSum += deviations[i];\n                    }\n                }\n            }\n            let i = -1;\n            let j = -1;\n            for (let k = 0; k < limit; k++) {\n                if (k >= (length - 1)) {\n                    let ub = 'ub';\n                    let lb = 'lb';\n                    let mb = 'mb';\n                    upperCollection.push(this.getDataPoint(validData[k].x, bollingerPoints[k][ub], validData[k], upperSeries, upperCollection.length));\n                    lowerCollection.push(this.getDataPoint(validData[k].x, bollingerPoints[k][lb], validData[k], lowerSeries, lowerCollection.length));\n                    signalCollection.push(this.getDataPoint(validData[k].x, bollingerPoints[k][mb], validData[k], signalSeries, signalCollection.length));\n                    if (enableBand) {\n                        bandCollection.push(this.getRangePoint(validData[k].x, upperCollection[++i].y, lowerCollection[++j].y, validData[k], rangeAreaSeries, bandCollection.length));\n                    }\n                }\n            }\n        }\n        if (enableBand) {\n            this.setSeriesRange(bandCollection, indicator, indicator.targetSeries[0]);\n        }\n        this.setSeriesRange(signalCollection, indicator, indicator.targetSeries[start]);\n        this.setSeriesRange(upperCollection, indicator, indicator.targetSeries[start + 1]);\n        this.setSeriesRange(lowerCollection, indicator, indicator.targetSeries[start + 2]);\n    }\n    /**\n     * To destroy the Bollinger Band.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroys the bollinger band\n         */\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        /**\n         * Returns the module name of the series\n         */\n        return 'BollingerBandsIndicator';\n    }\n}\n","import { Series } from '../series/chart-series';\nimport { TechnicalAnalysis } from './indicator-base';\n/**\n * `MacdIndicator` module is used to render MACD indicator.\n */\nexport class MacdIndicator extends TechnicalAnalysis {\n    /**\n     * Defines the collection of series to represent the MACD indicator\n     * @private\n     */\n    initSeriesCollection(indicator, chart) {\n        super.initSeriesCollection(indicator, chart);\n        if (indicator.macdType === 'Line' || indicator.macdType === 'Both') {\n            let macdSeries = new Series(indicator, 'targetSeries', {}, true);\n            this.setSeriesProperties(macdSeries, indicator, 'MacdLine', indicator.macdLine.color, indicator.macdLine.width, chart);\n        }\n        if (indicator.macdType === 'Histogram' || indicator.macdType === 'Both') {\n            let histogramSeries = new Series(indicator, 'targetSeries', {}, true);\n            histogramSeries.type = 'Column';\n            this.setSeriesProperties(histogramSeries, indicator, 'Histogram', indicator.macdPositiveColor, indicator.width, chart);\n        }\n    }\n    /**\n     * Defines the predictions using MACD approach\n     * @private\n     */\n    initDataSource(indicator, chart) {\n        let signalCollection = [];\n        let fastPeriod = indicator.fastPeriod;\n        let slowPeriod = indicator.slowPeriod;\n        let trigger = indicator.period;\n        let length = fastPeriod + trigger;\n        let macdCollection = [];\n        let histogramCollection = [];\n        let validData = indicator.points;\n        let signalSeries = indicator.targetSeries[0];\n        let histogramSeries;\n        let macdLineSeries;\n        if (indicator.macdType === 'Histogram') {\n            histogramSeries = indicator.targetSeries[1];\n        }\n        else {\n            macdLineSeries = indicator.targetSeries[1];\n            if (indicator.macdType === 'Both') {\n                histogramSeries = indicator.targetSeries[2];\n            }\n        }\n        if (validData && length < validData.length && slowPeriod <= fastPeriod &&\n            slowPeriod > 0 && (length - 2) >= 0) {\n            let shortEMA = this.calculateEMAValues(slowPeriod, validData, 'close');\n            let longEMA = this.calculateEMAValues(fastPeriod, validData, 'close');\n            let macdValues = this.getMACDVales(indicator, shortEMA, longEMA);\n            macdCollection = this.getMACDPoints(indicator, macdValues, validData, macdLineSeries || signalSeries);\n            let signalEMA = this.calculateEMAValues(trigger, macdCollection, 'y');\n            signalCollection = this.getSignalPoints(indicator, signalEMA, validData, signalSeries);\n            if (histogramSeries) {\n                histogramCollection = this.getHistogramPoints(indicator, macdValues, signalEMA, validData, histogramSeries);\n            }\n        }\n        this.setSeriesRange(signalCollection, indicator, indicator.targetSeries[0]);\n        if (histogramSeries) {\n            this.setSeriesRange(histogramCollection, indicator, histogramSeries);\n        }\n        if (macdLineSeries) {\n            this.setSeriesRange(macdCollection, indicator, macdLineSeries);\n        }\n    }\n    /**\n     * Calculates the EMA values for the given period\n     */\n    calculateEMAValues(period, validData, field) {\n        let sum = 0;\n        let initialEMA = 0;\n        let emaValues = [];\n        let emaPercent = (2 / (period + 1));\n        for (let i = 0; i < period; i++) {\n            sum += Number(validData[i][field]);\n        }\n        initialEMA = (sum / period);\n        emaValues.push(initialEMA);\n        let emaAvg = initialEMA;\n        for (let j = period; j < validData.length; j++) {\n            emaAvg = (Number(validData[j][field]) - emaAvg) * emaPercent + emaAvg;\n            emaValues.push(emaAvg);\n        }\n        return emaValues;\n    }\n    /**\n     * Defines the MACD Points\n     */\n    getMACDPoints(indicator, macdPoints, validData, series) {\n        let macdCollection = [];\n        let dataMACDIndex = indicator.fastPeriod - 1;\n        let macdIndex = 0;\n        while (dataMACDIndex < validData.length) {\n            macdCollection.push(this.getDataPoint(validData[dataMACDIndex].x, macdPoints[macdIndex], validData[dataMACDIndex], series, macdCollection.length));\n            dataMACDIndex++;\n            macdIndex++;\n        }\n        return macdCollection;\n    }\n    /**\n     * Calculates the signal points\n     */\n    getSignalPoints(indicator, signalEma, validData, series) {\n        let dataSignalIndex = indicator.fastPeriod + indicator.period - 2;\n        let signalIndex = 0;\n        let signalCollection = [];\n        while (dataSignalIndex < validData.length) {\n            signalCollection.push(this.getDataPoint(validData[dataSignalIndex].x, signalEma[signalIndex], validData[dataSignalIndex], series, signalCollection.length));\n            dataSignalIndex++;\n            signalIndex++;\n        }\n        return signalCollection;\n    }\n    /**\n     * Calculates the MACD values\n     */\n    getMACDVales(indicator, shortEma, longEma) {\n        let macdPoints = [];\n        let diff = indicator.fastPeriod - indicator.slowPeriod;\n        for (let i = 0; i < longEma.length; i++) {\n            macdPoints.push((shortEma[i + diff] - longEma[i]));\n        }\n        return macdPoints;\n    }\n    /**\n     * Calculates the Histogram Points\n     */\n    getHistogramPoints(indicator, macdPoints, signalEma, validData, series) {\n        let dataHistogramIndex = indicator.fastPeriod + indicator.period - 2;\n        let histogramIndex = 0;\n        let histogramCollection = [];\n        while (dataHistogramIndex < validData.length) {\n            histogramCollection.push(this.getDataPoint(validData[dataHistogramIndex].x, macdPoints[histogramIndex + (indicator.period - 1)] - signalEma[histogramIndex], validData[dataHistogramIndex], series, histogramCollection.length, indicator));\n            dataHistogramIndex++;\n            histogramIndex++;\n        }\n        return histogramCollection;\n    }\n    /**\n     * To destroy the MACD Indicator.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroys the MACD indicator\n         */\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        /**\n         * Returns the module name of the series\n         */\n        return 'MacdIndicator';\n    }\n}\n","import { Series, Points } from '../series/chart-series';\nimport { findClipRect, RectOption } from '../../common/utils/helper';\n/**\n * `Trendline` module is used to render 6 types of trendlines in chart.\n */\nexport class Trendlines {\n    /**\n     * Defines the collection of series, that are used to represent a trendline\n     * @private\n     */\n    initSeriesCollection(trendline, chart) {\n        let trendLineSeries = new Series(trendline, 'targetSeries', {}, true);\n        if (trendline.type === 'Linear' || trendline.type === 'MovingAverage') {\n            trendLineSeries.type = 'Line';\n        }\n        else {\n            trendLineSeries.type = 'Spline';\n        }\n        this.setSeriesProperties(trendLineSeries, trendline, trendline.type, trendline.fill, trendline.width, chart);\n    }\n    /**\n     * Initializes the properties of the trendline series\n     */\n    setSeriesProperties(series, trendline, name, fill, width, chart) {\n        series.name = trendline.name;\n        series.xName = 'x';\n        series.yName = 'y';\n        series.fill = fill || 'blue';\n        series.width = width;\n        series.clipRectElement = trendline.clipRectElement;\n        series.points = [];\n        series.enableTooltip = trendline.enableTooltip;\n        series.index = trendline.index;\n        series.sourceIndex = trendline.sourceIndex;\n        series.interior = series.fill;\n        series.animation = trendline.animation;\n        series.legendShape = 'HorizontalLine';\n        series.marker = trendline.marker;\n        series.category = 'TrendLine';\n        series.chart = chart;\n        series.xMin = Infinity;\n        series.xMax = -Infinity;\n        series.yMin = Infinity;\n        series.yMax = -Infinity;\n        series.xData = [];\n        series.yData = [];\n        trendline.targetSeries = series;\n    }\n    /**\n     * Creates the elements of a trendline\n     */\n    createTrendLineElements(chart, trendline, index, element, clipRectElement) {\n        trendline.trendLineElement = element;\n        trendline.targetSeries.clipRectElement = clipRectElement;\n        trendline.targetSeries.seriesElement = element;\n        chart.trendLineElements.appendChild(trendline.trendLineElement);\n    }\n    /**\n     * Defines the data point of trendline\n     */\n    getDataPoint(x, y, sourcePoint, series, index) {\n        let trendPoint = new Points();\n        trendPoint.x = x;\n        trendPoint.y = y;\n        trendPoint.xValue = Number(x);\n        trendPoint.color = series.fill;\n        trendPoint.index = index;\n        trendPoint.yValue = Number(y);\n        trendPoint.visible = true;\n        series.xMin = Math.min(series.xMin, trendPoint.xValue);\n        series.yMin = Math.min(series.yMin, trendPoint.yValue);\n        series.xMax = Math.max(series.xMax, trendPoint.xValue);\n        series.yMax = Math.max(series.yMax, trendPoint.yValue);\n        series.xData.push(trendPoint.xValue);\n        return trendPoint;\n    }\n    /**\n     * Finds the slope and intercept of trendline\n     */\n    findSlopeIntercept(xValues, yValues, trendline, points) {\n        let xAvg = 0;\n        let yAvg = 0;\n        let xyAvg = 0;\n        let xxAvg = 0;\n        let yyAvg = 0;\n        let index = 0;\n        let slope = 0;\n        let intercept = 0;\n        while (index < points.length) {\n            xAvg += xValues[index];\n            yAvg += yValues[index];\n            xyAvg += xValues[index] * yValues[index];\n            xxAvg += xValues[index] * xValues[index];\n            yyAvg += yValues[index] * yValues[index];\n            index++;\n        }\n        let type = trendline.type;\n        if (trendline.intercept && (type === 'Linear' || type === 'Exponential')) {\n            intercept = trendline.intercept;\n            switch (type) {\n                case 'Linear':\n                    slope = ((xyAvg) - (trendline.intercept * xAvg)) / xxAvg;\n                    break;\n                case 'Exponential':\n                    slope = ((xyAvg) - (Math.log(Math.abs(trendline.intercept)) * xAvg)) / xxAvg;\n                    break;\n            }\n        }\n        else {\n            slope = ((points.length * xyAvg) - (xAvg * yAvg)) / ((points.length * xxAvg) - (xAvg * xAvg));\n            if (type === 'Exponential' || type === 'Power') {\n                intercept = Math.exp((yAvg - (slope * xAvg)) / points.length);\n            }\n            else {\n                intercept = (yAvg - (slope * xAvg)) / points.length;\n            }\n        }\n        return { slope: slope, intercept: intercept };\n    }\n    /**\n     * Defines the points to draw the trendlines\n     */\n    initDataSource(trendline, chart) {\n        let points = trendline.points;\n        if (points && points.length) {\n            //prepare data\n            let trendlineSeries = trendline.targetSeries;\n            switch (trendline.type) {\n                case 'Linear':\n                    this.setLinearRange(points, trendline, trendlineSeries);\n                    break;\n                case 'Exponential':\n                    this.setExponentialRange(points, trendline, trendlineSeries);\n                    break;\n                case 'MovingAverage':\n                    this.setMovingAverageRange(points, trendline, trendlineSeries);\n                    break;\n                case 'Polynomial':\n                    this.setPolynomialRange(points, trendline, trendlineSeries);\n                    break;\n                case 'Power':\n                    this.setPowerRange(points, trendline, trendlineSeries);\n                    break;\n                case 'Logarithmic':\n                    this.setLogarithmicRange(points, trendline, trendlineSeries);\n                    break;\n            }\n            if (trendline.type !== 'Linear' && trendline.type !== 'MovingAverage') {\n                trendlineSeries.chart.splineSeriesModule.findSplinePoint(trendlineSeries);\n            }\n        }\n    }\n    /**\n     * Calculation of exponential points\n     */\n    setExponentialRange(points, trendline, series) {\n        let xValue = [];\n        let yValue = [];\n        let index = 0;\n        let slopeIntercept;\n        while (index < points.length) {\n            let point = points[index];\n            xValue.push(point.xValue);\n            yValue.push(Math.log(point.yValue));\n            index++;\n        }\n        slopeIntercept = this.findSlopeIntercept(xValue, yValue, trendline, points);\n        series.points = this.getExponentialPoints(trendline, points, xValue, yValue, series, slopeIntercept);\n    }\n    /**\n     * Calculation of logarithmic points\n     */\n    setLogarithmicRange(points, trendline, series) {\n        let xLogValue = [];\n        let yLogValue = [];\n        let xPointsLgr = [];\n        let slopeIntercept;\n        let index = 0;\n        while (index < points.length) {\n            let point = points[index];\n            xPointsLgr.push(point.xValue);\n            xLogValue.push(Math.log(point.xValue));\n            yLogValue.push(point.yValue);\n            index++;\n        }\n        slopeIntercept = this.findSlopeIntercept(xLogValue, yLogValue, trendline, points);\n        series.points = this.getLogarithmicPoints(trendline, points, xPointsLgr, yLogValue, series, slopeIntercept);\n    }\n    /**\n     * Calculation of polynomial points\n     */\n    setPolynomialRange(points, trendline, series) {\n        let xPolyValues = [];\n        let yPolyValues = [];\n        let index = 0;\n        while (index < points.length) {\n            let point = points[index];\n            xPolyValues.push(point.xValue);\n            yPolyValues.push(point.yValue);\n            index++;\n        }\n        series.points = this.getPolynomialPoints(trendline, points, xPolyValues, yPolyValues, series);\n    }\n    /**\n     * Calculation of power points\n     */\n    setPowerRange(points, trendline, series) {\n        let xValues = [];\n        let yValues = [];\n        let powerPoints = [];\n        let slopeIntercept;\n        let index = 0;\n        while (index < points.length) {\n            let point = points[index];\n            powerPoints.push(point.xValue);\n            xValues.push(Math.log(point.xValue));\n            yValues.push(Math.log(point.yValue));\n            index++;\n        }\n        slopeIntercept = this.findSlopeIntercept(xValues, yValues, trendline, points);\n        series.points = this.getPowerPoints(trendline, points, powerPoints, yValues, series, slopeIntercept);\n    }\n    /**\n     * Calculation of linear points\n     */\n    setLinearRange(points, trendline, series) {\n        let xValues = [];\n        let yValues = [];\n        let slopeIntercept;\n        let index = 0;\n        while (index < points.length) {\n            let point = points[index];\n            xValues.push(point.xValue);\n            yValues.push(point.yValue);\n            index++;\n        }\n        slopeIntercept = this.findSlopeIntercept(xValues, yValues, trendline, points);\n        series.points = this.getLinearPoints(trendline, points, xValues, yValues, series, slopeIntercept);\n    }\n    /**\n     * Calculation of moving average points\n     */\n    setMovingAverageRange(points, trendline, series) {\n        let xValues = [];\n        let yValues = [];\n        let xAvgValues = [];\n        let index = 0;\n        while (index < points.length) {\n            let point = points[index];\n            xAvgValues.push(point.xValue);\n            xValues.push(index + 1);\n            yValues.push(point.yValue);\n            index++;\n        }\n        series.points = this.getMovingAveragePoints(trendline, points, xAvgValues, yValues, series);\n    }\n    /**\n     * Calculation of logarithmic points\n     */\n    getLogarithmicPoints(trendline, points, xValues, yValues, series, slopeInterceptLog) {\n        let midPoint = Math.round((points.length / 2));\n        let pts = [];\n        let x1Log = xValues[0] - trendline.backwardForecast;\n        let y1Log = slopeInterceptLog.intercept + (slopeInterceptLog.slope * Math.log(x1Log));\n        let x2Log = xValues[midPoint - 1];\n        let y2Log = slopeInterceptLog.intercept + (slopeInterceptLog.slope * Math.log(x2Log));\n        let x3Log = xValues[xValues.length - 1] + trendline.forwardForecast;\n        let y3Log = slopeInterceptLog.intercept + (slopeInterceptLog.slope * Math.log(x3Log));\n        pts.push(this.getDataPoint(x1Log, y1Log, points[0], series, pts.length));\n        pts.push(this.getDataPoint(x2Log, y2Log, points[midPoint - 1], series, pts.length));\n        pts.push(this.getDataPoint(x3Log, y3Log, points[points.length - 1], series, pts.length));\n        return pts;\n    }\n    /**\n     * Defines the points based on data point\n     */\n    getPowerPoints(trendline, points, xValues, yValues, series, slopeInterceptPower) {\n        let midPoint = Math.round((points.length / 2));\n        let pts = [];\n        let x1 = xValues[0] - trendline.backwardForecast;\n        x1 = x1 > -1 ? x1 : 0;\n        let y1 = slopeInterceptPower.intercept * Math.pow(x1, slopeInterceptPower.slope);\n        let x2 = xValues[midPoint - 1];\n        let y2 = slopeInterceptPower.intercept * Math.pow(x2, slopeInterceptPower.slope);\n        let x3 = xValues[xValues.length - 1] + trendline.forwardForecast;\n        let y3 = slopeInterceptPower.intercept * Math.pow(x3, slopeInterceptPower.slope);\n        pts.push(this.getDataPoint(x1, y1, points[0], series, pts.length));\n        pts.push(this.getDataPoint(x2, y2, points[midPoint - 1], series, pts.length));\n        pts.push(this.getDataPoint(x3, y3, points[points.length - 1], series, pts.length));\n        return pts;\n    }\n    /**\n     * Get the polynomial points based on polynomial slopes\n     */\n    getPolynomialPoints(trendline, points, xValues, yValues, series) {\n        let midPoint = Math.round((points.length / 2));\n        let pts = [];\n        let polynomialOrder = points.length <= trendline.polynomialOrder ? points.length : trendline.polynomialOrder;\n        polynomialOrder = Math.max(2, polynomialOrder);\n        polynomialOrder = Math.min(6, polynomialOrder);\n        trendline.polynomialOrder = polynomialOrder;\n        trendline.polynomialSlopes = [];\n        trendline.polynomialSlopes.length = trendline.polynomialOrder + 1;\n        let index = 0;\n        while (index < xValues.length) {\n            let xVal = xValues[index];\n            let yVal = yValues[index];\n            let subIndex = 0;\n            while (subIndex <= trendline.polynomialOrder) {\n                if (!trendline.polynomialSlopes[subIndex]) {\n                    trendline.polynomialSlopes[subIndex] = 0;\n                }\n                trendline.polynomialSlopes[subIndex] += Math.pow(xVal, subIndex) * yVal;\n                ++subIndex;\n            }\n            index++;\n        }\n        let numArray = [];\n        numArray.length = 1 + 2 * trendline.polynomialOrder;\n        let matrix = [];\n        matrix.length = trendline.polynomialOrder + 1;\n        let newIndex = 0;\n        while (newIndex < (trendline.polynomialOrder + 1)) {\n            matrix[newIndex] = [];\n            matrix[newIndex].length = 3;\n            newIndex++;\n        }\n        let nIndex = 0;\n        let num1 = 0;\n        while (nIndex < xValues.length) {\n            let d = xValues[nIndex];\n            let num2 = 1.0;\n            let nIndex2 = 0;\n            while (nIndex2 < numArray.length) {\n                if (!numArray[nIndex2]) {\n                    numArray[nIndex2] = 0;\n                }\n                numArray[nIndex2] += num2;\n                num2 *= d;\n                ++num1;\n                ++nIndex2;\n            }\n            ++nIndex;\n        }\n        let nnIndex = 0;\n        while (nnIndex <= trendline.polynomialOrder) {\n            let nnIndex2 = 0;\n            while (nnIndex2 <= trendline.polynomialOrder) {\n                matrix[nnIndex][nnIndex2] = numArray[nnIndex + nnIndex2];\n                ++nnIndex2;\n            }\n            ++nnIndex;\n        }\n        if (!this.gaussJordanElimination(matrix, trendline.polynomialSlopes)) {\n            trendline.polynomialSlopes = null;\n        }\n        pts = this.getPoints(trendline, points, xValues, yValues, series);\n        return pts;\n    }\n    /**\n     * Defines the moving average points\n     */\n    getMovingAveragePoints(trendline, points, xValues, yValues, series) {\n        let pts = [];\n        let period = trendline.period >= points.length ? points.length - 1 : trendline.period;\n        period = Math.max(2, period);\n        let index = 0;\n        let y;\n        let x;\n        let count;\n        let nullCount;\n        while (index < points.length - 1) {\n            y = count = nullCount = 0;\n            for (let j = index; count < period; j++) {\n                count++;\n                if (!yValues[j]) {\n                    nullCount++;\n                }\n                y += yValues[j];\n            }\n            y = period - nullCount <= 0 ? null : y / (period - nullCount);\n            if (y && !isNaN(y)) {\n                x = xValues[period - 1 + index];\n                pts.push(this.getDataPoint(x, y, points[period - 1 + index], series, pts.length));\n            }\n            index++;\n        }\n        return pts;\n    }\n    /**\n     * Defines the linear points\n     */\n    getLinearPoints(trendline, points, xValues, yValues, series, slopeInterceptLinear) {\n        let pts = [];\n        let x1Linear = xValues[0] - trendline.backwardForecast;\n        let y1Linear = slopeInterceptLinear.slope * x1Linear + slopeInterceptLinear.intercept;\n        let x2Linear = xValues[xValues.length - 1] + trendline.forwardForecast;\n        let y2Linear = slopeInterceptLinear.slope * x2Linear + slopeInterceptLinear.intercept;\n        pts.push(this.getDataPoint(x1Linear, y1Linear, points[0], series, pts.length));\n        pts.push(this.getDataPoint(x2Linear, y2Linear, points[points.length - 1], series, pts.length));\n        return pts;\n    }\n    /**\n     * Defines the exponential points\n     */\n    getExponentialPoints(trendline, points, xValues, yValues, series, slopeInterceptExp) {\n        let midPoint = Math.round((points.length / 2));\n        let ptsExp = [];\n        let x1 = xValues[0] - trendline.backwardForecast;\n        let y1 = slopeInterceptExp.intercept * Math.exp(slopeInterceptExp.slope * x1);\n        let x2 = xValues[midPoint - 1];\n        let y2 = slopeInterceptExp.intercept * Math.exp(slopeInterceptExp.slope * x2);\n        let x3 = xValues[xValues.length - 1] + trendline.forwardForecast;\n        let y3 = slopeInterceptExp.intercept * Math.exp(slopeInterceptExp.slope * x3);\n        ptsExp.push(this.getDataPoint(x1, y1, points[0], series, ptsExp.length));\n        ptsExp.push(this.getDataPoint(x2, y2, points[midPoint - 1], series, ptsExp.length));\n        ptsExp.push(this.getDataPoint(x3, y3, points[points.length - 1], series, ptsExp.length));\n        return ptsExp;\n    }\n    /**\n     * Defines the points based on data point\n     */\n    getPoints(trendline, points, xValues, yValues, series) {\n        let midPoint = Math.round((points.length / 2));\n        let polynomialSlopes = trendline.polynomialSlopes;\n        let pts = [];\n        let x1 = 1;\n        let index = 1;\n        let xValue;\n        let yValue;\n        while (index <= polynomialSlopes.length) {\n            if (index === 1) {\n                xValue = xValues[0] - trendline.backwardForecast;\n                yValue = this.getPolynomialYValue(polynomialSlopes, xValue);\n                pts.push(this.getDataPoint(xValue, yValue, points[0], series, pts.length));\n            }\n            else if (index === polynomialSlopes.length) {\n                xValue = xValues[points.length - 1] + trendline.forwardForecast;\n                yValue = this.getPolynomialYValue(polynomialSlopes, xValue);\n                pts.push(this.getDataPoint(xValue, yValue, points[points.length - 1], series, pts.length));\n            }\n            else {\n                x1 += (points.length + trendline.forwardForecast) / polynomialSlopes.length;\n                xValue = xValues[parseInt(x1.toString(), 10) - 1];\n                yValue = this.getPolynomialYValue(polynomialSlopes, xValue);\n                pts.push(this.getDataPoint(xValue, yValue, points[parseInt(x1.toString(), 10) - 1], series, pts.length));\n            }\n            index++;\n        }\n        return pts;\n    }\n    /**\n     * Defines the polynomial value of y\n     */\n    getPolynomialYValue(slopes, x) {\n        let sum = 0;\n        let index = 0;\n        while (index < slopes.length) {\n            sum += slopes[index] * Math.pow(x, index);\n            index++;\n        }\n        return sum;\n    }\n    /**\n     * Defines the gauss jordan elimination\n     */\n    gaussJordanElimination(matrix, polynomialSlopes) {\n        let length = matrix.length;\n        let numArray1 = [];\n        let numArray2 = [];\n        let numArray3 = [];\n        numArray1.length = length;\n        numArray2.length = length;\n        numArray3.length = length;\n        let index = 0;\n        while (index < length) {\n            numArray3[index] = 0;\n            ++index;\n        }\n        let index1 = 0;\n        while (index1 < length) {\n            let num1 = 0;\n            let index2 = 0;\n            let index3 = 0;\n            let index4 = 0;\n            while (index4 < length) {\n                if (numArray3[index4] !== 1) {\n                    let index5 = 0;\n                    while (index5 < length) {\n                        if (numArray3[index5] === 0 && Math.abs(matrix[index4][index5]) >= num1) {\n                            num1 = Math.abs(matrix[index4][index5]);\n                            index2 = index4;\n                            index3 = index5;\n                        }\n                        ++index5;\n                    }\n                }\n                ++index4;\n            }\n            ++numArray3[index3];\n            if (index2 !== index3) {\n                let index4 = 0;\n                while (index4 < length) {\n                    let num2 = matrix[index2][index4];\n                    matrix[index2][index4] = matrix[index3][index4];\n                    matrix[index3][index4] = num2;\n                    ++index4;\n                }\n                let num3 = polynomialSlopes[index2];\n                polynomialSlopes[index2] = polynomialSlopes[index3];\n                polynomialSlopes[index3] = num3;\n            }\n            numArray2[index1] = index2;\n            numArray1[index1] = index3;\n            if (matrix[index3][index3] === 0.0) {\n                return false;\n            }\n            let num4 = 1.0 / matrix[index3][index3];\n            matrix[index3][index3] = 1.0;\n            let iindex4 = 0;\n            while (iindex4 < length) {\n                matrix[index3][iindex4] *= num4;\n                ++iindex4;\n            }\n            polynomialSlopes[index3] *= num4;\n            let iandex4 = 0;\n            while (iandex4 < length) {\n                if (iandex4 !== index3) {\n                    let num2 = matrix[iandex4][index3];\n                    matrix[iandex4][index3] = 0.0;\n                    let index5 = 0;\n                    while (index5 < length) {\n                        matrix[iandex4][index5] -= matrix[index3][index5] * num2;\n                        ++index5;\n                    }\n                    polynomialSlopes[iandex4] -= polynomialSlopes[index3] * num2;\n                }\n                ++iandex4;\n            }\n            ++index1;\n        }\n        let iindex1 = length - 1;\n        while (iindex1 >= 0) {\n            if (numArray2[iindex1] !== numArray1[iindex1]) {\n                let iindex2 = 0;\n                while (iindex2 < length) {\n                    let num = matrix[iindex2][numArray2[iindex1]];\n                    matrix[iindex2][numArray2[iindex1]] = matrix[iindex2][numArray1[iindex1]];\n                    matrix[iindex2][numArray1[iindex1]] = num;\n                    ++iindex2;\n                }\n            }\n            --iindex1;\n        }\n        return true;\n    }\n    /**\n     * Defines the trendline elements\n     */\n    getTrendLineElements(series, chart) {\n        findClipRect(series);\n        let clipRect = series.clipRect;\n        let clipRectElement = chart.renderer.drawClipPath(new RectOption(chart.element.id + '_ChartTrendlineClipRect_' + series.index, 'transparent', { width: 1, color: 'Gray' }, 1, {\n            x: 0, y: 0, width: clipRect.width,\n            height: clipRect.height,\n        }));\n        let element;\n        element = chart.renderer.createGroup({\n            'id': chart.element.id + 'TrendlineSeriesGroup' + series.index,\n            'transform': 'translate(' + clipRect.x + ',' + clipRect.y + ')',\n            'clip-path': 'url(#' + chart.element.id + '_ChartTrendlineClipRect_' + series.index + ')'\n        });\n        //defines the clip rect element\n        element.appendChild(clipRectElement);\n        for (let trendline of series.trendlines) {\n            this.createTrendLineElements(chart, trendline, trendline.index, element, clipRectElement);\n        }\n    }\n    /**\n     * To destroy the trendline\n     */\n    destroy(chart) {\n        /**\n         * Destroys the Linear Trendline\n         */\n    }\n    /**\n     * Get module name\n     */\n    getModuleName() {\n        /**\n         * Returns the module name of the series\n         */\n        return 'TrendLine';\n    }\n}\n","import { Animation, Browser } from '@syncfusion/ej2-base';\nimport { measureText, findDirection, textElement, getValueXByPoint, stopTimer, getValueYByPoint, TextOption, Rect, ChartLocation, PathOption, withInBounds, removeElement } from '../../common/utils/helper';\n/**\n * `Crosshair` module is used to render the crosshair for chart.\n */\nexport class Crosshair {\n    /**\n     * Constructor for crosshair module.\n     * @private\n     */\n    constructor(chart) {\n        this.arrowLocation = new ChartLocation(0, 0);\n        this.rx = 2;\n        this.ry = 2;\n        this.chart = chart;\n        this.elementID = this.chart.element.id;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    addEventListener() {\n        if (this.chart.isDestroyed) {\n            return;\n        }\n        let cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        this.chart.on(Browser.touchMoveEvent, this.mouseMoveHandler, this);\n        this.chart.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n        this.chart.on(cancelEvent, this.mouseLeaveHandler, this);\n        this.chart.on('tapHold', this.longPress, this);\n    }\n    mouseUpHandler() {\n        if (this.chart.startMove) {\n            this.removeCrosshair(2000);\n        }\n    }\n    mouseLeaveHandler() {\n        this.removeCrosshair(1000);\n    }\n    mouseMoveHandler(event) {\n        let chart = this.chart;\n        if (event.type === 'touchmove' && (Browser.isIos || Browser.isIos7) && chart.startMove && event.preventDefault) {\n            event.preventDefault();\n        }\n        // Tooltip for chart series.\n        if (!chart.disableTrackTooltip) {\n            if (withInBounds(chart.mouseX, chart.mouseY, chart.chartAxisLayoutPanel.seriesClipRect)) {\n                if (chart.startMove || !chart.isTouch) {\n                    this.crosshair();\n                }\n            }\n            else {\n                this.removeCrosshair(1000);\n            }\n        }\n    }\n    /**\n     * Handles the long press on chart.\n     * @return {boolean}\n     * @private\n     */\n    longPress() {\n        let chart = this.chart;\n        if (withInBounds(chart.mouseX, chart.mouseY, chart.chartAxisLayoutPanel.seriesClipRect)) {\n            this.crosshair();\n        }\n        return false;\n    }\n    /**\n     * Renders the crosshair.\n     * @return {void}\n     */\n    crosshair() {\n        let chart = this.chart;\n        let horizontalCross = '';\n        let verticalCross = '';\n        let options;\n        let crosshair = chart.crosshair;\n        let chartRect = chart.chartAxisLayoutPanel.seriesClipRect;\n        let crossGroup = document.getElementById(this.elementID + '_UserInteraction');\n        this.stopAnimation();\n        if (chart.tooltip.enable && !withInBounds(chart.tooltipModule.valueX, chart.tooltipModule.valueY, chartRect)) {\n            return null;\n        }\n        this.valueX = chart.tooltip.enable ? chart.tooltipModule.valueX : chart.mouseX;\n        this.valueY = chart.tooltip.enable ? chart.tooltipModule.valueY : chart.mouseY;\n        crossGroup.setAttribute('opacity', '1');\n        if (crosshair.lineType === 'Both' || crosshair.lineType === 'Horizontal') {\n            horizontalCross += 'M ' + chartRect.x + ' ' + this.valueY +\n                ' L ' + (chartRect.x + chartRect.width) + ' ' + this.valueY;\n        }\n        if (crosshair.lineType === 'Both' || crosshair.lineType === 'Vertical') {\n            verticalCross += 'M ' + this.valueX + ' ' + chartRect.y +\n                ' L ' + this.valueX + ' ' + (chartRect.y + chartRect.height);\n        }\n        if (crossGroup.childNodes.length === 0) {\n            let axisTooltipGroup = chart.renderer.createGroup({ 'id': this.elementID + '_crosshair_axis' });\n            options = new PathOption(this.elementID + '_HorizontalLine', 'none', crosshair.line.width, crosshair.line.color || chart.themeStyle.crosshairLine, 1, null, horizontalCross);\n            this.renderCrosshairLine(options, crossGroup);\n            options.d = verticalCross;\n            options.id = this.elementID + '_VerticalLine';\n            this.renderCrosshairLine(options, crossGroup);\n            crossGroup.appendChild(axisTooltipGroup);\n            this.renderAxisTooltip(chart, chartRect, crossGroup.lastChild);\n        }\n        else {\n            document.getElementById(this.elementID + '_HorizontalLine').setAttribute('d', horizontalCross);\n            document.getElementById(this.elementID + '_VerticalLine').setAttribute('d', verticalCross);\n            this.renderAxisTooltip(chart, chartRect, crossGroup.lastChild);\n        }\n    }\n    renderCrosshairLine(options, crossGroup) {\n        let htmlObject = this.chart.renderer.drawPath(options);\n        crossGroup.appendChild(htmlObject);\n    }\n    renderAxisTooltip(chart, chartRect, axisGroup) {\n        let axis;\n        let text;\n        let rect;\n        let pathElement;\n        let textElem;\n        let options;\n        let padding = 5;\n        let direction;\n        let axisRect;\n        for (let k = 0, length = chart.axisCollections.length; k < length; k++) {\n            axis = chart.axisCollections[k];\n            axisRect = !axis.placeNextToAxisLine ? axis.rect : axis.updatedRect;\n            if (axis.crosshairTooltip.enable) {\n                if ((this.valueX <= (axisRect.x + axisRect.width) && axisRect.x <= this.valueX) ||\n                    (this.valueY <= (axisRect.y + axisRect.height) && axisRect.y <= this.valueY)) {\n                    pathElement = document.getElementById(this.elementID + '_axis_tooltip_' + k);\n                    textElem = document.getElementById(this.elementID + '_axis_tooltip_text_' + k);\n                    text = this.getAxisText(axis);\n                    if (!text) {\n                        continue;\n                    }\n                    rect = this.tooltipLocation(text, axis, chartRect, axisRect);\n                    if (pathElement === null) {\n                        pathElement = chart.renderer.drawPath({\n                            'id': this.elementID + '_axis_tooltip_' + k,\n                            'fill': axis.crosshairTooltip.fill || chart.themeStyle.crosshairFill\n                        });\n                        axisGroup.appendChild(pathElement);\n                        options = new TextOption(this.elementID + '_axis_tooltip_text_' + k, 0, 0, 'start', text);\n                        textElem = textElement(options, axis.crosshairTooltip.textStyle, axis.crosshairTooltip.textStyle.color || chart.themeStyle.crosshairLabel, axisGroup);\n                    }\n                    direction = findDirection(this.rx, this.ry, rect, this.arrowLocation, 10, this.isTop, this.isBottom, this.isLeft, this.valueX, this.valueY);\n                    pathElement.setAttribute('d', direction);\n                    textElem.textContent = text;\n                    textElem.setAttribute('x', (rect.x + padding).toString());\n                    textElem.setAttribute('y', (rect.y + padding + 3 * this.elementSize.height / 4).toString());\n                }\n                else {\n                    removeElement(this.elementID + '_axis_tooltip_' + k);\n                    removeElement(this.elementID + '_axis_tooltip_text_' + k);\n                }\n            }\n        }\n    }\n    getAxisText(axis) {\n        let value;\n        this.isBottom = false;\n        this.isTop = false;\n        this.isLeft = false;\n        this.isRight = false;\n        let labelValue = (axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks')\n            ? 0.5 : 0;\n        if (axis.orientation === 'Horizontal') {\n            value = getValueXByPoint(Math.abs(this.valueX - axis.rect.x), axis.rect.width, axis) + labelValue;\n            this.isBottom = !axis.opposedPosition;\n            this.isTop = axis.opposedPosition;\n        }\n        else {\n            value = getValueYByPoint(Math.abs(this.valueY - axis.rect.y), axis.rect.height, axis) + labelValue;\n            this.isRight = axis.opposedPosition;\n            this.isLeft = !axis.opposedPosition;\n        }\n        if (axis.valueType === 'DateTime') {\n            return axis.format(new Date(value));\n        }\n        else if (axis.valueType === 'Category') {\n            return axis.labels[Math.floor(value)];\n        }\n        else if (axis.valueType === 'Logarithmic') {\n            return value = axis.format(Math.pow(axis.logBase, value));\n        }\n        else {\n            let customLabelFormat = axis.labelFormat && axis.labelFormat.match('{value}') !== null;\n            return customLabelFormat ? axis.labelFormat.replace('{value}', axis.format(value)) : axis.format(value);\n        }\n    }\n    tooltipLocation(text, axis, bounds, axisRect) {\n        let isBottom = false;\n        let isLeft = false;\n        let padding = 5;\n        let arrowPadding = 10;\n        let tooltipRect;\n        let boundsX = bounds.x;\n        let boundsY = bounds.y;\n        let islabelInside = axis.labelPosition === 'Inside';\n        this.elementSize = measureText(text, axis.crosshairTooltip.textStyle);\n        if (axis.orientation === 'Horizontal') {\n            let yLocation = islabelInside ? axisRect.y - this.elementSize.height - (padding * 2 + arrowPadding) : axisRect.y;\n            let height = islabelInside ? axisRect.y - this.elementSize.height - arrowPadding : axisRect.y + arrowPadding;\n            this.arrowLocation = new ChartLocation(this.valueX, yLocation);\n            tooltipRect = new Rect((this.valueX - (this.elementSize.width / 2) - padding), height, this.elementSize.width + padding * 2, this.elementSize.height + padding * 2);\n            if (axis.opposedPosition) {\n                tooltipRect.y = islabelInside ? axisRect.y : axisRect.y - (this.elementSize.height + padding * 2 + arrowPadding);\n            }\n            if (tooltipRect.x < boundsX) {\n                tooltipRect.x = boundsX;\n            }\n            if (tooltipRect.x + tooltipRect.width > boundsX + bounds.width) {\n                tooltipRect.x -= ((tooltipRect.x + tooltipRect.width) - (boundsX + bounds.width));\n            }\n            if (this.arrowLocation.x + arrowPadding / 2 > tooltipRect.x + tooltipRect.width - this.rx) {\n                this.arrowLocation.x = tooltipRect.x + tooltipRect.width - this.rx - arrowPadding / 2;\n            }\n            if (this.arrowLocation.x - arrowPadding / 2 < tooltipRect.x + this.rx) {\n                this.arrowLocation.x = tooltipRect.x + this.rx + arrowPadding / 2;\n            }\n        }\n        else {\n            this.arrowLocation = new ChartLocation(axisRect.x, this.valueY);\n            let width = islabelInside ? axisRect.x : axisRect.x - (this.elementSize.width) - (padding * 2 + arrowPadding);\n            tooltipRect = new Rect(width, this.valueY - (this.elementSize.height / 2) - padding, this.elementSize.width + (padding * 2), this.elementSize.height + padding * 2);\n            if (axis.opposedPosition) {\n                tooltipRect.x = islabelInside ? axisRect.x - this.elementSize.width - arrowPadding : axisRect.x + arrowPadding;\n                if ((tooltipRect.x + tooltipRect.width) > this.chart.availableSize.width) {\n                    this.arrowLocation.x -= ((tooltipRect.x + tooltipRect.width) - this.chart.availableSize.width);\n                    tooltipRect.x -= ((tooltipRect.x + tooltipRect.width) - this.chart.availableSize.width);\n                }\n            }\n            else {\n                if (tooltipRect.x < 0) {\n                    this.arrowLocation.x -= tooltipRect.x;\n                    tooltipRect.x = 0;\n                }\n            }\n            if (tooltipRect.y < boundsY) {\n                tooltipRect.y = boundsY;\n            }\n            if (tooltipRect.y + tooltipRect.height >= boundsY + bounds.height) {\n                tooltipRect.y -= ((tooltipRect.y + tooltipRect.height) - (boundsY + bounds.height));\n            }\n            if (this.arrowLocation.y + arrowPadding / 2 > tooltipRect.y + tooltipRect.height - this.ry) {\n                this.arrowLocation.y = tooltipRect.y + tooltipRect.height - this.ry - arrowPadding / 2;\n            }\n            if (this.arrowLocation.y - arrowPadding / 2 < tooltipRect.y + this.ry) {\n                this.arrowLocation.y = tooltipRect.y + this.ry + arrowPadding / 2;\n            }\n        }\n        return tooltipRect;\n    }\n    stopAnimation() {\n        stopTimer(this.crosshairInterval);\n    }\n    /**\n     * Removes the crosshair on mouse leave.\n     * @return {void}\n     * @private\n     */\n    removeCrosshair(duration) {\n        let chart = this.chart;\n        let crosshair = document.getElementById(this.elementID + '_UserInteraction');\n        this.stopAnimation();\n        if (crosshair && crosshair.getAttribute('opacity') !== '0') {\n            this.crosshairInterval = setTimeout(() => {\n                new Animation({}).animate(crosshair, {\n                    duration: 200,\n                    progress: (args) => {\n                        // crosshair.removeAttribute('e-animate');\n                        crosshair.style.animation = '';\n                        crosshair.setAttribute('opacity', (1 - (args.timeStamp / args.duration)).toString());\n                    },\n                    end: (model) => {\n                        crosshair.setAttribute('opacity', '0');\n                        chart.startMove = false;\n                        if (chart.tooltipModule) {\n                            chart.tooltipModule.valueX = null;\n                            chart.tooltipModule.valueY = null;\n                        }\n                    }\n                });\n            }, duration);\n        }\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        /**\n         * Returns the module name\n         */\n        return 'Crosshair';\n    }\n    /**\n     * To destroy the crosshair.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy method performed here\n         */\n    }\n}\n","import { createElement, extend, Browser } from '@syncfusion/ej2-base';\nimport { Animation, compile as templateComplier } from '@syncfusion/ej2-base';\nimport { measureText, TextOption, Size, Rect, ChartLocation, textElement } from '../../common/utils/helper';\nimport { findDirection, stopTimer, removeElement } from '../../common/utils/helper';\nimport { ChartData } from '../../chart/utils/get-data';\nimport { tooltipRender } from '../../common/model/constants';\nimport { Theme } from '../../common/model/theme';\n/**\n * Tooltip Module used to render the tooltip for series.\n */\nexport class BaseTooltip extends ChartData {\n    /**\n     * Constructor for tooltip module.\n     * @private.\n     */\n    constructor(chart) {\n        super(chart);\n        this.padding = 5;\n        this.arrowPadding = 12;\n        this.rx = 2;\n        this.ry = 2;\n        this.markerPoint = [];\n        this.element = this.chart.element;\n        this.textStyle = chart.tooltip.textStyle;\n        this.control = chart;\n    }\n    getElement(id) {\n        return document.getElementById(id);\n    }\n    /**\n     * Renders the tooltip.\n     * @return {void}\n     * @private\n     */\n    getTooltipElement(isTooltip) {\n        this.inverted = this.chart.requireInvertedAxis;\n        this.updateTemplateFn(this.control);\n        this.formattedText = [];\n        this.header = (this.control.tooltip.header === null) ?\n            ((this.control.tooltip.shared) ? '<b>${point.x}</b>' : '<b>${series.name}</b>')\n            : (this.control.tooltip.header);\n        if (!isTooltip) {\n            let elementCollection = document.getElementsByClassName('ejSVGTooltip');\n            for (let i = elementCollection.length - 1; i >= 0; i--) {\n                if (!this.getElement(this.element.id).contains(elementCollection[i])) {\n                    elementCollection[i].remove();\n                }\n            }\n            return this.createElement(this.control);\n        }\n        return null;\n    }\n    createElement(chart) {\n        this.textElements = [];\n        let tooltipDiv = document.createElement('div');\n        tooltipDiv.id = this.element.id + '_tooltip';\n        tooltipDiv.className = 'ejSVGTooltip';\n        tooltipDiv.setAttribute('style', 'pointer-events:none; position:absolute;z-index: 1');\n        if (!chart.tooltip.template || chart.tooltip.shared) {\n            // SVG element for tooltip\n            let svgObject = chart.renderer.createSvg({ id: this.element.id + '_tooltip_svg' });\n            tooltipDiv.appendChild(svgObject);\n            // Group to hold text and path.\n            let groupElement = chart.renderer.createGroup({ id: this.element.id + '_tooltip_group' });\n            svgObject.appendChild(groupElement);\n            let pathElement = chart.renderer.drawPath({\n                'id': this.element.id + '_tooltip_path', 'stroke-width': chart.tooltip.border.width,\n                'fill': chart.tooltip.fill || chart.themeStyle.tooltipFill, 'opacity': chart.tooltip.opacity,\n                'stroke': chart.tooltip.border.color\n            });\n            groupElement.appendChild(pathElement);\n        }\n        return tooltipDiv;\n    }\n    pushData(data, isFirst, tooltipDiv, isChart) {\n        if (data.series.enableTooltip) {\n            if (isChart) {\n                this.currentPoints.push(data);\n            }\n            else {\n                this.currentPoints.push(data);\n            }\n            this.stopAnimation();\n            if (isFirst) {\n                document.getElementById(this.element.id + '_Secondary_Element').appendChild(tooltipDiv);\n            }\n            return true;\n        }\n        return false;\n    }\n    renderTooltip(data, areaRect, location, textCollection, isFirst, cartesain) {\n        if (this.triggerEvent(data, isFirst, textCollection)) {\n            this.renderText(isFirst, this.control);\n            this.removeHighlight(this.control);\n            this.highlightPoints(data);\n            return this.renderTooltipElement(this.control, data, areaRect, location, cartesain, isFirst);\n        }\n        else {\n            this.removeHighlight(this.control);\n            this.getElement(this.element.id + '_tooltip').remove();\n            return null;\n        }\n    }\n    renderTemplate(data, rect, location, point, isFirst) {\n        this.removeHighlight(this.control);\n        this.createTemplate(point, data, rect, location, this.getElement(this.element.id + '_tooltip'), isFirst);\n    }\n    renderTooltipElement(chart, pointData, areaRect, location, cartesain, isFirst) {\n        let tooltipDiv = this.getElement(this.element.id + '_tooltip');\n        let arrowLocation = new ChartLocation(0, 0);\n        let tipLocation = new ChartLocation(0, 0);\n        let textHeights;\n        let svgObject = this.getElement(this.element.id + '_tooltip_svg');\n        let groupElement = this.getElement(this.element.id + '_tooltip_group');\n        let pathElement = this.getElement(this.element.id + '_tooltip_path');\n        let rect;\n        let isTop = false;\n        let isLeft = false;\n        let isBottom = false;\n        let x = 0;\n        let y = 0;\n        this.tipRadius = 1;\n        let series = pointData.series;\n        if (this.header !== '') {\n            this.elementSize.height += 5;\n        }\n        if (this.currentPoints.length > 1) {\n            this.arrowPadding = 0;\n            rect = this.sharedTooltipLocation(areaRect, this.valueX, this.valueY);\n            isTop = true;\n        }\n        else {\n            this.arrowPadding = 12;\n            rect = this.seriesTooltipLocation(pointData, areaRect, location, arrowLocation, tipLocation);\n            if (!this.inverted || !series.isRectSeries) {\n                isTop = (rect.y < (location.y + (cartesain ? series.clipRect.y : 0)));\n                isBottom = !isTop;\n                y = (isTop ? 0 : this.arrowPadding);\n            }\n            else {\n                isLeft = (rect.x < (location.x + series.clipRect.x));\n                x = (isLeft ? 0 : this.arrowPadding);\n            }\n        }\n        if (this.header !== '') {\n            let headerSize = measureText(this.header, chart.tooltip.textStyle).height + (this.padding * 2) +\n                (isBottom ? this.arrowPadding : 0); //header padding;\n            let xLength = (this.padding * 3) + (!isLeft && !isTop && !isBottom ? this.arrowPadding : 0);\n            let direction = 'M ' + xLength + ' ' + headerSize +\n                'L ' + (rect.width + (!isLeft && !isTop && !isBottom ? this.arrowPadding : 0) - (this.padding * 2)) +\n                ' ' + headerSize;\n            let pathElement = this.chart.renderer.drawPath({\n                'id': this.element.id + '_header_path', 'stroke-width': 1,\n                'fill': null, 'opacity': 0.8, 'stroke': chart.themeStyle.tooltipHeaderLine, 'd': direction\n            });\n            groupElement.appendChild(pathElement);\n        }\n        let start = chart.tooltip.border.width / 2;\n        let pointRect = new Rect(start + x, start + y, rect.width - start, rect.height - start);\n        groupElement.setAttribute('opacity', '1');\n        if (chart.tooltip.enableAnimation && !chart.tooltip.shared && !isFirst && !this.isComplete) {\n            this.animateTooltipDiv(tooltipDiv, rect);\n        }\n        else {\n            this.updateDiv(tooltipDiv, rect.x, rect.y);\n        }\n        this.isComplete = false;\n        svgObject.setAttribute('height', (rect.height + chart.tooltip.border.width + (!((!this.inverted) ||\n            (!pointData.series.isRectSeries)) ? 0 : this.arrowPadding)).toString());\n        svgObject.setAttribute('width', (rect.width + chart.tooltip.border.width + (((!this.inverted) ||\n            (!pointData.series.isRectSeries)) ? 0 : this.arrowPadding)).toString());\n        svgObject.setAttribute('opacity', '1');\n        pathElement.setAttribute('d', findDirection(this.rx, this.ry, pointRect, arrowLocation, this.arrowPadding, isTop, isBottom, isLeft, tipLocation.x, tipLocation.y, this.tipRadius));\n        pathElement.setAttribute('filter', Browser.isIE ? '' : 'url(#chart_shadow_tooltip)');\n        let shadowElement = '<filter id=\"chart_shadow_tooltip\" height=\"130%\"><feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"3\"/>';\n        shadowElement += '<feOffset dx=\"3\" dy=\"3\" result=\"offsetblur\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"0.5\"/>';\n        shadowElement += '</feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge></filter>';\n        let defElement = chart.renderer.createDefs();\n        defElement.setAttribute('id', 'chart_tooltip_definition');\n        groupElement.appendChild(defElement);\n        defElement.innerHTML = shadowElement;\n        pathElement.setAttribute('stroke', chart.tooltip.border.color);\n        this.changeText(new ChartLocation(x, y), isBottom, !isLeft && !isTop && !isBottom, rect);\n        return new Side(isBottom, !isLeft && !isTop && !isBottom);\n    }\n    changeText(point, isBottom, isRight, rect) {\n        let element = document.getElementById(this.element.id + '_tooltip_text');\n        if (isBottom) {\n            element.setAttribute('transform', 'translate(0,' + this.arrowPadding + ')');\n        }\n        if (isRight) {\n            element.setAttribute('transform', 'translate(' + this.arrowPadding + ' 0)');\n        }\n    }\n    renderText(isRender, chart) {\n        let height = 0;\n        let width = 0; // Padding for text;\n        let subWidth = 0;\n        let size;\n        let lines;\n        let key = 'properties';\n        let font = extend({}, this.chart.tooltip.textStyle, null, true)[key];\n        let groupElement = this.getElement(this.element.id + '_tooltip_group');\n        let tspanElement;\n        let tspanStyle = '';\n        let line;\n        let tspanOption;\n        this.header = this.header.replace(/<b>/g, '').replace(/<\\/b>/g, '').trim();\n        let headerSpace = (this.header !== '' && this.formattedText[0] !== '') ? 5 : 0;\n        let isRow = true;\n        let isColumn = true;\n        this.markerPoint = [];\n        let markerSize = 10;\n        let spaceWidth = 4;\n        let dy = (22 / parseFloat(Theme.tooltipLabelFont.size)) * (parseFloat(font.size));\n        if (!isRender) {\n            removeElement(this.element.id + '_tooltip_text');\n            removeElement(this.element.id + '_header_path');\n            removeElement(this.element.id + '_tooltip_trackball_group');\n            removeElement('chart_tooltip_definition');\n        }\n        let options = new TextOption(this.element.id + '_tooltip_text', this.padding * 2, this.padding * 4, 'start', '');\n        let parentElement = textElement(options, font, null, groupElement, false);\n        for (let k = 0, pointsLength = this.formattedText.length; k < pointsLength; k++) {\n            let textCollection = this.formattedText[k].replace(/<(b|strong)>/g, '<b>')\n                .replace(/<\\/(b|strong)>/g, '</b>')\n                .split(/<br.*?>/g);\n            size = measureText(this.formattedText[k], font);\n            if ((k !== 0) || (this.header === '')) {\n                this.markerPoint.push((this.header !== '' ? (this.padding) : 0) + options.y + height);\n            }\n            for (let i = 0, len = textCollection.length; i < len; i++) {\n                lines = textCollection[i].replace(/<b>/g, '<br><b>').replace(/<\\/b>/g, '</b><br>').split('<br>');\n                subWidth = 0;\n                isColumn = true;\n                height += dy;\n                for (let k = 0, len = lines.length; k < len; k++) {\n                    line = lines[k];\n                    if (line.replace(/<b>/g, '').replace(/<\\/b>/g, '').trim() !== '') {\n                        subWidth += spaceWidth;\n                        if (isColumn && !isRow) {\n                            tspanOption = { x: (this.padding * 2) + (markerSize + 5), dy: dy + ((isColumn) ? headerSpace : 0), fill: '' };\n                            headerSpace = null;\n                        }\n                        else {\n                            if (isRow && isColumn) {\n                                tspanOption = { x: (this.header === '') ? ((this.padding * 2) + (markerSize + 5)) : (this.padding * 2) };\n                            }\n                            else {\n                                tspanOption = {};\n                            }\n                        }\n                        isColumn = false;\n                        tspanElement = chart.renderer.createTSpan(tspanOption, '');\n                        parentElement.appendChild(tspanElement);\n                        if (line.indexOf('<b>') > -1) {\n                            tspanStyle = 'font-weight:bold';\n                            font.fontWeight = 'bold';\n                            (tspanElement).setAttribute('fill', chart.tooltip.textStyle.color || chart.themeStyle.tooltipBoldLabel);\n                        }\n                        else {\n                            tspanStyle = '';\n                            font.fontWeight = 'Normal';\n                            (tspanElement).setAttribute('fill', chart.tooltip.textStyle.color || chart.themeStyle.tooltipLightLabel);\n                        }\n                        (tspanElement).textContent = line = line.replace(/<[a-zA-Z\\/](.|\\n)*?>/g, '');\n                        subWidth += measureText(line, font).width;\n                        if (tspanStyle !== '') {\n                            tspanElement.setAttribute('style', tspanStyle);\n                        }\n                        isRow = false;\n                    }\n                }\n                subWidth -= spaceWidth;\n                width = Math.max(width, subWidth);\n            }\n        }\n        height -= (this.header ? this.padding : 0);\n        this.elementSize = new Size(width + (width > 0 ? (2 * this.padding) : 0), height + (this.header !== '' ? this.padding : 0));\n        this.elementSize.width += (markerSize + 5); // marker size + marker Spacing\n        let element = (parentElement.childNodes[0]);\n        if (this.header !== '' && element) {\n            font.fontWeight = 'bold';\n            let width = (this.elementSize.width + (2 * this.padding)) / 2 - measureText(this.header, font).width / 2;\n            element.setAttribute('x', width.toString());\n        }\n    }\n    createTemplate(point, data, areaRect, location, parent, isFirst) {\n        let chart = this.control;\n        this.highlightPoints(data);\n        let argsData = { cancel: false, name: tooltipRender, point: data.point, series: data.series, };\n        this.chart.trigger(tooltipRender, argsData);\n        let firstElement = this.getElement(this.element.id + '_tooltip').firstChild;\n        if (firstElement) {\n            firstElement.remove();\n        }\n        if (!argsData.cancel) {\n            let templateElement = this.templateFn(point);\n            let elem = createElement('div');\n            while (templateElement.length > 0) {\n                elem.appendChild(templateElement[0]);\n            }\n            parent.appendChild(elem);\n            let rect = parent.getBoundingClientRect();\n            this.padding = 0;\n            this.elementSize = new Size(rect.width, rect.height);\n            let tooltipRect = this.seriesTooltipLocation(data, areaRect, location, new ChartLocation(0, 0), new ChartLocation(0, 0));\n            if (chart.tooltip.enableAnimation && !chart.tooltip.shared && !isFirst && !this.isComplete) {\n                this.animateTooltipDiv(parent, tooltipRect);\n            }\n            else {\n                this.updateDiv(parent, tooltipRect.x, tooltipRect.y);\n            }\n            this.isComplete = false;\n        }\n        else {\n            this.removeHighlight(chart);\n            this.getElement(this.element.id + '_tooltip').remove();\n        }\n    }\n    sharedTooltipLocation(bounds, x, y) {\n        let width = this.elementSize.width + (2 * this.padding);\n        let height = this.elementSize.height + (2 * this.padding);\n        let tooltipRect = new Rect(x + 2 * this.padding, y - height - this.padding, width, height);\n        if (tooltipRect.y < bounds.y) {\n            tooltipRect.y += (tooltipRect.height + 2 * this.padding);\n        }\n        if (tooltipRect.x + tooltipRect.width > bounds.x + bounds.width) {\n            tooltipRect.x -= (tooltipRect.width + 4 * this.padding);\n        }\n        return tooltipRect;\n    }\n    seriesTooltipLocation(pointData, bounds, symbolLocation, arrowLocation, tipLocation) {\n        let series = pointData.series;\n        let location = new ChartLocation(symbolLocation.x, symbolLocation.y);\n        if (series.type === 'RangeArea' && pointData.point.regions[0]) {\n            if (!series.chart.requireInvertedAxis) {\n                location.y = pointData.point.regions[0].y + pointData.point.regions[0].height / 2;\n            }\n            else {\n                location.x = pointData.point.regions[0].x + pointData.point.regions[0].width / 2;\n            }\n        }\n        let width = this.elementSize.width + (2 * this.padding);\n        let height = this.elementSize.height + (2 * this.padding);\n        let markerHeight = 0;\n        if (!series.isRectSeries) {\n            let chartSeries = pointData.series;\n            markerHeight = (this.chart.tooltip.shared || chartSeries.marker.visible || series.type === 'Scatter'\n                || chartSeries.drawType === 'Scatter') ? ((chartSeries.marker.height + 2) / 2 + (2 * chartSeries.marker.border.width)) : 0;\n        }\n        let clipX = this.chart.chartAreaType === 'PolarRadar' ? 0 : series.clipRect.x;\n        let clipY = this.chart.chartAreaType === 'PolarRadar' ? 0 : series.clipRect.y;\n        let boundsX = bounds.x;\n        let boundsY = bounds.y;\n        if (!this.inverted || !series.isRectSeries) {\n            location.y = (series.type === 'Waterfall' && pointData.point.y < 0) ?\n                location.y - pointData.point.regions[0].height : location.y;\n            location = new ChartLocation(location.x + clipX - this.elementSize.width / 2 - this.padding, location.y + clipY - this.elementSize.height - (2 * this.padding) - this.arrowPadding - markerHeight);\n            arrowLocation.x = tipLocation.x = width / 2;\n            if (location.y < boundsY || (series.isRectSeries && pointData.point.y < 0 && series.type !== 'Waterfall')) {\n                location.y = (symbolLocation.y < 0 ? 0 : symbolLocation.y) + clipY + markerHeight;\n            }\n            if (location.y + height + this.arrowPadding > boundsY + bounds.height) {\n                location.y = (symbolLocation.y > bounds.height ? bounds.height : symbolLocation.y)\n                    + clipY - this.elementSize.height - (2 * this.padding) - this.arrowPadding - markerHeight;\n            }\n            tipLocation.x = width / 2;\n            if (location.x < boundsX) {\n                arrowLocation.x -= (boundsX - location.x);\n                tipLocation.x -= (boundsX - location.x);\n                location.x = boundsX;\n            }\n            if (location.x + width > boundsX + bounds.width) {\n                arrowLocation.x += ((location.x + width) - (boundsX + bounds.width));\n                tipLocation.x += ((location.x + width) - (boundsX + bounds.width));\n                location.x -= ((location.x + width) - (boundsX + bounds.width));\n            }\n            if (arrowLocation.x + this.arrowPadding / 2 > width - this.rx) {\n                arrowLocation.x = width - this.rx - this.arrowPadding / 2;\n                tipLocation.x = width;\n                this.tipRadius = 0;\n            }\n            if (arrowLocation.x - this.arrowPadding / 2 < this.rx) {\n                arrowLocation.x = this.rx + this.arrowPadding / 2;\n                tipLocation.x = 0;\n                this.tipRadius = 0;\n            }\n        }\n        else {\n            location.x = (series.type === 'Waterfall' && pointData.point.y < 0) ?\n                location.x + pointData.point.regions[0].width : location.x;\n            location = new ChartLocation(location.x + clipX + markerHeight, location.y + clipY - this.elementSize.height / 2 - (this.padding));\n            arrowLocation.y = tipLocation.y = height / 2;\n            if ((location.x + width + this.arrowPadding > boundsX + bounds.width) || (series.isRectSeries &&\n                pointData.point.y < 0 && series.type !== 'Waterfall')) {\n                location.x = (symbolLocation.x > bounds.width ? bounds.width : symbolLocation.x)\n                    + clipX - markerHeight - (width + this.arrowPadding);\n            }\n            if (location.x < boundsX) {\n                location.x = (symbolLocation.x < 0 ? 0 : symbolLocation.x) + clipX + markerHeight;\n            }\n            if (location.y <= boundsY) {\n                arrowLocation.y -= (boundsY - location.y);\n                tipLocation.y -= (boundsY - location.y);\n                location.y = boundsY;\n            }\n            if (location.y + height >= boundsY + bounds.height) {\n                arrowLocation.y += ((location.y + height) - (boundsY + bounds.height));\n                tipLocation.y += ((location.y + height) - (boundsY + bounds.height));\n                location.y -= ((location.y + height) - (boundsY + bounds.height));\n            }\n            if (arrowLocation.y + this.arrowPadding / 2 > height - this.ry) {\n                arrowLocation.y = height - this.ry - this.arrowPadding / 2;\n                tipLocation.y = height;\n                this.tipRadius = 0;\n            }\n            if (arrowLocation.y - this.arrowPadding / 2 < this.ry) {\n                arrowLocation.y = this.ry + this.arrowPadding / 2;\n                tipLocation.y = 0;\n                this.tipRadius = 0;\n            }\n        }\n        return new Rect(location.x, location.y, width, height);\n    }\n    /*\n   * @hidden\n   */\n    progressAnimation(element, tooltipGroup, series, opacity, rectOpacity, timeStamp, isRect, shared) {\n        tooltipGroup.style.animation = '';\n        tooltipGroup.setAttribute('opacity', (opacity - timeStamp).toString());\n        if (element && isRect && !shared) {\n            element.setAttribute('opacity', (rectOpacity + (rectOpacity * timeStamp)).toString());\n        }\n    }\n    /*\n     * @hidden\n     */\n    endAnimation(element, tooltipGroup, series, shared) {\n        this.currentPoints = [];\n        if (element && series.isRectSeries) {\n            element.setAttribute('opacity', series.opacity.toString());\n        }\n        this.removeHighlight(this.control);\n        tooltipGroup.setAttribute('opacity', '0');\n        if (this.control.tooltip.template && !shared) {\n            tooltipGroup.style.display = 'none';\n        }\n        this.isComplete = true;\n        this.control.trigger('animationComplete', {});\n    }\n    removeHighlight(chart) {\n        let item;\n        let series;\n        for (let i = 0, len = this.previousPoints.length; i < len; i++) {\n            item = this.previousPoints[i];\n            if (item.series.isRectSeries) {\n                if (item.series.visible) {\n                    this.highlightPoint(item.series, item.point.index, false);\n                }\n                continue;\n            }\n            series = item.series;\n            if (!series.marker.visible && item.series.type !== 'Scatter' && item.series.type !== 'Bubble') {\n                this.previousPoints.shift();\n                len -= 1;\n            }\n        }\n    }\n    highlightPoint(series, pointIndex, highlight) {\n        let element = this.getElement(this.element.id + '_Series_' + series.index + '_Point_' + pointIndex);\n        if (element) {\n            element.setAttribute('opacity', (highlight ? series.opacity / 2 : series.opacity).toString());\n        }\n    }\n    highlightPoints(item) {\n        if (item.series.isRectSeries) {\n            this.highlightPoint(item.series, item.point.index, true);\n            return null;\n        }\n    }\n    animateTooltipDiv(tooltipDiv, rect) {\n        let x = parseFloat(tooltipDiv.style.left);\n        let y = parseFloat(tooltipDiv.style.top);\n        let currenDiff;\n        new Animation({}).animate(tooltipDiv, {\n            duration: 300,\n            progress: (args) => {\n                currenDiff = (args.timeStamp / args.duration);\n                tooltipDiv.style.animation = null;\n                tooltipDiv.style.left = (x + currenDiff * (rect.x - x)) + 'px';\n                tooltipDiv.style.top = (y + currenDiff * (rect.y - y)) + 'px';\n            },\n            end: (model) => {\n                this.updateDiv(tooltipDiv, rect.x, rect.y);\n            }\n        });\n    }\n    updateDiv(tooltipDiv, x, y) {\n        tooltipDiv.style.left = x + 'px';\n        tooltipDiv.style.top = y + 'px';\n    }\n    triggerEvent(point, isFirst, textCollection, firstText = true) {\n        let argsData = {\n            cancel: false, name: tooltipRender, text: textCollection,\n            point: point.point, series: point.series, textStyle: this.textStyle\n        };\n        this.chart.trigger(tooltipRender, argsData);\n        if (!argsData.cancel) {\n            if (point.series.type === 'BoxAndWhisker') {\n                this.removeText();\n                isFirst = true;\n            }\n            this.formattedText = this.formattedText.concat(argsData.text);\n        }\n        return !argsData.cancel;\n    }\n    removeText() {\n        this.textElements = [];\n        let element = this.getElement(this.element.id + '_tooltip_group');\n        if (element.childNodes.length > 0) {\n            while (element.lastChild && element.childNodes.length !== 1) {\n                element.removeChild(element.lastChild);\n            }\n        }\n    }\n    updateTemplateFn(chart) {\n        if (chart.tooltip.template) {\n            let e;\n            try {\n                if (document.querySelectorAll(chart.tooltip.template).length) {\n                    this.templateFn = templateComplier(document.querySelector(chart.tooltip.template).innerHTML.trim());\n                }\n            }\n            catch (e) {\n                this.templateFn = templateComplier(chart.tooltip.template);\n            }\n        }\n    }\n    stopAnimation() {\n        stopTimer(this.toolTipInterval);\n    }\n}\nexport class Side {\n    constructor(bottom, right) {\n        this.isRight = right;\n        this.isBottom = bottom;\n    }\n}\n","import { extend, Browser } from '@syncfusion/ej2-base';\nimport { Animation } from '@syncfusion/ej2-base';\nimport { Size, PointData, ChartLocation } from '../../common/utils/helper';\nimport { drawSymbol, PathOption, valueToCoefficient, removeElement, valueToPolarCoefficient, withInBounds } from '../../common/utils/helper';\nimport { BaseTooltip } from '../../common/user-interaction/tooltip';\n/**\n * `Tooltip` module is used to render the tooltip for chart series.\n */\nexport class Tooltip extends BaseTooltip {\n    /**\n     * Constructor for tooltip module.\n     * @private.\n     */\n    constructor(chart) {\n        super(chart);\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    addEventListener() {\n        if (this.chart.isDestroyed) {\n            return;\n        }\n        let cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        this.chart.on(cancelEvent, this.mouseLeaveHandler, this);\n        this.chart.on('tapHold', this.longPress, this);\n        this.chart.on(Browser.touchMoveEvent, this.mouseMoveHandler, this);\n        this.chart.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    }\n    mouseUpHandler() {\n        let chart = this.control;\n        if (chart.isTouch && !this.isSelected(chart) &&\n            ((withInBounds(chart.mouseX, chart.mouseY, chart.chartAxisLayoutPanel.seriesClipRect) && chart.tooltip.shared)\n                || !chart.tooltip.shared)) {\n            if (!chart.crosshair.enable) {\n                this.tooltip();\n                this.removeTooltip(2000);\n            }\n            else if (chart.startMove) {\n                this.removeTooltip(2000);\n            }\n        }\n    }\n    mouseLeaveHandler() {\n        this.removeTooltip(1000);\n    }\n    mouseMoveHandler() {\n        let chart = this.chart;\n        // Tooltip for chart series.\n        if (!chart.disableTrackTooltip && !this.isSelected(chart)) {\n            if (!chart.tooltip.shared && (!chart.isTouch || (chart.startMove))) {\n                this.tooltip();\n            }\n            if (withInBounds(chart.mouseX, chart.mouseY, chart.chartAxisLayoutPanel.seriesClipRect)) {\n                if (chart.tooltip.shared && (!chart.isTouch || (chart.startMove))) {\n                    this.tooltip();\n                }\n            }\n            else {\n                if (chart.tooltip.shared) {\n                    this.removeTooltip(1000);\n                }\n            }\n        }\n    }\n    /**\n     * Handles the long press on chart.\n     * @return {boolean}\n     * @private\n     */\n    longPress() {\n        let chart = this.chart;\n        if (chart.crosshair.enable && withInBounds(chart.mouseX, chart.mouseY, chart.chartAxisLayoutPanel.seriesClipRect)) {\n            this.tooltip();\n        }\n        return false;\n    }\n    /**\n     * Renders the tooltip.\n     * @return {void}\n     */\n    tooltip() {\n        let isTooltip = this.getElement(this.element.id + '_tooltip');\n        let tooltipDiv = this.getTooltipElement(isTooltip);\n        if (!this.chart.tooltip.shared) {\n            this.renderSeriesTooltip(this.chart, !isTooltip, tooltipDiv);\n        }\n        else {\n            this.renderGroupedTooltip(this.chart, !isTooltip, tooltipDiv);\n        }\n    }\n    findHeader(data) {\n        this.header = this.parseTemplate(data.point, data.series, this.header, data.series.xAxis, data.series.yAxis);\n        if (this.header.replace(/<b>/g, '').replace(/<\\/b>/g, '').trim() !== '') {\n            this.formattedText = this.formattedText.concat(this.header);\n        }\n    }\n    renderSeriesTooltip(chart, isFirst, tooltipDiv) {\n        let data = this.getData();\n        let markerSide;\n        data.lierIndex = this.lierIndex;\n        let rect = chart.chartAxisLayoutPanel.seriesClipRect;\n        this.currentPoints = [];\n        if (this.findData(data, this.previousPoints[0])) {\n            if (this.pushData(data, isFirst, tooltipDiv, true)) {\n                let text = this.getTooltipText(data);\n                if (!chart.tooltip.template) {\n                    if (this.header !== '') {\n                        this.findHeader(data);\n                    }\n                    markerSide = this.renderTooltip(data, rect, this.getSymbolLocation(data), text, isFirst, chart.chartAreaType === 'Cartesian');\n                    if (markerSide) {\n                        this.drawMarker(markerSide.isBottom, markerSide.isRight, 10);\n                    }\n                }\n                else {\n                    this.renderTemplate(data, rect, this.getSymbolLocation(data), this.getTemplateText(data), isFirst);\n                }\n                this.isRemove = true;\n            }\n            this.previousPoints = extend([], this.currentPoints, null, true);\n        }\n        else {\n            if (!data.point && this.isRemove) {\n                this.removeTooltip(1000);\n                this.isRemove = false;\n            }\n            else {\n                for (let series of chart.visibleSeries) {\n                    if (series.visible) {\n                        data = this.getClosestX(chart, series) || data;\n                    }\n                }\n            }\n        }\n        if (data && data.point) {\n            this.findMouseValue(data, chart);\n        }\n    }\n    findData(data, previous) {\n        return data.point && ((!previous || (previous.point !== data.point)) ||\n            (previous && previous.lierIndex > 3 && previous.lierIndex !== this.lierIndex));\n    }\n    getSymbolLocation(data) {\n        return data.series.type === 'BoxAndWhisker' ?\n            this.getBoxLocation(data) : data.point.symbolLocations[0];\n    }\n    getTooltipText(pointData) {\n        let series = pointData.series;\n        let text;\n        return this.parseTemplate(pointData.point, series, this.getFormat(this.chart, series), series.xAxis, series.yAxis);\n    }\n    getTemplateText(data) {\n        let point = extend({}, data.point);\n        point.x = this.formatPointValue(data.point, data.series.xAxis, 'x', true, false);\n        if ((data.series.seriesType === 'XY')) {\n            point.y = this.formatPointValue(data.point, data.series.yAxis, 'y', false, true);\n        }\n        else {\n            point.low = this.formatPointValue(data.point, data.series.yAxis, 'low', false, true);\n            point.high = this.formatPointValue(data.point, data.series.yAxis, 'high', false, true);\n        }\n        return point;\n    }\n    findMouseValue(data, chart) {\n        if (!chart.requireInvertedAxis) {\n            if (chart.chartAreaType === 'PolarRadar') {\n                this.valueX = valueToPolarCoefficient(data.point.xValue, data.series.xAxis) * data.series.xAxis.rect.width\n                    + data.series.xAxis.rect.x;\n            }\n            else {\n                this.valueX = valueToCoefficient(data.point.xValue, data.series.xAxis) * data.series.xAxis.rect.width\n                    + data.series.xAxis.rect.x;\n            }\n            this.valueY = chart.mouseY;\n        }\n        else {\n            this.valueY = (1 - valueToCoefficient(data.point.xValue, data.series.xAxis)) * data.series.xAxis.rect.height\n                + data.series.xAxis.rect.y;\n            this.valueX = chart.mouseX;\n        }\n    }\n    renderGroupedTooltip(chart, isFirst, tooltipDiv) {\n        let data;\n        let height = 0;\n        let width = 0;\n        let pointData = chart.chartAreaType === 'PolarRadar' ? this.getData() : null;\n        this.stopAnimation();\n        this.removeHighlight(chart);\n        this.currentPoints = [];\n        let extraPoints = [];\n        let markerSide;\n        if (isFirst) {\n            document.getElementById(this.element.id + '_Secondary_Element').appendChild(tooltipDiv);\n        }\n        this.removeText();\n        for (let series of chart.visibleSeries) {\n            if (!series.enableTooltip) {\n                continue;\n            }\n            if (chart.chartAreaType === 'Cartesian' && series.visible) {\n                data = this.getClosestX(chart, series);\n            }\n            else if (chart.chartAreaType === 'PolarRadar' && series.visible && pointData.point !== null) {\n                data = new PointData(series.points[pointData.point.index], series);\n            }\n            if (data && this.header !== '' && this.currentPoints.length === 0) {\n                this.findHeader(data);\n            }\n            if (data && this.triggerEvent(data, isFirst, this.getTooltipText(data))) {\n                if (series.category === 'Series') {\n                    this.highlightPoints(data);\n                }\n                this.findMouseValue(data, chart);\n                this.currentPoints.push(data);\n                data = null;\n            }\n            else if (data) {\n                extraPoints.push(data);\n            }\n        }\n        if (this.currentPoints.length > 0) {\n            this.renderText(isFirst, chart);\n            markerSide = this.renderTooltipElement(chart, this.currentPoints[0], chart.chartAxisLayoutPanel.seriesClipRect, this.getSymbolLocation(this.currentPoints[0]), chart.chartAreaType === 'Cartesian', isFirst);\n            this.drawMarker(markerSide.isBottom, markerSide.isRight, 10);\n        }\n        else {\n            this.getElement(this.element.id + '_tooltip_path').setAttribute('d', '');\n        }\n        this.currentPoints = this.currentPoints.concat(extraPoints);\n        this.previousPoints = extend([], this.currentPoints, null, true);\n    }\n    getBoxLocation(data) {\n        let location;\n        location = this.lierIndex > 3 ? data.point.symbolLocations[this.lierIndex - 4] :\n            {\n                x: data.point.regions[0].x + (data.point.regions[0].width / 2),\n                y: data.point.regions[0].y + (data.point.regions[0].height / 2)\n            };\n        return location;\n    }\n    drawMarker(isBottom, isRight, size) {\n        let shapeOption;\n        let count = 0;\n        let series;\n        let markerGroup = this.chart.renderer.createGroup({ id: this.element.id + '_tooltip_trackball_group' });\n        let groupElement = this.getElement(this.element.id + '_tooltip_group');\n        let x = (this.padding * 2) + (size / 2) + (isRight ? this.arrowPadding : 0);\n        for (let data of this.currentPoints) {\n            series = data.series;\n            if (series.visible && series.enableTooltip && data.point.visible) {\n                shapeOption = new PathOption(this.element.id + '_Tooltip_Trackball_' + series.index, this.findColor(data, series) || series.interior, 1, '#cccccc', series.opacity, null);\n                markerGroup.appendChild(drawSymbol(new ChartLocation(x, this.markerPoint[count] - this.padding + (isBottom ? this.arrowPadding : 0)), data.point.marker.shape || series.marker.shape, new Size(size, size), series.marker.imageUrl, shapeOption, null));\n                count++;\n            }\n        }\n        groupElement.appendChild(markerGroup);\n    }\n    findColor(data, series) {\n        if (series.isRectSeries) {\n            return data.point.color;\n        }\n        else {\n            return (data.point.color && data.point.color !== '#ffffff' ? data.point.color : data.point.interior) || series.marker.fill;\n        }\n    }\n    parseTemplate(point, series, format, xAxis, yAxis) {\n        let val;\n        let textValue;\n        let xFormat;\n        let customLabelFormat;\n        let chart = this.chart;\n        for (let dataValue of Object.keys(point)) {\n            val = new RegExp('${point' + '.' + dataValue + '}', 'gm');\n            format = format.replace(val.source, this.formatPointValue(point, val.source === '${point.x}' ? xAxis : yAxis, dataValue, val.source === '${point.x}', (val.source === '${point.high}' ||\n                val.source === '${point.open}' ||\n                val.source === '${point.close}' ||\n                val.source === '${point.low}' ||\n                val.source === '${point.y}' ||\n                val.source === '${point.minimum}' ||\n                val.source === '${point.maximum}' ||\n                val.source === '${point.outliers}' ||\n                val.source === '${point.upperQuartile}' ||\n                val.source === '${point.lowerQuartile}' ||\n                val.source === '${point.median}')));\n        }\n        for (let dataValue of Object.keys(Object.getPrototypeOf(series))) {\n            val = new RegExp('${series' + '.' + dataValue + '}', 'gm');\n            textValue = series[dataValue];\n            format = format.replace(val.source, textValue);\n        }\n        return format;\n    }\n    formatPointValue(point, axis, dataValue, isXPoint, isYPoint) {\n        let textValue;\n        let customLabelFormat;\n        let value;\n        if (axis.valueType !== 'Category' && isXPoint) {\n            customLabelFormat = axis.labelFormat && axis.labelFormat.match('{value}') !== null;\n            textValue = customLabelFormat ? axis.labelFormat.replace('{value}', axis.format(point[dataValue])) :\n                axis.format(point[dataValue]);\n        }\n        else if (isYPoint) {\n            customLabelFormat = axis.labelFormat && axis.labelFormat.match('{value}') !== null;\n            value = dataValue === 'outliers' ? axis.format(point[dataValue][this.lierIndex - 4]) :\n                axis.format(point[dataValue]);\n            textValue = customLabelFormat ? axis.labelFormat.replace('{value}', value) : value;\n        }\n        else {\n            textValue = point[dataValue];\n        }\n        return textValue;\n    }\n    getFormat(chart, series) {\n        if (chart.tooltip.format) {\n            if (series.seriesType === 'XY' && series.category === 'Indicator') {\n                return this.getIndicatorTooltipFormat(series, chart, chart.tooltip.format);\n            }\n            return chart.tooltip.format;\n        }\n        let format = !chart.tooltip.shared ? '${point.x}' : '${series.name}';\n        switch (series.seriesType) {\n            case 'XY':\n                if (series.category === 'Indicator') {\n                    this.getIndicatorTooltipFormat(series, chart, chart.tooltip.format);\n                }\n                return format + ' : ' + ((series.type === 'Bubble') ? '<b>${point.y}</b>  Size : <b>${point.size}</b>'\n                    : '<b>${point.y}</b>');\n            case 'HighLow':\n                return format + ('<br/>High : <b>${point.high}</b><br/>Low : <b>${point.low}</b>');\n            case 'HighLowOpenClose':\n                return format + ('<br/>High : <b>${point.high}</b><br/>Low : <b>${point.low}</b><br/>' +\n                    'Open : <b>${point.open}</b><br/>Close : <b>${point.close}</b>');\n            case 'BoxPlot': {\n                return format + '<br/>' + (this.lierIndex > 3 ? 'Outliers : <b>${point.outliers}</b>' :\n                    'Maximum : <b>${point.maximum}</b><br/>Q1 : <b>${point.upperQuartile}</b><br/>' +\n                        'Median : <b>${point.median}</b><br/>Q3 : <b>${point.lowerQuartile}</b><br/>Minimum : <b>${point.minimum}</b>');\n            }\n        }\n        return '';\n    }\n    getIndicatorTooltipFormat(series, chart, format) {\n        let toolTip;\n        let points = [];\n        if (series.seriesType === 'XY') {\n            toolTip = series.name + ' : ${point.y}';\n        }\n        else {\n            toolTip = format;\n        }\n        return toolTip;\n    }\n    /*\n   * @hidden\n   */\n    removeHighlightedMarker(data) {\n        for (let item of data) {\n            removeElement(this.element.id + '_Series_' + item.series.index +\n                '_Point_' + item.point.index + '_Trackball');\n        }\n        if (this.chart.markerRender) {\n            this.chart.markerRender.removeHighlightedMarker();\n        }\n        this.previousPoints = [];\n    }\n    /**\n     * Removes the tooltip on mouse leave.\n     * @return {void}\n     * @private\n     */\n    removeTooltip(duration) {\n        let chart = this.chart;\n        let tooltipElement = this.getElement(this.element.id + '_tooltip');\n        this.stopAnimation();\n        if (tooltipElement && this.previousPoints.length > 0) {\n            let data = this.previousPoints;\n            this.toolTipInterval = setTimeout(() => {\n                let rectOpacity;\n                let tooltipGroup = tooltipElement.firstChild;\n                let series = data[0].series;\n                let element = this.getElement(chart.element.id + '_Series_' + data[0].series.index\n                    + '_Point_' + data[0].point.index);\n                let opacity = parseFloat(tooltipGroup.getAttribute('opacity')) || 1;\n                if (element && series.isRectSeries && !chart.tooltip.shared) {\n                    rectOpacity = parseFloat(element.getAttribute('opacity'));\n                }\n                new Animation({}).animate(tooltipGroup, {\n                    duration: 200,\n                    progress: (args) => {\n                        //  tooltipGroup.removeAttribute('e-animate');\n                        this.progressAnimation(element, tooltipGroup, series, opacity, rectOpacity, (args.timeStamp / args.duration), series.isRectSeries, !chart.tooltip.shared);\n                    },\n                    end: (model) => {\n                        this.valueX = null;\n                        this.valueY = null;\n                        this.endAnimation(element, tooltipGroup, series, chart.tooltip.shared);\n                        this.removeHighlightedMarker(data);\n                    }\n                });\n            }, duration);\n        }\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        /**\n         * Returns the module name\n         */\n        return 'Tooltip';\n    }\n    /**\n     * To destroy the tooltip.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy method performed here\n         */\n    }\n}\n","import { EventHandler } from '@syncfusion/ej2-base';\nimport { remove } from '@syncfusion/ej2-base';\nimport { removeElement, measureText, RectOption, Rect, PolygonOption, PathOption, createTooltip, minMax } from '../../common/utils/helper';\nimport { textElement, TextOption } from '../../common/utils/helper';\n/**\n * Zooming Toolkit created here\n * @private\n */\nexport class Toolkit {\n    /** @private */\n    constructor(chart) {\n        this.chart = chart;\n        this.elementId = chart.element.id;\n        this.selectionColor = '#ff4081';\n        this.fillColor = '#737373';\n    }\n    /**\n     * To create the pan button.\n     * @return {void}\n     * @private\n     */\n    createPanButton(childElement, parentElement, chart) {\n        let render = this.chart.renderer;\n        let fillColor = this.chart.zoomModule.isPanning ? this.selectionColor : this.fillColor;\n        let direction = 'M5,3h2.3L7.275,5.875h1.4L8.65,3H11L8,0L5,3z M3,11V8.7l2.875,0.025v-1.4L3,7.35V5L0,8L3,';\n        direction += '11z M11,13H8.7l0.025-2.875h-1.4L7.35,13H5l3,3L11,13z M13,5v2.3l-2.875-0.025v1.4L13,8.65V11l3-3L13,5z';\n        childElement.id = this.elementId + '_Zooming_Pan';\n        childElement.setAttribute('aria-label', this.chart.getLocalizedLabel('Pan'));\n        this.panElements = childElement;\n        childElement.appendChild(render.drawRectangle(new RectOption(this.elementId + '_Zooming_Pan_1', 'transparent', {}, 1, new Rect(0, 0, 16, 16))));\n        childElement.appendChild(render.drawPath(new PathOption(this.elementId + '_Zooming_Pan_2', fillColor, null, null, 1, null, direction)));\n        parentElement.appendChild(childElement);\n        this.wireEvents(childElement, this.pan);\n    }\n    /**\n     * To create the zoom button.\n     * @return {void}\n     * @private\n     */\n    createZoomButton(childElement, parentElement, chart) {\n        let render = this.chart.renderer;\n        let fillColor = this.chart.zoomModule.isPanning ? this.fillColor : this.selectionColor;\n        let direction = 'M0.001,14.629L1.372,16l4.571-4.571v-0.685l0.228-0.274c1.051,0.868,2.423,1.417,3.885,1.417c3.291,0,';\n        direction += '5.943-2.651,5.943-5.943S13.395,0,10.103,0S4.16,2.651,4.16,5.943c0,1.508,0.503,2.834,1.417,3.885l-0.274,0.228H4.571';\n        direction = direction + 'L0.001,14.629L0.001,14.629z M5.943,5.943c0-2.285,1.828-4.114,4.114-4.114s4.114,1.828,4.114,';\n        childElement.id = this.elementId + '_Zooming_Zoom';\n        childElement.setAttribute('aria-label', this.chart.getLocalizedLabel('Zoom'));\n        this.zoomElements = childElement;\n        childElement.appendChild(render.drawRectangle(new RectOption(this.elementId + '_Zooming_Zoom_1', 'transparent', {}, 1, new Rect(0, 0, 16, 16))));\n        childElement.appendChild(render.drawPath(new PathOption(this.elementId + '_Zooming_Zoom_3', fillColor, null, null, 1, null, direction + '4.114s-1.828,4.114-4.114,4.114S5.943,8.229,5.943,5.943z')));\n        parentElement.appendChild(childElement);\n        this.wireEvents(childElement, this.zoom);\n    }\n    /**\n     * To create the ZoomIn button.\n     * @return {void}\n     * @private\n     */\n    createZoomInButton(childElement, parentElement, chart) {\n        let render = this.chart.renderer;\n        let fillColor = this.fillColor;\n        let direction = 'M10.103,0C6.812,0,4.16,2.651,4.16,5.943c0,1.509,0.503,2.834,1.417,3.885l-0.274,0.229H4.571L0,';\n        direction += '14.628l0,0L1.372,16l4.571-4.572v-0.685l0.228-0.275c1.052,0.868,2.423,1.417,3.885,1.417c3.291,0,5.943-2.651,';\n        direction += '5.943-5.943C16,2.651,13.395,0,10.103,0z M10.058,10.058c-2.286,0-4.114-1.828-4.114-4.114c0-2.286,1.828-4.114,';\n        childElement.id = this.elementId + '_Zooming_ZoomIn';\n        childElement.setAttribute('aria-label', this.chart.getLocalizedLabel('ZoomIn'));\n        let polygonDirection = '12.749,5.466 10.749,5.466 10.749,3.466 9.749,3.466 9.749,5.466 7.749,5.466 7.749,6.466';\n        childElement.appendChild(render.drawRectangle(new RectOption(this.elementId + '_Zooming_ZoomIn_1', 'transparent', {}, 1, new Rect(0, 0, 16, 16))));\n        childElement.appendChild(render.drawPath(new PathOption(this.elementId + '_Zooming_ZoomIn_2', fillColor, null, null, 1, null, direction + '4.114-4.114c2.286,0,4.114,1.828,4.114,4.114C14.172,8.229,12.344,10.058,10.058,10.058z')));\n        childElement.appendChild(render.drawPolygon(new PolygonOption(this.elementId + '_Zooming_ZoomIn_3', polygonDirection + ' 9.749,6.466 9.749,8.466 10.749,8.466 10.749,6.466 12.749,6.466', fillColor)));\n        this.zoomInElements = childElement;\n        this.elementOpacity = chart.zoomModule.isPanning ? '0.2' : '1';\n        childElement.setAttribute('opacity', this.elementOpacity);\n        parentElement.appendChild(childElement);\n        this.wireEvents(childElement, this.zoomIn);\n    }\n    /**\n     * To create the ZoomOut button.\n     * @return {void}\n     * @private\n     */\n    createZoomOutButton(childElement, parentElement, chart) {\n        let render = this.chart.renderer;\n        let fillColor = this.fillColor;\n        let direction = 'M0,14.622L1.378,16l4.533-4.533v-0.711l0.266-0.266c1.022,0.889,2.4,1.422,3.866,';\n        direction += '1.422c3.289,0,5.955-2.666,5.955-5.955S13.333,0,10.044,0S4.089,2.667,4.134,5.911c0,1.466,0.533,2.844,';\n        direction += '1.422,3.866l-0.266,0.266H4.578L0,14.622L0,14.622z M5.911,5.911c0-2.311,1.822-4.133,4.133-4.133s4.133,1.822,4.133,';\n        childElement.id = this.elementId + '_Zooming_ZoomOut';\n        childElement.setAttribute('aria-label', this.chart.getLocalizedLabel('ZoomOut'));\n        childElement.appendChild(render.drawRectangle(new RectOption(this.elementId + '_Zooming_ZoomOut_1', 'transparent', {}, 1, new Rect(0, 0, 16, 16))));\n        childElement.appendChild(render.drawPath(new PathOption(this.elementId + '_Zooming_ZoomOut_2', fillColor, null, null, 1, null, direction + '4.133s-1.866,4.133-4.133,4.133S5.911,8.222,5.911,5.911z M12.567,6.466h-5v-1h5V6.466z')));\n        this.zoomOutElements = childElement;\n        this.elementOpacity = chart.zoomModule.isPanning ? '0.2' : '1';\n        childElement.setAttribute('opacity', this.elementOpacity);\n        parentElement.appendChild(childElement);\n        this.wireEvents(childElement, this.zoomOut);\n    }\n    /**\n     * To create the Reset button.\n     * @return {void}\n     * @private\n     */\n    createResetButton(childElement, parentElement, chart, isDevice) {\n        let render = this.chart.renderer;\n        let fillColor = this.fillColor;\n        let size;\n        let direction = 'M12.364,8h-2.182l2.909,3.25L16,8h-2.182c0-3.575-2.618-6.5-5.818-6.5c-1.128,0-2.218,0.366-3.091,';\n        direction += '1.016l1.055,1.178C6.581,3.328,7.272,3.125,8,3.125C10.4,3.125,12.363,5.319,12.364,8L12.364,8z M11.091,';\n        direction += '13.484l-1.055-1.178C9.419,12.672,8.728,12.875,8,12.875c-2.4,0-4.364-2.194-4.364-4.875h2.182L2.909,4.75L0,8h2.182c0,';\n        childElement.id = this.elementId + '_Zooming_Reset';\n        childElement.setAttribute('aria-label', this.chart.getLocalizedLabel('Reset'));\n        if (!isDevice) {\n            childElement.appendChild(render.drawRectangle(new RectOption(this.elementId + '_Zooming_Reset_1', 'transparent', {}, 1, new Rect(0, 0, 16, 16))));\n            childElement.appendChild(render.drawPath(new PathOption(this.elementId + '_Zooming_Reset_2', fillColor, null, null, 1, null, direction + '3.575,2.618,6.5,5.818,6.5C9.128,14.5,10.219,14.134,11.091,13.484L11.091,13.484z')));\n        }\n        else {\n            size = measureText(this.chart.getLocalizedLabel('ResetZoom'), { size: '12px' });\n            childElement.appendChild(render.drawRectangle(new RectOption(this.elementId + '_Zooming_Reset_1', 'transparent', {}, 1, new Rect(0, 0, size.width, size.height))));\n            textElement(new TextOption(this.elementId + '_Zooming_Reset_2', 0 + size.width / 2, 0 + size.height * 3 / 4, 'middle', this.chart.getLocalizedLabel('ResetZoom'), 'rotate(0,' + (0) + ',' + (0) + ')', 'auto'), { size: '12px' }, 'black', childElement);\n        }\n        parentElement.appendChild(childElement);\n        this.wireEvents(childElement, this.reset);\n    }\n    /**\n     * To bind events.\n     * @return {void}\n     * @private\n     */\n    wireEvents(element, process) {\n        EventHandler.add(element, 'mousedown touchstart', process, this);\n        EventHandler.add(element, 'mouseover', this.showTooltip, this);\n        EventHandler.add(element, 'mouseout', this.removeTooltip, this);\n    }\n    /**\n     * To show tooltip.\n     * @return {void}\n     * @private\n     */\n    showTooltip(event) {\n        let text = event.currentTarget.id.split('_Zooming_')[1];\n        let left = (event.pageX - (measureText(text, { size: '10px' }).width + 5));\n        if (!this.chart.isTouch) {\n            createTooltip('EJ2_Chart_ZoomTip', this.chart.getLocalizedLabel(text), (event.pageY + 10), left, '10px');\n        }\n    }\n    /** @private */\n    removeTooltip() {\n        removeElement('EJ2_Chart_ZoomTip');\n    }\n    // Toolkit events function calculation here.\n    /** @private */\n    reset() {\n        let chart = this.chart;\n        if (!chart.zoomModule.isDevice) {\n            remove(chart.zoomModule.toolkitElements);\n        }\n        this.removeTooltip();\n        chart.svgObject.setAttribute('cursor', 'auto');\n        chart.axisCollections.forEach((axis) => {\n            axis.zoomFactor = 1;\n            axis.zoomPosition = 0;\n        });\n        chart.disableTrackTooltip = false;\n        chart.zoomModule.isZoomed = chart.zoomModule.isPanning = chart.isChartDrag = chart.delayRedraw = false;\n        chart.zoomModule.touchMoveList = chart.zoomModule.touchStartList = [];\n        chart.zoomModule.pinchTarget = null;\n        chart.removeSvg();\n        chart.refreshAxis();\n        chart.refreshBound();\n        this.elementOpacity = '1';\n        return false;\n    }\n    zoomIn(e) {\n        this.zoomInOutCalculation(1, this.chart, this.chart.axisCollections, this.chart.zoomSettings.mode);\n        return false;\n    }\n    zoomOut(e) {\n        this.zoomInOutCalculation(-1, this.chart, this.chart.axisCollections, this.chart.zoomSettings.mode);\n        return false;\n    }\n    zoom(e) {\n        this.chart.zoomModule.isPanning = false;\n        let zoomModule = this.chart.zoomModule;\n        this.elementOpacity = '1';\n        this.chart.svgObject.setAttribute('cursor', 'auto');\n        this.zoomInElements.setAttribute('opacity', this.elementOpacity);\n        this.zoomOutElements.setAttribute('opacity', this.elementOpacity);\n        this.applySelection(this.zoomElements.childNodes, this.selectionColor);\n        this.applySelection(this.panElements.childNodes, '#737373');\n        return false;\n    }\n    /** @private */\n    pan() {\n        let zoomModule = this.chart.zoomModule;\n        let element;\n        this.chart.zoomModule.isPanning = true;\n        this.chart.svgObject.setAttribute('cursor', 'pointer');\n        this.elementOpacity = '0.2';\n        element = this.zoomInElements ? this.zoomInElements.setAttribute('opacity', this.elementOpacity) : null;\n        element = this.zoomOutElements ? this.zoomOutElements.setAttribute('opacity', this.elementOpacity) : null;\n        element = this.panElements ? this.applySelection(this.panElements.childNodes, this.selectionColor) : null;\n        element = this.zoomElements ? this.applySelection(this.zoomElements.childNodes, '#737373') : null;\n        return false;\n    }\n    zoomInOutCalculation(scale, chart, axes, mode) {\n        if (!chart.zoomModule.isPanning && this.elementOpacity !== '0.2') {\n            let zoomFactor;\n            let zoomPosition;\n            let cumulative;\n            chart.disableTrackTooltip = true;\n            chart.delayRedraw = true;\n            axes.forEach((axis) => {\n                if ((axis.orientation === 'Horizontal' && mode !== 'Y') ||\n                    (axis.orientation === 'Vertical' && mode !== 'X')) {\n                    cumulative = Math.max(Math.max(1 / minMax(axis.zoomFactor, 0, 1), 1) + (0.25 * scale), 1);\n                    zoomFactor = (cumulative === 1) ? 1 : minMax(1 / cumulative, 0, 1);\n                    zoomPosition = (cumulative === 1) ? 0 : axis.zoomPosition + ((axis.zoomFactor - zoomFactor) * 0.5);\n                    if (axis.zoomPosition !== zoomPosition || axis.zoomFactor !== zoomFactor) {\n                        zoomFactor = (zoomPosition + zoomFactor) > 1 ? (1 - zoomPosition) : zoomFactor;\n                    }\n                    axis.zoomFactor = zoomFactor;\n                    axis.zoomPosition = zoomPosition;\n                }\n            });\n        }\n    }\n    applySelection(elements, color) {\n        for (let i = 1, length = elements.length; i < length; i++) {\n            elements[i].setAttribute('fill', color);\n        }\n    }\n}\n","import { EventHandler, Browser } from '@syncfusion/ej2-base';\nimport { getRectLocation, minMax, getElement, ChartLocation, Rect, RectOption, measureText } from '../../common/utils/helper';\nimport { Toolkit } from './zooming-toolkit';\nimport { zoomComplete } from '../../common/model/constants';\nimport { withInBounds } from '../../common/utils/helper';\n/**\n * `Zooming` module handles the zooming for chart.\n */\nexport class Zoom {\n    /**\n     * Constructor for Zooming module.\n     * @private.\n     */\n    constructor(chart) {\n        this.chart = chart;\n        this.isPointer = Browser.isPointer;\n        this.browserName = Browser.info.name;\n        this.wheelEvent = this.browserName === 'mozilla' ? (this.isPointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        this.cancelEvent = this.isPointer ? 'pointerleave' : 'mouseleave';\n        this.addEventListener();\n        this.isDevice = Browser.isDevice;\n        let zooming = chart.zoomSettings;\n        this.toolkit = new Toolkit(chart);\n        this.zooming = zooming;\n        this.elementId = chart.element.id;\n        this.zoomingRect = new Rect(0, 0, 0, 0);\n        this.zoomAxes = [];\n        this.zoomkitOpacity = 0.3;\n        this.isIOS = Browser.isIos || Browser.isIos7;\n        this.isZoomed = this.performedUI = this.zooming.enablePan && this.zooming.enableSelectionZooming;\n    }\n    /**\n     * Function that handles the Rectangular zooming.\n     * @return {void}\n     */\n    renderZooming(e, chart, isTouch) {\n        this.calculateZoomAxesRange(chart, chart.axisCollections);\n        if (this.zooming.enableSelectionZooming && (!isTouch\n            || (chart.isDoubleTap && this.touchStartList.length === 1)) && (!this.isPanning || chart.isDoubleTap)) {\n            this.isPanning = this.isDevice ? true : this.isPanning;\n            this.performedUI = true;\n            this.drawZoomingRectangle(chart);\n        }\n        else if (this.isPanning && chart.isChartDrag) {\n            if (!isTouch || (isTouch && this.touchStartList.length === 1)) {\n                this.pinchTarget = isTouch ? e.target : null;\n                this.doPan(chart, chart.axisCollections);\n            }\n        }\n    }\n    // Zooming rectangle drawn here\n    drawZoomingRectangle(chart) {\n        let areaBounds = chart.chartAxisLayoutPanel.seriesClipRect;\n        let startLocation = new ChartLocation(chart.previousMouseMoveX, chart.previousMouseMoveY);\n        let endLocation = new ChartLocation(chart.mouseX, chart.mouseY);\n        let rect = this.zoomingRect = getRectLocation(startLocation, endLocation, areaBounds);\n        if (rect.width > 0 && rect.height > 0) {\n            this.isZoomed = true;\n            chart.disableTrackTooltip = true;\n            chart.svgObject.setAttribute('cursor', 'crosshair');\n            if (this.zooming.mode === 'X') {\n                rect.height = areaBounds.height;\n                rect.y = areaBounds.y;\n            }\n            else if (this.zooming.mode === 'Y') {\n                rect.width = areaBounds.width;\n                rect.x = areaBounds.x;\n            }\n            chart.svgObject.appendChild(chart.renderer.drawRectangle(new RectOption(this.elementId + '_ZoomArea', chart.themeStyle.selectionRectFill, { color: chart.themeStyle.selectionRectStroke, width: 1 }, 1, rect, 0, 0, '', '3')));\n        }\n    }\n    // Panning performed here\n    doPan(chart, axes) {\n        if (chart.startMove && chart.crosshair.enable) {\n            return null;\n        }\n        let currentScale;\n        let offset;\n        this.isZoomed = true;\n        let translateX;\n        let translateY;\n        this.offset = !chart.delayRedraw ? chart.chartAxisLayoutPanel.seriesClipRect : this.offset;\n        chart.delayRedraw = true;\n        chart.disableTrackTooltip = true;\n        axes.forEach((axis) => {\n            currentScale = Math.max(1 / minMax(axis.zoomFactor, 0, 1), 1);\n            if (axis.orientation === 'Horizontal') {\n                offset = (chart.previousMouseMoveX - chart.mouseX) / axis.rect.width / currentScale;\n                axis.zoomPosition = minMax(axis.zoomPosition + offset, 0, (1 - axis.zoomFactor));\n            }\n            else {\n                offset = (chart.previousMouseMoveY - chart.mouseY) / axis.rect.height / currentScale;\n                axis.zoomPosition = minMax(axis.zoomPosition - offset, 0, (1 - axis.zoomFactor));\n            }\n        });\n        if (this.zooming.enableDeferredZooming) {\n            translateX = chart.mouseX - chart.mouseDownX;\n            translateY = chart.mouseY - chart.mouseDownY;\n            switch (this.zooming.mode) {\n                case 'X':\n                    translateY = 0;\n                    break;\n                case 'Y':\n                    translateX = 0;\n                    break;\n            }\n            this.setTransform(translateX, translateY, null, null, chart, false);\n            this.refreshAxis(chart.chartAxisLayoutPanel, chart, chart.axisCollections);\n        }\n        else {\n            this.performZoomRedraw(chart);\n        }\n        chart.previousMouseMoveX = chart.mouseX;\n        chart.previousMouseMoveY = chart.mouseY;\n    }\n    /**\n     * Redraw the chart on zooming.\n     * @return {void}\n     * @private\n     */\n    performZoomRedraw(chart) {\n        let rect = this.zoomingRect;\n        chart.animateSeries = false;\n        if (this.isZoomed) {\n            if (rect.width > 0 && rect.height > 0) {\n                this.performedUI = true;\n                chart.svgObject.setAttribute('cursor', 'auto');\n                this.doZoom(chart, chart.axisCollections, chart.chartAxisLayoutPanel.seriesClipRect);\n                chart.isDoubleTap = false;\n            }\n            else if (chart.disableTrackTooltip) {\n                chart.disableTrackTooltip = false;\n                chart.delayRedraw = false;\n                chart.removeSvg();\n                chart.refreshAxis();\n                chart.refreshBound();\n            }\n        }\n    }\n    refreshAxis(layout, chart, axes) {\n        let mode = chart.zoomSettings.mode;\n        layout.measureAxis(new Rect(chart.initialClipRect.x, chart.initialClipRect.y, chart.initialClipRect.width, chart.initialClipRect.height));\n        axes.map((axis, index) => {\n            if (axis.orientation === 'Horizontal' && mode !== 'Y') {\n                layout.drawXAxisLabels(axis, index, null, (axis.placeNextToAxisLine ? axis.updatedRect : axis.rect));\n            }\n            if (axis.orientation === 'Vertical' && mode !== 'X') {\n                layout.drawYAxisLabels(axis, index, null, (axis.placeNextToAxisLine ? axis.updatedRect : axis.rect));\n            }\n        });\n    }\n    // Rectangular zoom calculated here performed here\n    doZoom(chart, axes, bounds) {\n        let zoomRect = this.zoomingRect;\n        let mode = this.zooming.mode;\n        let argsData;\n        let previousZF;\n        let previousZP;\n        let currentZF;\n        let currentZP;\n        this.isPanning = chart.zoomSettings.enablePan || this.isPanning;\n        axes.forEach((axis) => {\n            previousZF = currentZF = axis.zoomFactor;\n            previousZP = currentZP = axis.zoomPosition;\n            argsData = {\n                cancel: false, name: zoomComplete, axis: axis, previousZoomFactor: previousZF, previousZoomPosition: previousZP,\n                currentZoomFactor: currentZF, currentZoomPosition: currentZP\n            };\n            if (axis.orientation === 'Horizontal') {\n                if (mode !== 'Y') {\n                    currentZP += Math.abs((zoomRect.x - bounds.x) / (bounds.width)) * axis.zoomFactor;\n                    currentZF *= (zoomRect.width / bounds.width);\n                    argsData.currentZoomPosition = currentZP;\n                    argsData.currentZoomFactor = currentZF;\n                    chart.trigger(zoomComplete, argsData);\n                }\n            }\n            else {\n                if (mode !== 'X') {\n                    currentZP += (1 - Math.abs((zoomRect.height + (zoomRect.y - bounds.y)) / (bounds.height))) * axis.zoomFactor;\n                    currentZF *= (zoomRect.height / bounds.height);\n                    argsData.currentZoomFactor = currentZF;\n                    argsData.currentZoomPosition = currentZP;\n                    chart.trigger(zoomComplete, argsData);\n                }\n            }\n            if (!argsData.cancel) {\n                axis.zoomFactor = argsData.currentZoomFactor;\n                axis.zoomPosition = argsData.currentZoomPosition;\n            }\n        });\n        this.zoomingRect = new Rect(0, 0, 0, 0);\n        this.performZoomRedraw(chart);\n    }\n    /**\n     * Function that handles the Mouse wheel zooming.\n     * @return {void}\n     * @private\n     */\n    performMouseWheelZooming(e, mouseX, mouseY, chart, axes) {\n        let direction = (this.browserName === 'mozilla' && !this.isPointer) ?\n            -(e.detail) / 3 > 0 ? 1 : -1 : (e.wheelDelta / 120) > 0 ? 1 : -1;\n        let mode = this.zooming.mode;\n        let origin = 0.5;\n        let cumulative;\n        let zoomFactor;\n        let zoomPosition;\n        this.isZoomed = true;\n        this.calculateZoomAxesRange(chart, chart.axisCollections);\n        chart.disableTrackTooltip = true;\n        this.performedUI = true;\n        this.isPanning = chart.zoomSettings.enablePan || this.isPanning;\n        axes.forEach((axis) => {\n            if ((axis.orientation === 'Vertical' && mode !== 'X') ||\n                (axis.orientation === 'Horizontal' && mode !== 'Y')) {\n                cumulative = Math.max(Math.max(1 / minMax(axis.zoomFactor, 0, 1), 1) + (0.25 * direction), 1);\n                if (cumulative >= 1) {\n                    origin = axis.orientation === 'Horizontal' ? mouseX / axis.rect.width : 1 - (mouseY / axis.rect.height);\n                    origin = origin > 1 ? 1 : origin < 0 ? 0 : origin;\n                    zoomFactor = (cumulative === 1) ? 1 : minMax(1 / cumulative, 0, 1);\n                    zoomPosition = (cumulative === 1) ? 0 : axis.zoomPosition + ((axis.zoomFactor - zoomFactor) * origin);\n                    if (axis.zoomPosition !== zoomPosition || axis.zoomFactor !== zoomFactor) {\n                        zoomFactor = (zoomPosition + zoomFactor) > 1 ? (1 - zoomPosition) : zoomFactor;\n                    }\n                }\n                axis.zoomFactor = zoomFactor;\n                axis.zoomPosition = zoomPosition;\n            }\n        });\n        this.performZoomRedraw(chart);\n    }\n    /**\n     * Function that handles the Pinch zooming.\n     * @return {void}\n     * @private\n     */\n    performPinchZooming(e, chart) {\n        if ((this.zoomingRect.width > 0 && this.zoomingRect.height > 0) || (chart.startMove && chart.crosshair.enable)) {\n            return false;\n        }\n        this.calculateZoomAxesRange(chart, chart.axisCollections);\n        this.isZoomed = true;\n        this.isPanning = true;\n        this.performedUI = true;\n        this.offset = !chart.delayRedraw ? chart.chartAxisLayoutPanel.seriesClipRect : this.offset;\n        chart.delayRedraw = true;\n        chart.disableTrackTooltip = true;\n        let elementOffset = chart.element.getBoundingClientRect();\n        let touchDown = this.touchStartList;\n        let touchMove = this.touchMoveList;\n        let touch0StartX = touchDown[0].pageX - elementOffset.left;\n        let touch0StartY = touchDown[0].pageY - elementOffset.top;\n        let touch0EndX = touchMove[0].pageX - elementOffset.left;\n        let touch0EndY = touchMove[0].pageY - elementOffset.top;\n        let touch1StartX = touchDown[1].pageX - elementOffset.left;\n        let touch1StartY = touchDown[1].pageY - elementOffset.top;\n        let touch1EndX = touchMove[1].pageX - elementOffset.left;\n        let touch1EndY = touchMove[1].pageY - elementOffset.top;\n        let scaleX;\n        let scaleY;\n        let translateXValue;\n        let translateYValue;\n        let pinchRect;\n        let clipX;\n        let clipY;\n        scaleX = Math.abs(touch0EndX - touch1EndX) / Math.abs(touch0StartX - touch1StartX);\n        scaleY = Math.abs(touch0EndY - touch1EndY) / Math.abs(touch0StartY - touch1StartY);\n        clipX = ((this.offset.x - touch0EndX) / scaleX) + touch0StartX;\n        clipY = ((this.offset.y - touch0EndY) / scaleY) + touch0StartY;\n        pinchRect = new Rect(clipX, clipY, this.offset.width / scaleX, this.offset.height / scaleY);\n        translateXValue = (touch0EndX - (scaleX * touch0StartX));\n        translateYValue = (touch0EndY - (scaleY * touch0StartY));\n        if (!isNaN(scaleX - scaleX) && !isNaN(scaleY - scaleY)) {\n            switch (this.zooming.mode) {\n                case 'XY':\n                    this.setTransform(translateXValue, translateYValue, scaleX, scaleY, chart, true);\n                    break;\n                case 'X':\n                    this.setTransform(translateXValue, 0, scaleX, 1, chart, true);\n                    break;\n                case 'Y':\n                    this.setTransform(0, translateYValue, 1, scaleY, chart, true);\n                    break;\n            }\n        }\n        this.calculatePinchZoomFactor(chart, pinchRect);\n        this.refreshAxis(chart.chartAxisLayoutPanel, chart, chart.axisCollections);\n        return true;\n    }\n    calculatePinchZoomFactor(chart, pinchRect) {\n        let mode = this.zooming.mode;\n        let selectionMin;\n        let selectionMax;\n        let rangeMin;\n        let rangeMax;\n        let value;\n        let axisTrans;\n        chart.axisCollections.forEach((axis, index) => {\n            if ((axis.orientation === 'Horizontal' && mode !== 'Y') ||\n                (axis.orientation === 'Vertical' && mode !== 'X')) {\n                if (axis.orientation === 'Horizontal') {\n                    value = pinchRect.x - this.offset.x;\n                    axisTrans = axis.rect.width / this.zoomAxes[index].delta;\n                    rangeMin = value / axisTrans + this.zoomAxes[index].min;\n                    value = pinchRect.x + pinchRect.width - this.offset.x;\n                    rangeMax = value / axisTrans + this.zoomAxes[index].min;\n                }\n                else {\n                    value = pinchRect.y - this.offset.y;\n                    axisTrans = axis.rect.height / this.zoomAxes[index].delta;\n                    rangeMin = (value * -1 + axis.rect.height) / axisTrans + this.zoomAxes[index].min;\n                    value = pinchRect.y + pinchRect.height - this.offset.y;\n                    rangeMax = (value * -1 + axis.rect.height) / axisTrans + this.zoomAxes[index].min;\n                }\n                selectionMin = Math.min(rangeMin, rangeMax);\n                selectionMax = Math.max(rangeMin, rangeMax);\n                axis.zoomPosition = (selectionMin - this.zoomAxes[index].actualMin) / this.zoomAxes[index].actualDelta;\n                axis.zoomFactor = (selectionMax - selectionMin) / this.zoomAxes[index].actualDelta;\n                axis.zoomPosition = axis.zoomPosition < 0 ? 0 : axis.zoomPosition;\n                axis.zoomFactor = axis.zoomFactor > 1 ? 1 : axis.zoomFactor;\n            }\n        });\n    }\n    // Series transformation style applied here.\n    setTransform(transX, transY, scaleX, scaleY, chart, isPinch) {\n        chart.seriesElements.setAttribute('clip-path', 'url(#' + this.elementId + '_ChartAreaClipRect_)');\n        if (chart.indicatorElements) {\n            chart.indicatorElements.setAttribute('clip-path', 'url(#' + this.elementId + '_ChartAreaClipRect_)');\n        }\n        let translate;\n        let xAxisLoc;\n        let yAxisLoc;\n        let element;\n        if (transX !== null && transY !== null) {\n            chart.visibleSeries.forEach((value) => {\n                xAxisLoc = chart.requireInvertedAxis ? value.yAxis.rect.x : value.xAxis.rect.x;\n                yAxisLoc = chart.requireInvertedAxis ? value.xAxis.rect.y : value.yAxis.rect.y;\n                translate = 'translate(' + (transX + (isPinch ? (scaleX * xAxisLoc) : xAxisLoc)) +\n                    ',' + (transY + (isPinch ? (scaleY * yAxisLoc) : yAxisLoc)) + ')';\n                translate = (scaleX || scaleY) ? translate + ' scale(' + scaleX + ' ' + scaleY + ')' : translate;\n                if (value.category === 'Indicator') {\n                    value.seriesElement.parentElement.setAttribute('transform', translate);\n                }\n                else {\n                    value.seriesElement.setAttribute('transform', translate);\n                }\n                element = getElement(chart.element.id + '_Series_' + value.index + '_DataLabelCollections');\n                if (value.errorBarElement) {\n                    value.errorBarElement.setAttribute('transform', translate);\n                }\n                if (value.symbolElement) {\n                    value.symbolElement.setAttribute('transform', translate);\n                }\n                if (value.textElement) {\n                    value.textElement.setAttribute('visibility', 'hidden');\n                    value.shapeElement.setAttribute('visibility', 'hidden');\n                }\n                if (element) {\n                    element.style.visibility = 'hidden';\n                }\n            });\n        }\n    }\n    calculateZoomAxesRange(chart, axes) {\n        let range;\n        let axisRange;\n        chart.axisCollections.forEach((axis, index) => {\n            axisRange = axis.visibleRange;\n            if (this.zoomAxes[index]) {\n                if (!chart.delayRedraw) {\n                    this.zoomAxes[index].min = axisRange.min;\n                    this.zoomAxes[index].delta = axisRange.delta;\n                }\n            }\n            else {\n                range = {\n                    actualMin: axis.actualRange.min,\n                    actualDelta: axis.actualRange.delta,\n                    min: axisRange.min,\n                    delta: axisRange.delta\n                };\n                this.zoomAxes[index] = range;\n            }\n        });\n    }\n    // Zooming Toolkit created here\n    showZoomingToolkit(chart) {\n        let toolboxItems = this.zooming.toolbarItems;\n        let areaBounds = chart.chartAxisLayoutPanel.seriesClipRect;\n        let spacing = 5;\n        let render = chart.renderer;\n        let length = this.isDevice ? 1 : toolboxItems.length;\n        let iconSize = this.isDevice ? measureText('Reset Zoom', { size: '12px' }).width : 16;\n        let height = this.isDevice ? measureText('Reset Zoom', { size: '12px' }).height : 22;\n        let width = (length * iconSize) + ((length + 1) * spacing) + ((length - 1) * spacing);\n        let transX = areaBounds.x + areaBounds.width - width - spacing;\n        let transY = (areaBounds.y + spacing);\n        let xPosition = spacing;\n        let outerElement;\n        let toolkit = this.toolkit;\n        let element;\n        let shadowElement = '<filter id=\"chart_shadow\" height=\"130%\"><feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"5\"/>';\n        shadowElement += '<feOffset dx=\"-3\" dy=\"4\" result=\"offsetblur\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"1\"/>';\n        shadowElement += '</feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge></filter>';\n        if (length === 0 || getElement(this.elementId + '_Zooming_KitCollection')) {\n            return false;\n        }\n        let defElement = render.createDefs();\n        toolboxItems = this.isDevice ? ['Reset'] : toolboxItems;\n        defElement.innerHTML = shadowElement;\n        this.toolkitElements = render.createGroup({\n            id: this.elementId + '_Zooming_KitCollection',\n            transform: 'translate(' + transX + ',' + transY + ')'\n        });\n        this.toolkitElements.appendChild(defElement);\n        this.toolkitElements.appendChild(render.drawRectangle(new RectOption(this.elementId + '_Zooming_Rect', '#fafafa', { color: 'transparent', width: 1 }, 1, new Rect(0, 0, width, (height + (spacing * 2))), 0, 0)));\n        outerElement = render.drawRectangle(new RectOption(this.elementId + '_Zooming_Rect', '#fafafa', { color: 'transparent', width: 1 }, 0.1, new Rect(0, 0, width, (height + (spacing * 2))), 0, 0));\n        outerElement.setAttribute('filter', 'url(#chart_shadow)');\n        this.toolkitElements.appendChild(outerElement);\n        let currentItem;\n        for (let i = 1; i <= length; i++) {\n            currentItem = toolboxItems[i - 1];\n            element = render.createGroup({\n                transform: 'translate(' + xPosition + ',' + (this.isDevice ? spacing : (spacing + 3)) + ')'\n            });\n            // for desktop toolkit hight is 32 and top padding is 8 icon size 16\n            switch (currentItem) {\n                case 'Pan':\n                    toolkit.createPanButton(element, this.toolkitElements, chart);\n                    break;\n                case 'Zoom':\n                    toolkit.createZoomButton(element, this.toolkitElements, chart);\n                    break;\n                case 'ZoomIn':\n                    toolkit.createZoomInButton(element, this.toolkitElements, chart);\n                    break;\n                case 'ZoomOut':\n                    toolkit.createZoomOutButton(element, this.toolkitElements, chart);\n                    break;\n                case 'Reset':\n                    toolkit.createResetButton(element, this.toolkitElements, chart, this.isDevice);\n                    break;\n            }\n            xPosition += iconSize + (spacing * 2);\n        }\n        this.toolkitElements.setAttribute('opacity', this.isDevice ? '1' : '' + this.zoomkitOpacity);\n        this.toolkitElements.setAttribute('cursor', 'auto');\n        chart.svgObject.appendChild(this.toolkitElements);\n        if (!this.isDevice) {\n            EventHandler.add(this.toolkitElements, 'mousemove touchstart', this.zoomToolkitMove, this);\n            EventHandler.add(this.toolkitElements, 'mouseleave touchend', this.zoomToolkitLeave, this);\n            if (this.isPanning) {\n                toolkit.pan();\n            }\n        }\n        return true;\n    }\n    /**\n     * To the show the zooming toolkit.\n     * @return {void}\n     * @private\n     */\n    applyZoomToolkit(chart, axes) {\n        let showToolkit = this.isAxisZoomed(axes);\n        if (showToolkit) {\n            this.showZoomingToolkit(chart);\n            this.isZoomed = true;\n        }\n        else {\n            this.toolkit.removeTooltip();\n            this.isPanning = false;\n            this.isZoomed = false;\n            chart.svgObject.setAttribute('cursor', 'auto');\n        }\n    }\n    /**\n     * Return boolean property to show zooming toolkit.\n     * @return {void}\n     * @private\n     */\n    isAxisZoomed(axes) {\n        let showToolkit = false;\n        axes.forEach((axis) => {\n            showToolkit = (showToolkit || (axis.zoomFactor !== 1 || axis.zoomPosition !== 0));\n        });\n        return showToolkit;\n    }\n    zoomToolkitMove(e) {\n        let element = this.toolkitElements;\n        let opacity = +element.getAttribute('opacity');\n        this.zoomkitOpacity = 1;\n        element.setAttribute('opacity', '' + this.zoomkitOpacity);\n        return false;\n    }\n    zoomToolkitLeave(e) {\n        let element = this.toolkitElements;\n        this.zoomkitOpacity = 0.3;\n        element.setAttribute('opacity', '' + this.zoomkitOpacity);\n        return false;\n    }\n    /**\n     * @hidden\n     */\n    addEventListener() {\n        if (this.chart.isDestroyed) {\n            return;\n        }\n        EventHandler.add(this.chart.element, this.wheelEvent, this.chartMouseWheel, this);\n        this.chart.on(Browser.touchMoveEvent, this.mouseMoveHandler, this);\n        this.chart.on(Browser.touchStartEvent, this.mouseDownHandler, this);\n        this.chart.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n        this.chart.on(this.cancelEvent, this.mouseCancelHandler, this);\n    }\n    /**\n     * @hidden\n     */\n    removeEventListener() {\n        if (this.chart.isDestroyed) {\n            return;\n        }\n        EventHandler.remove(this.chart.element, this.wheelEvent, this.chartMouseWheel);\n        this.chart.off(Browser.touchMoveEvent, this.mouseMoveHandler);\n        this.chart.off(Browser.touchStartEvent, this.mouseDownHandler);\n        this.chart.off(Browser.touchEndEvent, this.mouseUpHandler);\n        this.chart.off(this.cancelEvent, this.mouseCancelHandler);\n    }\n    /**\n     * Handles the mouse wheel on chart.\n     * @return {boolean}\n     * @private\n     */\n    chartMouseWheel(e) {\n        let chart = this.chart;\n        let offset = chart.element.getBoundingClientRect();\n        let svgRect = getElement(chart.element.id + '_svg').getBoundingClientRect();\n        let mouseX = (e.clientX - offset.left) - Math.max(svgRect.left - offset.left, 0);\n        let mouseY = (e.clientY - offset.top) - Math.max(svgRect.top - offset.top, 0);\n        if (this.zooming.enableMouseWheelZooming &&\n            withInBounds(mouseX, mouseY, chart.chartAxisLayoutPanel.seriesClipRect)) {\n            e.preventDefault();\n            this.performMouseWheelZooming(e, mouseX, mouseY, chart, chart.axisCollections);\n        }\n        return false;\n    }\n    /**\n     * @hidden\n     */\n    mouseMoveHandler(e) {\n        //Zooming for chart\n        let chart = this.chart;\n        let touches = null;\n        if (e.type === 'touchmove') {\n            if (e.preventDefault && this.isIOS &&\n                (this.isPanning || (chart.isDoubleTap)\n                    || (this.zooming.enablePinchZooming && this.touchStartList.length > 1))) {\n                e.preventDefault();\n            }\n            touches = e.touches;\n        }\n        if (chart.isChartDrag) {\n            if (chart.isTouch) {\n                this.touchMoveList = this.addTouchPointer(this.touchMoveList, e, touches);\n                if (this.zooming.enablePinchZooming && this.touchMoveList.length > 1\n                    && this.touchStartList.length > 1) {\n                    this.performPinchZooming(e, chart);\n                }\n            }\n            this.renderZooming(e, chart, chart.isTouch);\n        }\n    }\n    /**\n     * @hidden\n     */\n    mouseDownHandler(e) {\n        //Zooming for chart\n        let chart = this.chart;\n        let touches = null;\n        let target;\n        if (e.type === 'touchstart') {\n            touches = e.touches;\n            target = e.target;\n        }\n        else {\n            target = e.target;\n        }\n        if (target.id.indexOf(chart.element.id + '_Zooming_') === -1 &&\n            withInBounds(chart.previousMouseMoveX, chart.previousMouseMoveY, chart.chartAxisLayoutPanel.seriesClipRect)) {\n            chart.isChartDrag = true;\n        }\n        if (chart.isTouch) {\n            this.touchStartList = this.addTouchPointer(this.touchStartList, e, touches);\n        }\n    }\n    /**\n     * @hidden\n     */\n    mouseUpHandler(e) {\n        let chart = this.chart;\n        let performZoomRedraw = e.target.id.indexOf(chart.element.id + '_ZoomOut_') === -1 ||\n            e.target.id.indexOf(chart.element.id + '_ZoomIn_') === -1;\n        if (chart.isChartDrag || performZoomRedraw) {\n            this.performZoomRedraw(chart);\n        }\n        if (chart.isTouch) {\n            if (chart.isDoubleTap && withInBounds(chart.mouseX, chart.mouseY, chart.chartAxisLayoutPanel.seriesClipRect)\n                && this.touchStartList.length === 1 && this.isZoomed) {\n                this.toolkit.reset();\n            }\n            this.touchStartList = [];\n            chart.isDoubleTap = false;\n        }\n    }\n    /**\n     * @hidden\n     */\n    mouseCancelHandler(e) {\n        if (this.isZoomed) {\n            this.performZoomRedraw(this.chart);\n        }\n        this.pinchTarget = null;\n        this.touchStartList = [];\n        this.touchMoveList = [];\n    }\n    /**\n     * Handles the touch pointer.\n     * @return {boolean}\n     * @private\n     */\n    addTouchPointer(touchList, e, touches) {\n        if (touches) {\n            touchList = [];\n            for (let i = 0, length = touches.length; i < length; i++) {\n                touchList.push({ pageX: touches[i].clientX, pageY: touches[i].clientY, pointerId: null });\n            }\n        }\n        else {\n            touchList = touchList ? touchList : [];\n            if (touchList.length === 0) {\n                touchList.push({ pageX: e.clientX, pageY: e.clientY, pointerId: e.pointerId });\n            }\n            else {\n                for (let i = 0, length = touchList.length; i < length; i++) {\n                    if (touchList[i].pointerId === e.pointerId) {\n                        touchList[i] = { pageX: e.clientX, pageY: e.clientY, pointerId: e.pointerId };\n                    }\n                    else {\n                        touchList.push({ pageX: e.clientX, pageY: e.clientY, pointerId: e.pointerId });\n                    }\n                }\n            }\n        }\n        return touchList;\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        // Returns te module name\n        return 'Zoom';\n    }\n    /**\n     * To destroy the zooming.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        // Destroy method performed here\n        this.removeEventListener();\n    }\n}\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Selection Module handles the selection for chart.\n * @private\n */\nexport class BaseSelection {\n    constructor(control) {\n        this.control = control;\n    }\n    /**\n     * To create selection styles for series\n     */\n    seriesStyles() {\n        let seriesclass;\n        let style = document.getElementById(this.styleId);\n        if (isNullOrUndefined(style)) {\n            style = document.createElement('style');\n            style.setAttribute('id', this.styleId);\n            for (let series of this.control.visibleSeries) {\n                seriesclass = series.selectionStyle || this.styleId + '_series_' + series.index;\n                style.innerHTML += series.selectionStyle ? '' : '.' + seriesclass + ' { } ';\n            }\n            style.innerHTML += '.' + this.unselected + ' { opacity:' + (0.3) + ';} ';\n            document.body.appendChild(style);\n        }\n    }\n    /**\n     * To concat indexes\n     */\n    concatIndexes(userIndexes, localIndexes) {\n        return userIndexes.concat(localIndexes);\n    }\n    /**\n     * Selected points series visibility checking on legend click\n     */\n    checkVisibility(selectedIndexes) {\n        let visible = false;\n        let uniqueSeries = [];\n        for (let index of selectedIndexes) {\n            if (uniqueSeries.indexOf(index.series) === -1) {\n                uniqueSeries.push(index.series);\n            }\n        }\n        for (let index of uniqueSeries) {\n            if (this.control.series[index].visible) {\n                visible = true;\n                break;\n            }\n        }\n        return visible;\n    }\n    /**\n     * To add svg element style class\n     * @private\n     */\n    addSvgClass(element, className) {\n        let elementClassName = element.getAttribute('class') || '';\n        elementClassName += ((elementClassName !== '') ? ' ' : '');\n        if (elementClassName.indexOf(className) === -1) {\n            element.setAttribute('class', elementClassName + className);\n        }\n    }\n    /**\n     * To remove svg element style class\n     * @private\n     */\n    removeSvgClass(element, className) {\n        let elementClassName = element.getAttribute('class') || '';\n        if (elementClassName.indexOf(className) > -1) {\n            element.setAttribute('class', elementClassName.replace(className, ''));\n        }\n    }\n    /**\n     * To get children from parent element\n     */\n    getChildren(parent) {\n        let children = [];\n        for (let i = 0; i < parent.childNodes.length; i++) {\n            if (parent.childNodes[i].tagName !== 'defs') {\n                children.push(parent.childNodes[i]);\n            }\n        }\n        return children;\n    }\n}\n","/**\n * Selection src file\n */\nimport { Browser } from '@syncfusion/ej2-base';\nimport { remove } from '@syncfusion/ej2-base';\nimport { extend, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { ChartLocation, Rect, RectOption, CircleOption, withInBounds, getDraggedRectLocation, removeElement, getElement } from '../../common/utils/helper';\nimport { Index } from '../../common/model/base';\nimport { dragComplete } from '../../common/model/constants';\nimport { BaseSelection } from '../../common/user-interaction/selection';\n/**\n * `Selection` module handles the selection for chart.\n * @private\n */\nexport class Selection extends BaseSelection {\n    /**\n     * Constructor for selection module.\n     * @private.\n     */\n    constructor(chart) {\n        super(chart);\n        this.chart = chart;\n        this.renderer = chart.renderer;\n        this.addEventListener();\n    }\n    /**\n     * Binding events for selection module.\n     */\n    addEventListener() {\n        if (this.chart.isDestroyed) {\n            return;\n        }\n        let cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        this.chart.on(Browser.touchMoveEvent, this.mouseMove, this);\n        this.chart.on(cancelEvent, this.completeSelection, this);\n        this.chart.on('click', this.calculateSelectedElements, this);\n        this.chart.on(Browser.touchStartEvent, this.mousedown, this);\n        this.chart.on(Browser.touchEndEvent, this.completeSelection, this);\n    }\n    /**\n     * Chart mouse down\n     */\n    mousedown(e) {\n        let chart = this.chart;\n        if (chart.selectionMode === 'None' || chart.isChartDrag) {\n            return;\n        }\n        if (chart.isDoubleTap || !chart.isTouch || this.rectPoints) {\n            this.dragStart(chart, chart.chartAxisLayoutPanel.seriesClipRect, chart.mouseDownX, chart.mouseDownY, e);\n        }\n    }\n    /**\n     * UnBinding events for selection module.\n     */\n    removeEventListener() {\n        if (this.chart.isDestroyed) {\n            return;\n        }\n        this.chart.off(Browser.touchMoveEvent, this.mouseMove);\n        this.chart.off('pointerleave' || 'mouseleave', this.completeSelection);\n        this.chart.off('click', this.calculateSelectedElements);\n        this.chart.off(Browser.touchStartEvent, this.mousedown);\n        this.chart.off(Browser.touchEndEvent, this.completeSelection);\n    }\n    /**\n     * To find private variable values\n     */\n    initPrivateVariables(chart) {\n        this.styleId = chart.element.id + '_ej2_chart_selection';\n        this.unselected = chart.element.id + '_ej2_deselected';\n        this.closeIconId = chart.element.id + '_ej2_drag_close';\n        this.draggedRectGroup = chart.element.id + '_ej2_drag_group';\n        this.draggedRect = chart.element.id + '_ej2_drag_rect';\n        this.selectedDataIndexes = [];\n        this.rectPoints = null;\n        this.isSeriesMode = chart.selectionMode === 'Series';\n    }\n    /**\n     * Method to select the point and series.\n     * @return {void}\n     */\n    invokeSelection(chart) {\n        this.initPrivateVariables(chart);\n        this.series = extend({}, chart.visibleSeries, null, true);\n        this.seriesStyles();\n        if (!(chart.selectionMode.indexOf('Drag') > -1)) {\n            this.selectDataIndex(chart, this.concatIndexes(chart.selectedDataIndexes, this.selectedDataIndexes));\n        }\n    }\n    generateStyle(series) {\n        if (series) {\n            return (series.selectionStyle || this.styleId + '_series_' + series.index);\n        }\n        return 'undefined';\n    }\n    selectDataIndex(chart, indexes) {\n        for (let index of indexes) {\n            this.performSelection(index, chart, this.getElementByIndex(chart, index)[0]);\n        }\n    }\n    getElementByIndex(chart, index, suffix = '') {\n        let elementId = chart.element.id + '_Series_' + index.series + '_Point' + '_' + index.point;\n        let series = chart.series[index.series];\n        elementId = (!series.isRectSeries && series.type !== 'Scatter' && series.type !== 'Bubble' &&\n            series.marker.visible) ? (elementId + '_Symbol' + suffix) : elementId;\n        return [getElement(elementId), (series.type === 'RangeArea' && series.marker.visible) ? getElement(elementId + '1') : null];\n    }\n    getClusterElements(chart, index) {\n        let clusters = [];\n        for (let series of chart.visibleSeries) {\n            index = new Index(series.index, index.point);\n            clusters.push(this.getElementByIndex(chart, index)[0]);\n        }\n        return clusters;\n    }\n    findElements(chart, series, index, suffix = '') {\n        if (this.isSeriesMode) {\n            return this.getSeriesElements(series);\n        }\n        else if (chart.selectionMode === 'Cluster') {\n            return this.getClusterElements(chart, index);\n        }\n        else {\n            return this.getElementByIndex(chart, index, suffix);\n        }\n    }\n    /**\n     * To find the selected element.\n     * @return {void}\n     * @private\n     */\n    calculateSelectedElements(event) {\n        if (this.chart.selectionMode === 'None' || event.target.id.indexOf(this.chart.element.id + '_') === -1) {\n            return;\n        }\n        if (event.target.id.indexOf('_Series_') > -1) {\n            this.performSelection(this.indexFinder(event.target.id), this.chart, event.target);\n        }\n    }\n    performSelection(index, chart, element) {\n        this.isSeriesMode = chart.selectionMode === 'Series';\n        if (chart.series[index.series].type === 'BoxAndWhisker' &&\n            element.id === chart.element.id + '_Series_' + index.series + '_Point_' + index.point + '_BoxPath') {\n            element = element.parentElement;\n        }\n        switch (chart.selectionMode) {\n            case 'Series':\n                this.selection(chart, index, this.getSeriesElements(chart.series[index.series]));\n                this.blurEffect(chart.element.id, chart.visibleSeries);\n                break;\n            case 'Point':\n                if (!isNaN(index.point)) {\n                    this.selection(chart, index, [element]);\n                    this.blurEffect(chart.element.id, chart.visibleSeries);\n                }\n                break;\n            case 'Cluster':\n                if (!isNaN(index.point)) {\n                    this.clusterSelection(chart, chart.series, index);\n                    this.blurEffect(chart.element.id, chart.visibleSeries);\n                }\n                break;\n        }\n    }\n    selection(chart, index, selectedElements) {\n        if (!chart.isMultiSelect && (chart.selectionMode.indexOf('Drag') === -1)) {\n            this.removeMultiSelectEelments(chart, this.selectedDataIndexes, index, chart.series);\n        }\n        let className = selectedElements[0] && (selectedElements[0].getAttribute('class') || '');\n        if (selectedElements[0] && className.indexOf(this.getSelectionClass(selectedElements[0].id)) > -1) {\n            this.removeStyles(selectedElements);\n            this.addOrRemoveIndex(this.selectedDataIndexes, index);\n        }\n        else {\n            this.applyStyles(selectedElements);\n            this.addOrRemoveIndex(this.selectedDataIndexes, index, true);\n        }\n    }\n    clusterSelection(chart, series, index) {\n        this.selection(chart, index, this.getClusterElements(chart, new Index(index.series, index.point)));\n    }\n    removeMultiSelectEelments(chart, index, currentIndex, seriesCollection) {\n        let series;\n        for (let i = 0; i < index.length; i++) {\n            series = seriesCollection[index[i].series];\n            if ((this.isSeriesMode && !this.toEquals(index[i], currentIndex, this.isSeriesMode)) ||\n                (this.control.selectionMode === 'Cluster' && !this.toEquals(index[i], currentIndex, false)) ||\n                (!this.isSeriesMode && this.toEquals(index[i], currentIndex, true) && !this.toEquals(index[i], currentIndex, false))) {\n                this.removeStyles(this.findElements(chart, series, index[i]));\n                index.splice(i, 1);\n                i--;\n            }\n        }\n    }\n    blurEffect(chartId, visibleSeries) {\n        let visibility = this.checkVisibility(this.selectedDataIndexes); // legend click scenario\n        for (let series of visibleSeries) {\n            if (series.visible) {\n                this.checkSelectionElements(getElement(chartId + 'SeriesGroup' + series.index), this.generateStyle(series), visibility);\n                if (!isNullOrUndefined(getElement(chartId + 'SymbolGroup' + series.index))) {\n                    this.checkSelectionElements(getElement(chartId + 'SymbolGroup' + series.index), this.generateStyle(series), visibility);\n                }\n            }\n        }\n    }\n    checkSelectionElements(element, className, visibility) {\n        let children = (this.isSeriesMode ? [element] : element.childNodes);\n        let elementClassName;\n        let parentClassName;\n        let legendShape;\n        let selectElement = element;\n        for (let i = 0; i < children.length; i++) {\n            elementClassName = children[i].getAttribute('class') || '';\n            parentClassName = children[i].parentNode.getAttribute('class') || '';\n            if (elementClassName.indexOf(className) === -1 &&\n                parentClassName.indexOf(className) === -1 && visibility) {\n                this.addSvgClass(children[i], this.unselected);\n            }\n            else {\n                selectElement = children[i];\n                this.removeSvgClass(children[i], this.unselected);\n            }\n        }\n        if (this.control.legendModule && this.control.legendSettings.visible) {\n            legendShape = document.getElementById(this.control.element.id + '_chart_legend_shape_' + className.split('_series_')[1]);\n            if (legendShape) {\n                elementClassName = selectElement.getAttribute('class') || '';\n                parentClassName = selectElement.parentNode.getAttribute('class') || '';\n                if (elementClassName.indexOf(className) === -1 && parentClassName.indexOf(className) === -1 && visibility) {\n                    this.addSvgClass(legendShape, this.unselected);\n                }\n                else {\n                    this.removeSvgClass(legendShape, this.unselected);\n                }\n            }\n        }\n    }\n    applyStyles(elements) {\n        for (let element of elements) {\n            if (element) {\n                this.removeSvgClass(element.parentNode, this.unselected);\n                this.removeSvgClass(element, this.unselected);\n                this.addSvgClass(element, this.getSelectionClass(element.id));\n            }\n        }\n    }\n    getSelectionClass(id) {\n        return this.generateStyle(this.control.series[this.indexFinder(id).series]);\n    }\n    removeStyles(elements) {\n        for (let element of elements) {\n            if (element) {\n                this.removeSvgClass(element, this.getSelectionClass(element.id));\n            }\n        }\n    }\n    addOrRemoveIndex(indexes, index, add) {\n        for (let i = 0; i < indexes.length; i++) {\n            if (this.toEquals(indexes[i], index, this.isSeriesMode)) {\n                indexes.splice(i, 1);\n                i--;\n            }\n        }\n        if (add) {\n            indexes.push(index);\n        }\n    }\n    toEquals(first, second, checkSeriesOnly) {\n        return ((first.series === second.series || (this.control.selectionMode === 'Cluster' && !checkSeriesOnly))\n            && (checkSeriesOnly || (first.point === second.point)));\n    }\n    /**\n     * To redraw the selected points.\n     * @return {void}\n     * @private\n     */\n    redrawSelection(chart, oldMode) {\n        this.isSeriesMode = oldMode === 'Series';\n        let selectedDataIndexes = extend([], this.selectedDataIndexes, null, true);\n        this.removeSelectedElements(chart, this.selectedDataIndexes, chart.series);\n        this.blurEffect(chart.element.id, chart.visibleSeries);\n        this.selectDataIndex(chart, selectedDataIndexes);\n    }\n    /** @private */\n    legendSelection(chart, series) {\n        let seriesStyle = this.generateStyle(chart.visibleSeries[series]);\n        let selectedElements = document.getElementsByClassName(seriesStyle);\n        this.isSeriesMode = chart.selectionMode === 'Series';\n        let isBlurEffectNeeded = true;\n        if (selectedElements.length > 0) {\n            let elements = [];\n            for (let i = 0; i < selectedElements.length; i++) {\n                elements.push(selectedElements[i]);\n            }\n            this.removeStyles(elements);\n            this.isSeriesMode = true;\n            this.addOrRemoveIndex(this.selectedDataIndexes, new Index(series, NaN));\n            for (let series of chart.visibleSeries) {\n                seriesStyle = this.generateStyle(series);\n                if (document.getElementsByClassName(seriesStyle).length > 0) {\n                    for (let element of elements) {\n                        this.checkSelectionElements(element, seriesStyle, true);\n                    }\n                    isBlurEffectNeeded = false;\n                    break;\n                }\n            }\n            if (isBlurEffectNeeded) {\n                this.isSeriesMode = chart.selectionMode === 'Series';\n                this.blurEffect(chart.element.id, chart.visibleSeries);\n            }\n        }\n        else {\n            let seriesElements = this.getSeriesElements(chart.visibleSeries[series]);\n            for (let seriesElement of seriesElements) {\n                this.checkSelectionElements(seriesElement, seriesStyle, false);\n            }\n            this.isSeriesMode = true;\n            this.selection(chart, new Index(series, NaN), seriesElements);\n            this.isSeriesMode = chart.selectionMode === 'Series';\n            this.blurEffect(chart.element.id, chart.visibleSeries);\n        }\n    }\n    getSeriesElements(series) {\n        let seriesElements = [series.seriesElement];\n        if (series.marker.visible && series.type !== 'Scatter' && series.type !== 'Bubble' && !series.isRectSeries) {\n            seriesElements.push(series.symbolElement);\n        }\n        return seriesElements;\n    }\n    indexFinder(id) {\n        let ids = ['NaN', 'NaN'];\n        if (id.indexOf('SeriesGroup') > -1) {\n            ids = id.split('SeriesGroup');\n            ids[0] = ids[1];\n        }\n        else if (id.indexOf('SymbolGroup') > -1) {\n            ids = id.split('SymbolGroup');\n            ids[0] = ids[1];\n        }\n        else if (id.indexOf('_Point_') > -1) {\n            ids = id.split('_Series_')[1].split('_Point_');\n        }\n        else if (id.indexOf('_Series_') > -1) {\n            ids[0] = id.split('_Series_')[1];\n        }\n        return new Index(parseInt(ids[0], 10), parseInt(ids[1], 10));\n    }\n    /**\n     * Drag selection that returns the selected data.\n     * @return {void}\n     * @private\n     */\n    calculateDragSelectedElements(chart, dragRect) {\n        this.removeSelectedElements(chart, this.selectedDataIndexes, chart.series);\n        let rect = new Rect(dragRect.x, dragRect.y, dragRect.width, dragRect.height);\n        let axisOffset = new ChartLocation(chart.chartAxisLayoutPanel.seriesClipRect.x, chart.chartAxisLayoutPanel.seriesClipRect.y);\n        this.removeOffset(rect, axisOffset);\n        let points;\n        let index;\n        let selectedPointValues = [];\n        let selectedSeriesValues = [];\n        this.isSeriesMode = false;\n        let symbolLocation;\n        for (let series of chart.visibleSeries) {\n            if (series.visible) {\n                points = series.points;\n                selectedPointValues = [];\n                let xAxisOffset;\n                let yAxisOffset;\n                if ((chart.isTransposed || series.type.indexOf('Bar') !== -1) &&\n                    !(chart.isTransposed && series.type.indexOf('Bar') !== -1)) {\n                    xAxisOffset = series.xAxis.rect.y - axisOffset.y;\n                    yAxisOffset = series.yAxis.rect.x - axisOffset.x;\n                }\n                else {\n                    xAxisOffset = series.xAxis.rect.x - axisOffset.x;\n                    yAxisOffset = series.yAxis.rect.y - axisOffset.y;\n                }\n                for (let j = 0; j < points.length; j++) {\n                    let yValue = series.type !== 'RangeArea' ? points[j].yValue :\n                        points[j].regions[0].y;\n                    let isCurrentPoint;\n                    if (series.type === 'BoxAndWhisker') {\n                        isCurrentPoint = points[j].regions.some((region) => {\n                            return withInBounds(region.x + xAxisOffset, region.y + yAxisOffset, rect);\n                        });\n                    }\n                    else {\n                        isCurrentPoint = points[j].symbolLocations.some((location) => {\n                            return location && withInBounds(location.x + xAxisOffset, location.y + yAxisOffset, rect);\n                        });\n                    }\n                    if (isCurrentPoint && series.category !== 'Indicator') {\n                        index = new Index(series.index, points[j].index);\n                        this.selection(chart, index, this.findElements(chart, series, index));\n                        selectedPointValues.push({ x: points[j].xValue.toString(), y: yValue });\n                    }\n                    if (isCurrentPoint && series.type === 'RangeArea') {\n                        selectedPointValues.push({ x: points[j].xValue.toString(), y: points[j].regions[0].y });\n                    }\n                }\n                selectedSeriesValues.push(selectedPointValues);\n            }\n        }\n        this.blurEffect(chart.element.id, chart.visibleSeries);\n        this.rectPoints = new Rect(dragRect.x, dragRect.y, dragRect.width, dragRect.height);\n        this.createCloseButton((dragRect.x + dragRect.width), dragRect.y);\n        let args = {\n            name: dragComplete,\n            selectedDataValues: selectedSeriesValues,\n            cancel: false\n        };\n        chart.trigger(dragComplete, args);\n    }\n    removeOffset(rect, clip) {\n        rect.x -= clip.x;\n        rect.y -= clip.y;\n    }\n    /**\n     * Method to draw dragging rect.\n     * @return {void}\n     * @private\n     */\n    drawDraggingRect(chart, dragRect) {\n        let cartesianLayout = chart.chartAxisLayoutPanel.seriesClipRect;\n        switch (chart.selectionMode) {\n            case 'DragX':\n                dragRect.y = cartesianLayout.y;\n                dragRect.height = cartesianLayout.height;\n                break;\n            case 'DragY':\n                dragRect.x = cartesianLayout.x;\n                dragRect.width = cartesianLayout.width;\n                break;\n        }\n        if (dragRect.width < 5 || dragRect.height < 5) {\n            return null;\n        }\n        let element = getElement(this.draggedRect);\n        if (this.closeIcon) {\n            removeElement(this.closeIconId);\n        }\n        if (element) {\n            this.setAttributes(element, dragRect);\n        }\n        else {\n            let dragGroup = chart.renderer.createGroup({ id: this.draggedRectGroup });\n            chart.svgObject.appendChild(dragGroup);\n            element = chart.renderer.drawRectangle(new RectOption(this.draggedRect, chart.themeStyle.selectionRectFill, { color: chart.themeStyle.selectionRectStroke, width: 1 }, 1, dragRect));\n            element.setAttribute('style', 'cursor:move;');\n            dragGroup.appendChild(element);\n        }\n    }\n    createCloseButton(x, y) {\n        let closeIcon = this.chart.renderer.createGroup({\n            id: this.closeIconId,\n            style: 'cursor:pointer; visibility: visible;'\n        });\n        closeIcon.appendChild(this.chart.renderer.drawCircle(new CircleOption(this.closeIconId + '_circle', '#FFFFFF', { color: this.chart.themeStyle.selectionCircleStroke, width: 1 }, 1, x, y, 10)));\n        let direction = 'M ' + (x - 4) + ' ' + (y - 4) + ' L ' + (x + 4) + ' ' + (y + 4) + ' M ' + (x - 4) + ' ' + (y + 4) +\n            ' L ' + (x + 4) + ' ' + (y - 4);\n        closeIcon.appendChild(this.chart.renderer.drawPath({\n            id: this.closeIconId + '_cross', d: direction,\n            stroke: this.chart.themeStyle.selectionCircleStroke,\n            'stroke-width': 2, fill: this.chart.themeStyle.selectionCircleStroke\n        }));\n        this.closeIcon = closeIcon;\n        getElement(this.draggedRectGroup).appendChild(closeIcon);\n    }\n    /**\n     * Method to remove dragged element.\n     * @return {void}\n     * @private\n     */\n    removeDraggedElements(chart, event) {\n        if ((event.target.id.indexOf(this.closeIconId) > -1) && (event.type.indexOf('move') === -1)) {\n            this.removeSelectedElements(chart, this.selectedDataIndexes, chart.series);\n            this.blurEffect(chart.element.id, chart.visibleSeries);\n            remove(getElement(this.draggedRectGroup));\n            this.changeCursorStyle(false, chart.svgObject, 'auto');\n            this.rectPoints = null;\n        }\n    }\n    /**\n     * Method to resize the drag rect.\n     * @return {void}\n     * @private\n     */\n    resizingSelectionRect(chart, location, tapped) {\n        let rect = new Rect(this.rectPoints.x, this.rectPoints.y, this.rectPoints.width, this.rectPoints.height);\n        let resize = this.findResizeMode(chart.svgObject, rect, location);\n        if (this.resizing) {\n            rect = getDraggedRectLocation(rect.x, rect.y, (rect.x + rect.width), (rect.y + rect.height), chart.chartAxisLayoutPanel.seriesClipRect);\n            this.drawDraggingRect(chart, rect);\n            this.dragRect = rect;\n        }\n        if (tapped) {\n            this.resizing = resize;\n        }\n    }\n    findResizeMode(chartSvgObject, rect, location) {\n        let cursorStyle = 'se-resize';\n        let resize = false;\n        if (!this.resizing) {\n            let resizeEdges = [new Rect(rect.x, (rect.y - 10), rect.width - 5, 20),\n                new Rect((rect.x - 10), rect.y, 20, rect.height),\n                new Rect(rect.x, (rect.y + rect.height - 10), rect.width - 10, 20),\n                new Rect((rect.x + rect.width - 10), rect.y + 5, 20, rect.height - 15),\n                new Rect((rect.x + rect.width - 10), (rect.y + rect.height - 10), 20, 20)]; //corner\n            for (let i = 0; i < resizeEdges.length; i++) {\n                if (withInBounds(location.x, location.y, resizeEdges[i])) {\n                    cursorStyle = (i === 4) ? cursorStyle : (i % 2 === 0) ? 'ns-resize' : 'ew-resize';\n                    resize = true;\n                    this.resizeMode = i;\n                    break;\n                }\n            }\n        }\n        else {\n            let x = rect.x;\n            let y = rect.y;\n            let width = (location.x - x);\n            let height = (location.y - y);\n            switch (this.resizeMode) {\n                case 0:\n                    height = Math.abs((rect.height + rect.y) - location.y);\n                    rect.y = Math.min((rect.height + rect.y), location.y);\n                    rect.height = height;\n                    break;\n                case 1:\n                    width = Math.abs((rect.width + rect.x) - location.x);\n                    rect.x = Math.min((rect.width + rect.x), location.x);\n                    rect.width = width;\n                    break;\n                case 2:\n                    rect.height = Math.abs(height);\n                    rect.y = Math.min(location.y, y);\n                    break;\n                case 3:\n                    rect.width = Math.abs(width);\n                    rect.x = Math.min(location.x, x);\n                    break;\n                case 4:\n                    rect.width = Math.abs(width);\n                    rect.height = Math.abs(height);\n                    rect.x = Math.min(location.x, x);\n                    rect.y = Math.min(location.y, y);\n                    break;\n            }\n        }\n        this.changeCursorStyle(resize, getElement(this.draggedRect), cursorStyle);\n        this.changeCursorStyle(resize, chartSvgObject, cursorStyle);\n        return resize;\n    }\n    changeCursorStyle(isResize, rectelement, cursorStyle) {\n        cursorStyle = isResize ? cursorStyle : (this.control.svgObject === rectelement) ? 'auto' : 'move';\n        rectelement.setAttribute('style', 'cursor:' + cursorStyle + ';');\n    }\n    removeSelectedElements(chart, index, seriesCollection) {\n        index.splice(0, index.length);\n        let seriesElements;\n        for (let series of seriesCollection) {\n            seriesElements = this.getSeriesElements(series);\n            this.removeStyles(seriesElements);\n            for (let seriesElement of seriesElements) {\n                this.removeStyles(this.getChildren(seriesElement));\n            }\n        }\n    }\n    setAttributes(ele, object) {\n        let keys = Object.keys(object);\n        for (let key of keys) {\n            ele.setAttribute(key, object[key]);\n        }\n    }\n    /**\n     * Method to move the dragged rect.\n     * @return {void}\n     * @private\n     */\n    draggedRectMoved(chart, grabbedPoint, doDrawing) {\n        let rect = new Rect(this.rectPoints.x, this.rectPoints.y, this.rectPoints.width, this.rectPoints.height);\n        rect.x -= (grabbedPoint.x - chart.mouseX);\n        rect.y -= (grabbedPoint.y - chart.mouseY);\n        rect = getDraggedRectLocation(rect.x, rect.y, rect.x + rect.width, rect.height + rect.y, chart.chartAxisLayoutPanel.seriesClipRect);\n        if (doDrawing) {\n            this.drawDraggingRect(chart, rect);\n        }\n        else {\n            this.calculateDragSelectedElements(chart, rect);\n        }\n    }\n    /**\n     * To complete the selection.\n     * @return {void}\n     * @private\n     */\n    completeSelection(e) {\n        let chart = this.chart;\n        if (chart.selectionMode === 'None') {\n            return;\n        }\n        if ((this.dragging || this.resizing) && this.dragRect.width > 5 && this.dragRect.height > 5) {\n            this.calculateDragSelectedElements(chart, this.dragRect);\n        }\n        else if (this.rectGrabbing && this.rectPoints.width && this.rectPoints.height) {\n            this.draggedRectMoved(chart, this.dragRect);\n        }\n        this.dragging = false;\n        this.rectGrabbing = false;\n        this.resizing = false;\n        this.removeDraggedElements(chart, e);\n    }\n    getDragRect(chart, seriesClipRect) {\n        return getDraggedRectLocation(chart.mouseDownX, chart.mouseDownY, chart.mouseX, chart.mouseY, seriesClipRect);\n    }\n    /** @private */\n    dragStart(chart, seriesClipRect, mouseDownX, mouseDownY, event) {\n        this.dragging = (chart.selectionMode.indexOf('Drag') > -1) && (chart.isDoubleTap || !chart.isTouch) &&\n            chart.chartAreaType !== 'PolarRadar';\n        if (this.dragging) {\n            this.dragRect = new Rect(chart.mouseDownX, chart.mouseDownY, 0, 0);\n            if (chart.mouseDownX < seriesClipRect.x || chart.mouseDownX > (seriesClipRect.x + seriesClipRect.width) ||\n                chart.mouseDownY < seriesClipRect.y || chart.mouseDownY > (seriesClipRect.y + seriesClipRect.height)) {\n                this.dragging = false;\n            }\n        }\n        if (this.rectPoints) {\n            this.dragRect = new Rect(chart.mouseDownX, chart.mouseDownY, 0, 0);\n            this.resizingSelectionRect(chart, new ChartLocation(mouseDownX, mouseDownY), true);\n            this.rectGrabbing = withInBounds(mouseDownX, mouseDownY, this.rectPoints);\n        }\n    }\n    /** @private */\n    mouseMove(event) {\n        let chart = this.chart;\n        if (chart.selectionMode === 'None') {\n            return;\n        }\n        if (event.type === 'touchmove' && (Browser.isIos || Browser.isIos7) && this.dragging && event.preventDefault) {\n            event.preventDefault();\n        }\n        let insideMoving = withInBounds(chart.mouseX, chart.mouseY, chart.chartAxisLayoutPanel.seriesClipRect);\n        if (insideMoving) {\n            if (this.rectGrabbing && !this.resizing) {\n                this.draggedRectMoved(chart, this.dragRect, true);\n            }\n            else if (this.dragging && !this.resizing) {\n                this.dragRect = this.getDragRect(chart, chart.chartAxisLayoutPanel.seriesClipRect);\n                this.drawDraggingRect(chart, this.dragRect);\n            }\n            if (this.rectPoints) {\n                this.resizingSelectionRect(chart, new ChartLocation(chart.mouseX, chart.mouseY));\n            }\n        }\n        else {\n            this.completeSelection(event);\n        }\n    }\n    /**\n     * Get module name.\n     * @private\n     */\n    getModuleName() {\n        return 'Selection';\n    }\n    /**\n     * To destroy the selection.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        this.removeEventListener();\n        // Destroy method performed here\n    }\n}\n","import { ChartLocation, Rect, TextOption, RectOption, isCollide, markerAnimate } from '../../common/utils/helper';\nimport { getLabelText, measureText, convertHexToColor, calculateRect, textElement, colorNameToHex } from '../../common/utils/helper';\nimport { textRender } from '../../common/model/constants';\nimport { createTemplate, getFontStyle, getElement, measureElementRect, templateAnimate, withIn } from '../../common/utils/helper';\nimport { createElement } from '@syncfusion/ej2-base';\nimport { getPoint } from '../../common/utils/helper';\n/**\n * `DataLabel` module is used to render data label for the data point.\n */\nexport class DataLabel {\n    /**\n     * Constructor for the data label module.\n     * @private\n     */\n    constructor(chart) {\n        this.errorHeight = 0;\n        this.chart = chart;\n    }\n    initPrivateVariables(series, marker) {\n        let transform;\n        let render = series.chart.renderer;\n        transform = series.chart.chartAreaType === 'Cartesian' ? 'translate(' + series.clipRect.x + ',' + (series.clipRect.y) + ')' : '';\n        if (marker.dataLabel.visible) {\n            series.shapeElement = render.createGroup({\n                'id': this.chart.element.id + 'ShapeGroup' + series.index,\n                'transform': transform,\n                'clip-path': 'url(#' + this.chart.element.id + '_ChartSeriesClipRect_' + series.index + ')'\n            });\n            series.textElement = render.createGroup({\n                'id': this.chart.element.id + 'TextGroup' + series.index,\n                'transform': transform,\n                'clip-path': 'url(#' + this.chart.element.id + '_ChartSeriesClipRect_' + series.index + ')'\n            });\n        }\n        this.markerHeight = ((series.type === 'Scatter' || marker.visible) && !this.isRectSeries(series)) ? (marker.height / 2) : 0;\n        this.commonId = this.chart.element.id + '_Series_' + series.index + '_Point_';\n        this.calculateErrorHeight(series, series.marker.dataLabel.position);\n        this.chartBackground = this.chart.chartArea.background === 'trasparent' ?\n            this.chart.background || this.chart.themeStyle.background : this.chart.chartArea.background;\n    }\n    calculateErrorHeight(series, position) {\n        if (!series.errorBar.visible) {\n            return null;\n        }\n        else if (series.errorBar.visible && this.chart.chartAreaType !== 'PolarRadar') {\n            let direction = series.errorBar.direction;\n            let positiveHeight = this.chart.errorBarModule.positiveHeight;\n            let negativeHeight = this.chart.errorBarModule.negativeHeight;\n            if (this.isRectSeries(series)) {\n                if (position === 'Top' || position === 'Auto') {\n                    if (direction === 'Both' || direction === 'Minus') {\n                        this.errorHeight = negativeHeight;\n                    }\n                    else {\n                        this.errorHeight = 0;\n                    }\n                }\n                if (position === 'Outer' || position === 'Auto') {\n                    if (direction === 'Both' || direction === 'Plus') {\n                        this.errorHeight = positiveHeight;\n                    }\n                    else {\n                        this.errorHeight = 0;\n                    }\n                }\n            }\n            else {\n                if (position === 'Top' || position === 'Outer' || position === 'Auto') {\n                    if ((direction === 'Both' || direction === 'Plus') && (!series.chart.isTransposed)) {\n                        this.errorHeight = positiveHeight;\n                    }\n                    else {\n                        this.errorHeight = 0;\n                    }\n                }\n                if (position === 'Bottom' || position === 'Auto') {\n                    if (direction === 'Both' || direction === 'Minus') {\n                        this.errorHeight = negativeHeight;\n                    }\n                    else {\n                        this.errorHeight = 0;\n                    }\n                }\n            }\n        }\n        else {\n            this.errorHeight = 0;\n        }\n    }\n    isRectSeries(series) {\n        return series.isRectSeries || series.type === 'RangeArea';\n    }\n    /**\n     * Render the data label for series.\n     * @return {void}\n     */\n    render(series, chart, dataLabel) {\n        // initialize the private variable\n        this.initPrivateVariables(series, series.marker);\n        let rect;\n        let rgbValue;\n        let contrast;\n        let argsData;\n        let border;\n        let textSize;\n        this.inverted = chart.requireInvertedAxis;\n        this.yAxisInversed = series.yAxis.isInversed;\n        let element = createElement('div', {\n            id: chart.element.id + '_Series_' + series.index + '_DataLabelCollections'\n        });\n        // Data label point iteration started\n        series.points.map((point, index) => {\n            this.margin = dataLabel.margin;\n            let labelText = [];\n            let labelLength;\n            let clip = series.clipRect;\n            border = { width: dataLabel.border.width, color: dataLabel.border.color };\n            if ((point.symbolLocations.length && point.symbolLocations[0]) ||\n                (series.type === 'BoxAndWhisker' && point.regions.length)) {\n                labelText = getLabelText(point, series, chart);\n                labelLength = labelText.length;\n                for (let i = 0; i < labelLength; i++) {\n                    argsData = {\n                        cancel: false, name: textRender, series: series,\n                        point: point, text: labelText[i], border: border,\n                        color: dataLabel.fill, template: dataLabel.template\n                    };\n                    chart.trigger(textRender, argsData);\n                    if (!argsData.cancel) {\n                        this.fontBackground = argsData.color;\n                        this.isDataLabelShape(argsData);\n                        this.markerHeight = series.type === 'Bubble' ? (point.regions[0].height / 2) : this.markerHeight;\n                        if (argsData.template !== null) {\n                            this.createDataLabelTemplate(element, series, dataLabel, point, argsData, i);\n                        }\n                        else {\n                            textSize = measureText(argsData.text, dataLabel.font);\n                            rect = this.calculateTextPosition(point, series, textSize, dataLabel, i);\n                            if (!isCollide(rect, chart.dataLabelCollections, clip)) {\n                                chart.dataLabelCollections.push(new Rect(rect.x + clip.x, rect.y + clip.y, rect.width, rect.height));\n                                if (this.isShape) {\n                                    series.shapeElement.appendChild(chart.renderer.drawRectangle(new RectOption(this.commonId + index + '_TextShape_' + i, argsData.color, argsData.border, dataLabel.opacity, rect, dataLabel.rx, dataLabel.ry)));\n                                }\n                                // Checking the font color\n                                rgbValue = convertHexToColor(colorNameToHex(this.fontBackground));\n                                contrast = Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000);\n                                textElement(new TextOption(this.commonId + index + '_Text_' + i, rect.x + this.margin.left + textSize.width / 2, rect.y + this.margin.top + textSize.height * 3 / 4, 'middle', argsData.text, 'rotate(0,' + (rect.x) + ',' + (rect.y) + ')', 'auto'), dataLabel.font, dataLabel.font.color ||\n                                    ((contrast >= 128 || series.type === 'Hilo') ? 'black' : 'white'), series.textElement);\n                            }\n                        }\n                    }\n                }\n            }\n        });\n        if (element.childElementCount) {\n            getElement(chart.element.id + '_Secondary_Element').appendChild(element);\n        }\n    }\n    /**\n     * Render the data label template.\n     * @return {void}\n     * @private\n     */\n    createDataLabelTemplate(parentElement, series, dataLabel, point, data, labelIndex) {\n        this.margin = { left: 0, right: 0, bottom: 0, top: 0 };\n        let clip = series.clipRect;\n        let childElement = createTemplate(createElement('div', {\n            id: this.chart.element.id + '_Series_' + series.index + '_DataLabel_'\n                + point.index + (labelIndex ? ('_' + labelIndex) : ''),\n            styles: 'position: absolute;background-color:' + data.color + ';' +\n                getFontStyle(dataLabel.font) + ';border:' + data.border.width + 'px solid ' + data.border.color + ';'\n        }), point.index, data.template, this.chart, point, series);\n        let elementRect = measureElementRect(childElement);\n        let rect = this.calculateTextPosition(point, series, { width: elementRect.width, height: elementRect.height }, dataLabel, labelIndex);\n        childElement.style.left = ((this.chart.chartAreaType === 'PolarRadar' ? 0 : series.clipRect.x) + rect.x) + 'px';\n        childElement.style.top = ((this.chart.chartAreaType === 'PolarRadar' ? 0 : series.clipRect.y) + rect.y) + 'px';\n        let rgbValue = convertHexToColor(colorNameToHex(this.fontBackground));\n        let vAxis = series.chart.requireInvertedAxis ? series.xAxis : series.yAxis;\n        let hAxis = series.chart.requireInvertedAxis ? series.yAxis : series.xAxis;\n        childElement.style.color = dataLabel.font.color ||\n            ((Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000)) >= 128 ? 'black' : 'white');\n        if (childElement.childElementCount && !isCollide(rect, this.chart.dataLabelCollections, clip)\n            && (series.seriesType !== 'XY' || point.yValue === undefined || withIn(point.yValue, series.yAxis.visibleRange) ||\n                (series.type.indexOf('100') > -1 && withIn(series.stackedValues.endValues[point.index], series.yAxis.visibleRange)))\n            && withIn(point.xValue, series.xAxis.visibleRange) && parseFloat(childElement.style.top) >= vAxis.rect.y &&\n            parseFloat(childElement.style.left) >= hAxis.rect.x && parseFloat(childElement.style.top) <= vAxis.rect.y + vAxis.rect.height &&\n            parseFloat(childElement.style.left) <= hAxis.rect.x + hAxis.rect.width) {\n            this.chart.dataLabelCollections.push(new Rect(rect.x + clip.x, rect.y + clip.y, rect.width, rect.height));\n            parentElement.appendChild(childElement);\n            if (series.animation.enable && this.chart.animateSeries) {\n                this.doDataLabelAnimation(series, childElement);\n            }\n        }\n    }\n    calculateTextPosition(point, series, textSize, dataLabel, labelIndex) {\n        let labelRegion = labelIndex > 1 ? (series.type === 'Candle') ? point.regions[1] : point.regions[0] : point.regions[0];\n        if (labelIndex > 1 && series.type === 'HiloOpenClose') {\n            labelRegion = (labelIndex === 2) ? point.regions[1] : point.regions[2];\n        }\n        let location;\n        location = this.getLabelLocation(point, series, textSize, labelIndex);\n        let padding = 5;\n        let clipRect = series.clipRect;\n        let rect;\n        // calculating alignment\n        if (!this.chart.requireInvertedAxis || !this.isRectSeries(series) || series.type === 'BoxAndWhisker') {\n            this.locationX = location.x;\n            let alignmentValue = textSize.height + (this.borderWidth * 2) + this.markerHeight +\n                this.margin.bottom + this.margin.top + padding;\n            location.y = (dataLabel.position === 'Auto') ? location.y :\n                this.calculateAlignment(alignmentValue, location.y, dataLabel.alignment, this.isRectSeries(series) ? point.yValue < 0 : false);\n            // calculating position\n            location.y = (!this.isRectSeries(series) || series.type === 'BoxAndWhisker') ?\n                this.calculatePathPosition(location.y, dataLabel.position, series, point, textSize, labelIndex) :\n                this.calculateRectPosition(location.y, labelRegion, point.yValue < 0 !== this.yAxisInversed, dataLabel.position, series, textSize, labelIndex, point);\n            if (this.isRectSeries(series) && this.chart.chartAreaType === 'PolarRadar') {\n                location = this.calculatePolarRectPosition(location, dataLabel.position, series, point, textSize, labelIndex);\n            }\n        }\n        else {\n            this.locationY = location.y;\n            let alignmentValue = textSize.width + this.borderWidth + this.margin.left + this.margin.right - padding;\n            location.x = dataLabel.position === 'Auto' ? location.x :\n                this.calculateAlignment(alignmentValue, location.x, dataLabel.alignment, point.yValue < 0);\n            location.x = this.calculateRectPosition(location.x, labelRegion, point.yValue < 0 !== this.yAxisInversed, dataLabel.position, series, textSize, labelIndex, point);\n        }\n        rect = calculateRect(location, textSize, this.margin);\n        // Checking the condition whether data Label has been exist the clip rect\n        if (!((rect.y > clipRect.height) || (rect.x > clipRect.width) ||\n            (rect.x + rect.width < 0) || (rect.y + rect.height < 0))) {\n            rect.x = rect.x < 0 ? padding : rect.x;\n            rect.y = rect.y < 0 ? padding : rect.y;\n            rect.x -= (rect.x + rect.width) > clipRect.width ? (rect.x + rect.width) - clipRect.width + padding : 0;\n            rect.y -= (rect.y + rect.height) > clipRect.height ? (rect.y + rect.height) - clipRect.height + padding : 0;\n            this.fontBackground = this.fontBackground === 'transparent' ? this.chartBackground : this.fontBackground;\n        }\n        return rect;\n    }\n    // Calculation label location for polar column draw types\n    calculatePolarRectPosition(location, position, series, point, size, labelIndex) {\n        let padding = 5;\n        let columnRadius;\n        let angle = (point.regionData.startAngle - 0.5 * Math.PI) + (point.regionData.endAngle - point.regionData.startAngle) / 2;\n        if (labelIndex === 0) {\n            columnRadius = point.regionData.radius < point.regionData.innerRadius ? point.regionData.innerRadius\n                : point.regionData.radius;\n        }\n        else {\n            columnRadius = point.regionData.radius > point.regionData.innerRadius ? point.regionData.innerRadius\n                : point.regionData.radius;\n        }\n        this.fontBackground = this.fontBackground === 'transparent' ? this.chartBackground : this.fontBackground;\n        if (series.drawType.indexOf('Stacking') > -1) {\n            position = position === 'Outer' ? 'Top' : position;\n        }\n        else if (series.drawType.indexOf('Range') > -1) {\n            position = (position === 'Outer' || position === 'Top') ? position : 'Auto';\n        }\n        if (position === 'Outer') {\n            columnRadius = labelIndex === 0 ? columnRadius + 2 * padding : columnRadius - 2 * padding;\n        }\n        else if (position === 'Middle') {\n            columnRadius = columnRadius / 2 + padding;\n        }\n        else if (position === 'Top') {\n            columnRadius = labelIndex === 0 ? columnRadius - 2 * padding : columnRadius + 2 * padding;\n        }\n        else if (position === 'Bottom') {\n            columnRadius = padding;\n        }\n        else {\n            if (labelIndex === 0) {\n                columnRadius = columnRadius >= series.chart.radius ? columnRadius - padding :\n                    series.drawType === 'StackingColumn' ? columnRadius - 2 * padding : columnRadius + 2 * padding;\n            }\n            else {\n                columnRadius = columnRadius >= series.chart.radius ? columnRadius + padding : columnRadius - 2 * padding;\n            }\n        }\n        location.x = series.clipRect.width / 2 + series.clipRect.x + columnRadius * Math.cos(angle);\n        location.y = series.clipRect.height / 2 + series.clipRect.y + columnRadius * Math.sin(angle);\n        return location;\n    }\n    /**\n     * Get the label location\n     */\n    getLabelLocation(point, series, textSize, labelIndex) {\n        let location = new ChartLocation(0, 0);\n        let labelRegion = (series.type === 'Candle' && labelIndex > 1) ? point.regions[1] : point.regions[0];\n        if (series.type === 'HiloOpenClose') {\n            labelRegion = (labelIndex === 2) ? point.regions[1] : point.regions[2];\n        }\n        let xAxis = series.xAxis;\n        let yAxis = series.yAxis;\n        let isInverted = series.chart.requireInvertedAxis;\n        if (series.type === 'BoxAndWhisker') {\n            this.markerHeight = 0;\n            switch (labelIndex) {\n                case 0:\n                    location = getPoint(point.xValue, point.median, xAxis, yAxis, isInverted);\n                    break;\n                case 1:\n                    location = getPoint(point.xValue, point.maximum, xAxis, yAxis, isInverted);\n                    break;\n                case 2:\n                    location = getPoint(point.xValue, point.minimum, xAxis, yAxis, isInverted);\n                    break;\n                case 3:\n                    location = getPoint(point.xValue, point.upperQuartile, xAxis, yAxis, isInverted);\n                    break;\n                case 4:\n                    location = getPoint(point.xValue, point.lowerQuartile, xAxis, yAxis, isInverted);\n                    break;\n                default: {\n                    location = getPoint(point.xValue, point.outliers[labelIndex - 5], xAxis, yAxis, isInverted);\n                    this.markerHeight = series.marker.height / 2;\n                    break;\n                }\n            }\n            location.x = point.regions[0].x + (point.regions[0].width / 2);\n        }\n        else if (labelIndex === 0 || labelIndex === 1) {\n            location = new ChartLocation(point.symbolLocations[0].x, point.symbolLocations[0].y);\n        }\n        else if ((labelIndex === 2 || labelIndex === 3) && series.type === 'Candle') {\n            location = new ChartLocation(point.symbolLocations[1].x, point.symbolLocations[1].y);\n        }\n        else if (isInverted) {\n            location = { x: labelRegion.x + (labelRegion.width) / 2, y: labelRegion.y };\n        }\n        else {\n            location = { x: labelRegion.x + labelRegion.width, y: labelRegion.y + (labelRegion.height) / 2 };\n        }\n        //Aligning the label at the beginning of the tick, when tick size is less than text size\n        if (labelIndex > 1 && series.type === 'HiloOpenClose') {\n            if (series.chart.requireInvertedAxis) {\n                let height = labelRegion.height;\n                location.y = labelRegion.y + height / 2 + 2 * (labelIndex === 2 ? 1 : -1);\n            }\n            else {\n                let width = labelRegion.width;\n                location.x = labelRegion.x + width / 2 + 2 * (labelIndex === 2 ? 1 : -1);\n            }\n        }\n        return location;\n    }\n    calculateRectPosition(labelLocation, rect, isMinus, position, series, textSize, labelIndex, point) {\n        if (series.chart.chartAreaType === 'PolarRadar') {\n            return null;\n        }\n        let padding = 5;\n        let margin = this.margin;\n        let textLength = !this.inverted ? textSize.height : textSize.width;\n        let extraSpace = this.borderWidth + textLength / 2 + padding;\n        if (series.type.indexOf('Stacking') > -1) {\n            position = position === 'Outer' ? 'Top' : position;\n        }\n        else if (series.type.indexOf('Range') > -1) {\n            position = (position === 'Outer' || position === 'Top') ? position : 'Auto';\n        }\n        else if (series.type === 'Waterfall') {\n            position = position === 'Auto' ? 'Middle' : position;\n        }\n        switch (position) {\n            case 'Bottom':\n                labelLocation = !this.inverted ?\n                    isMinus ? (labelLocation - rect.height + extraSpace + margin.top) :\n                        (labelLocation + rect.height - extraSpace - margin.bottom) :\n                    isMinus ? (labelLocation + rect.width - extraSpace - margin.left) :\n                        (labelLocation - rect.width + extraSpace + margin.right);\n                break;\n            case 'Middle':\n                labelLocation = labelLocation = !this.inverted ?\n                    (isMinus ? labelLocation - (rect.height / 2) : labelLocation + (rect.height / 2)) :\n                    (isMinus ? labelLocation + (rect.width / 2) : labelLocation - (rect.width / 2));\n                break;\n            case 'Auto':\n                labelLocation = this.calculateRectActualPosition(labelLocation, rect, isMinus, series, textSize, labelIndex, point);\n                break;\n            default:\n                extraSpace += this.errorHeight;\n                labelLocation = this.calculateTopAndOuterPosition(labelLocation, rect, position, series, labelIndex, extraSpace, isMinus);\n                break;\n        }\n        let check = !this.inverted ? (labelLocation < rect.y || labelLocation > rect.y + rect.height) :\n            (labelLocation < rect.x || labelLocation > rect.x + rect.width);\n        this.fontBackground = check ?\n            (this.fontBackground === 'transparent' ? this.chartBackground : this.fontBackground)\n            : this.fontBackground === 'transparent' ? (point.color || series.interior) : this.fontBackground;\n        return labelLocation;\n    }\n    calculatePathPosition(labelLocation, position, series, point, size, labelIndex) {\n        let padding = 5;\n        if ((series.type.indexOf('Area') > -1 && series.type !== 'RangeArea')\n            && this.yAxisInversed && series.marker.dataLabel.position !== 'Auto') {\n            position = position === 'Top' ? 'Bottom' : position === 'Bottom' ? 'Top' : position;\n        }\n        this.fontBackground = this.fontBackground === 'transparent' ? this.chartBackground : this.fontBackground;\n        switch (position) {\n            case 'Top':\n            case 'Outer':\n                labelLocation = labelLocation - this.markerHeight - this.borderWidth - size.height / 2 - this.margin.bottom - padding -\n                    this.errorHeight;\n                break;\n            case 'Bottom':\n                labelLocation = labelLocation + this.markerHeight + this.borderWidth + size.height / 2 + this.margin.top + padding +\n                    this.errorHeight;\n                break;\n            case 'Auto':\n                labelLocation = this.calculatePathActualPosition(labelLocation, this.markerHeight, series, point, size, labelIndex);\n                break;\n        }\n        return labelLocation;\n    }\n    isDataLabelShape(style) {\n        this.isShape = (style.color !== 'transparent' || style.border.width > 0);\n        this.borderWidth = style.border.width;\n        if (!this.isShape) {\n            this.margin = { left: 0, right: 0, bottom: 0, top: 0 };\n        }\n    }\n    calculateRectActualPosition(labelLocation, rect, isMinus, series, size, labelIndex, point) {\n        let location;\n        let labelRect;\n        let isOverLap = true;\n        let position = 0;\n        let collection = this.chart.dataLabelCollections;\n        let finalPosition = series.type.indexOf('Range') !== -1 || series.type === 'Hilo' ? 2 : 4;\n        while (isOverLap && position < finalPosition) {\n            location = this.calculateRectPosition(labelLocation, rect, isMinus, this.getPosition(position), series, size, labelIndex, point);\n            if (!this.inverted) {\n                labelRect = calculateRect(new ChartLocation(this.locationX, location), size, this.margin);\n                isOverLap = labelRect.y < 0 || isCollide(labelRect, collection, series.clipRect) || labelRect.y > series.clipRect.height;\n            }\n            else {\n                labelRect = calculateRect(new ChartLocation(location, this.locationY), size, this.margin);\n                isOverLap = labelRect.x < 0 || isCollide(labelRect, collection, series.clipRect) ||\n                    labelRect.x + labelRect.width > series.clipRect.width;\n            }\n            position++;\n        }\n        return location;\n    }\n    // alignment calculation assigned here\n    calculateAlignment(value, labelLocation, alignment, isMinus) {\n        switch (alignment) {\n            case 'Far':\n                labelLocation = !this.inverted ? (isMinus ? labelLocation + value : labelLocation - value) :\n                    (isMinus ? labelLocation - value : labelLocation + value);\n                break;\n            case 'Near':\n                labelLocation = !this.inverted ? (isMinus ? labelLocation - value : labelLocation + value) :\n                    (isMinus ? labelLocation + value : labelLocation - value);\n                break;\n            case 'Center':\n                labelLocation = labelLocation;\n                break;\n        }\n        return labelLocation;\n    }\n    //calculation for top and outer position of datalabel for rect series\n    calculateTopAndOuterPosition(location, rect, position, series, index, extraSpace, isMinus) {\n        let margin = this.margin;\n        let top;\n        switch (series.type) {\n            case 'RangeColumn':\n            case 'RangeArea':\n            case 'Hilo':\n                top = (index === 0 && !this.yAxisInversed) || (index === 1 && this.yAxisInversed);\n                location = this.updateLabelLocation(position, location, extraSpace, margin, rect, top);\n                break;\n            case 'Candle':\n                top = (index === 0 || index === 2) && !this.yAxisInversed\n                    || (index === 1 || index === 3) && this.yAxisInversed;\n                location = this.updateLabelLocation(position, location, extraSpace, margin, rect, top, index > 1);\n                break;\n            case 'HiloOpenClose':\n                if (index <= 1) {\n                    top = (index === 0 && !this.yAxisInversed) || (index === 1 && this.yAxisInversed);\n                    location = this.updateLabelLocation(position, location, extraSpace, margin, rect, top);\n                }\n                else {\n                    if (this.yAxisInversed) {\n                        location = !this.inverted ? location + extraSpace + margin.top : location - extraSpace - margin.right;\n                    }\n                    else {\n                        location = !this.inverted ? location - extraSpace - margin.bottom : location + extraSpace + margin.left;\n                    }\n                }\n                break;\n            default:\n                if ((isMinus && position === 'Top') || (!isMinus && position === 'Outer')) {\n                    location = !this.inverted ? location - extraSpace - margin.bottom : location + extraSpace + margin.left;\n                }\n                else {\n                    location = !this.inverted ? location + extraSpace + margin.top : location - extraSpace - margin.right;\n                }\n                break;\n        }\n        return location;\n    }\n    /**\n     * Updates the label location\n     */\n    updateLabelLocation(position, location, extraSpace, margin, rect, top, inside = false) {\n        if (!this.inverted) {\n            if (top) {\n                location = (position === 'Outer' && !inside) ? location - extraSpace - margin.bottom : location + extraSpace + margin.top;\n            }\n            else {\n                location = (position === 'Outer' && !inside) ? location + rect.height + extraSpace + margin.top :\n                    location + rect.height - extraSpace - margin.bottom;\n            }\n        }\n        else {\n            if (top) {\n                location = (position === 'Outer' && !inside) ? location + extraSpace + margin.left : location - extraSpace - margin.right;\n            }\n            else {\n                location = (position === 'Outer' && !inside) ? location - rect.width - extraSpace - margin.right :\n                    location - rect.width + extraSpace + margin.left;\n            }\n        }\n        return location;\n    }\n    calculatePathActualPosition(y, markerSize, series, point, size, labelIndex) {\n        let points = series.points;\n        let index = point.index;\n        let yValue = points[index].yValue;\n        let position;\n        let nextPoint = points.length - 1 > index ? points[index + 1] : null;\n        let previousPoint = index > 0 ? points[index - 1] : null;\n        let yLocation;\n        let isOverLap = true;\n        let labelRect;\n        let isBottom;\n        let positionIndex;\n        let collection = this.chart.dataLabelCollections;\n        if (series.type === 'Bubble') {\n            position = 'Top';\n        }\n        else if (series.type.indexOf('Step') > -1) {\n            position = 'Top';\n            if (index) {\n                position = (!previousPoint || !previousPoint.visible || (yValue > previousPoint.yValue !== this.yAxisInversed)\n                    || yValue === previousPoint.yValue) ? 'Top' : 'Bottom';\n            }\n        }\n        else if (series.type === 'BoxAndWhisker') {\n            if (labelIndex === 1 || labelIndex === 3 || labelIndex > 4) {\n                position = series.yAxis.isInversed ? 'Bottom' : 'Top';\n            }\n            else if (labelIndex === 2 || labelIndex === 4) {\n                position = series.yAxis.isInversed ? 'Top' : 'Bottom';\n            }\n            else {\n                isOverLap = false;\n                position = 'Middle';\n                yLocation = this.calculatePathPosition(y, position, series, point, size, labelIndex);\n            }\n        }\n        else {\n            if (index === 0) {\n                position = (!nextPoint || !nextPoint.visible || yValue > nextPoint.yValue ||\n                    (yValue < nextPoint.yValue && this.yAxisInversed)) ? 'Top' : 'Bottom';\n            }\n            else if (index === points.length - 1) {\n                position = (!previousPoint || !previousPoint.visible || yValue > previousPoint.yValue ||\n                    (yValue < previousPoint.yValue && this.yAxisInversed)) ? 'Top' : 'Bottom';\n            }\n            else {\n                if (!nextPoint.visible && !(previousPoint && previousPoint.visible)) {\n                    position = 'Top';\n                }\n                else if (!nextPoint.visible || !previousPoint) {\n                    position = (nextPoint.yValue > yValue || (previousPoint && previousPoint.yValue > yValue)) ?\n                        'Bottom' : 'Top';\n                }\n                else {\n                    let slope = (nextPoint.yValue - previousPoint.yValue) / 2;\n                    let intersectY = (slope * index) + (nextPoint.yValue - (slope * (index + 1)));\n                    position = !this.yAxisInversed ? intersectY < yValue ? 'Top' : 'Bottom' :\n                        intersectY < yValue ? 'Bottom' : 'Top';\n                }\n            }\n        }\n        isBottom = position === 'Bottom';\n        positionIndex = ['Outer', 'Top', 'Bottom', 'Middle', 'Auto'].indexOf(position);\n        while (isOverLap && positionIndex < 4) {\n            yLocation = this.calculatePathPosition(y, this.getPosition(positionIndex), series, point, size, labelIndex);\n            labelRect = calculateRect(new ChartLocation(this.locationX, yLocation), size, this.margin);\n            isOverLap = labelRect.y < 0 || isCollide(labelRect, collection, series.clipRect)\n                || (labelRect.y + labelRect.height) > series.clipRect.height;\n            positionIndex = isBottom ? positionIndex - 1 : positionIndex + 1;\n            isBottom = false;\n        }\n        return yLocation;\n    }\n    /**\n     * Animates the data label.\n     * @param  {Series} series - Data label of the series gets animated.\n     * @return {void}\n     */\n    doDataLabelAnimation(series, element) {\n        let shapeElements = series.shapeElement.childNodes;\n        let textNode = series.textElement.childNodes;\n        let delay = series.animation.delay + series.animation.duration;\n        let location;\n        let length = element ? 1 : textNode.length;\n        for (let i = 0; i < length; i++) {\n            if (element) {\n                element.style.visibility = 'hidden';\n                templateAnimate(element, delay, 200, 'ZoomIn');\n            }\n            else {\n                location = new ChartLocation((+textNode[i].getAttribute('x')) + ((+textNode[i].getAttribute('width')) / 2), (+textNode[i].getAttribute('y')) + ((+textNode[i].getAttribute('height')) / 2));\n                markerAnimate(textNode[i], delay, 200, series, null, location, true);\n                if (shapeElements[i]) {\n                    location = new ChartLocation((+shapeElements[i].getAttribute('x')) + ((+shapeElements[i].getAttribute('width')) / 2), (+shapeElements[i].getAttribute('y')) + ((+shapeElements[i].getAttribute('height')) / 2));\n                    markerAnimate(shapeElements[i], delay, 200, series, null, location, true);\n                }\n            }\n        }\n    }\n    getPosition(index) {\n        return (['Outer', 'Top', 'Bottom', 'Middle', 'Auto'][index]);\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        // Returns the module name\n        return 'DataLabel';\n    }\n    /**\n     * To destroy the dataLabel for series.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        // Destroy method performed here\n    }\n}\n","import { Mean, RectOption } from '../../common/utils/helper';\nimport { getPoint, PathOption, sum, templateAnimate } from '../../common/utils/helper';\n/**\n * `ErrorBar` module is used to render the error bar for series.\n */\nexport class ErrorBar {\n    /**\n     * Constructor for the error bar module.\n     * @private\n     */\n    constructor(chart) {\n        this.chart = chart;\n    }\n    /**\n     * Render the error bar for series.\n     * @return {void}\n     */\n    render(series) {\n        if (this.chart.chartAreaType === 'PolarRadar') {\n            return null;\n        }\n        this.createElement(series);\n        this.renderErrorBar(series);\n    }\n    renderErrorBar(series) {\n        let seriesIndex = series.index;\n        let point;\n        let symbolId;\n        let capId;\n        let errorbar = series.errorBar;\n        let errorBarCap = series.errorBar.errorBarCap;\n        let border = series.border;\n        let start;\n        let mid;\n        let end;\n        let isInverted;\n        let isVert;\n        let errorDirection = ['', ''];\n        for (let point of series.points) {\n            if (point.visible && point.symbolLocations[0]) {\n                let errorX = 0;\n                let errorY = 0;\n                switch (errorbar.mode) {\n                    case 'Vertical':\n                        errorY = errorbar.verticalError;\n                        break;\n                    case 'Horizontal':\n                        errorX = errorbar.horizontalError;\n                        break;\n                    case 'Both':\n                        errorX = errorbar.horizontalError;\n                        errorY = errorbar.verticalError;\n                        break;\n                }\n                errorDirection = this['calculate' + errorbar.type + 'Value'](point, series, this.chart.requireInvertedAxis, errorX, errorY);\n                symbolId = this.chart.element.id + '_Series_' + '_ErrorBarGroup_' + seriesIndex + '_Point_' + point.index;\n                capId = this.chart.element.id + '_Series_' + '_ErrorBarCap_' + seriesIndex + '_Point_' + point.index;\n                let shapeOption = new PathOption(symbolId, '', errorbar.width, errorbar.color || this.chart.themeStyle.errorBar, null, '', errorDirection[0]);\n                let path = this.chart.renderer.drawPath(shapeOption);\n                series.errorBarElement.appendChild(path);\n                let capOption = new PathOption(capId, '', errorBarCap.width, errorBarCap.color || this.chart.themeStyle.errorBar, null, '', errorDirection[1]);\n                let capPath = this.chart.renderer.drawPath(capOption);\n                series.errorBarElement.appendChild(capPath);\n            }\n        }\n    }\n    // path calculation for error bar\n    findLocation(point, series, isInverted, x1, y1) {\n        let errorbar = series.errorBar;\n        let direction = errorbar.direction;\n        let location = [];\n        let stackedValue = series.stackedValues;\n        let yValue = series.type.indexOf('Stacking') > -1 ? series.stackedValues.endValues[point.index] :\n            (series.seriesType === 'HighLow' || series.seriesType === 'HighLowOpenClose') ? (series.points[point.index].high) :\n                point.yValue;\n        let startPoint = getPoint(point.xValue + ((direction === 'Plus' || direction === 'Both') ? (errorbar.type === 'Custom' &&\n            (errorbar.mode === 'Horizontal' || errorbar.mode === 'Both')) ? x1 = errorbar.horizontalPositiveError : x1 : 0), yValue + ((direction === 'Plus' || direction === 'Both') ? (errorbar.type === 'Custom' &&\n            (errorbar.mode === 'Vertical' || errorbar.mode === 'Both')) ? y1 = errorbar.verticalPositiveError : y1 : 0), series.xAxis, series.yAxis, isInverted);\n        location.push(startPoint);\n        if (series.isRectSeries) {\n            let midPoint = point.symbolLocations[0];\n            location.push(midPoint);\n        }\n        else {\n            let midPoint = getPoint(point.xValue, point.yValue, series.xAxis, series.yAxis, isInverted);\n            location.push(midPoint);\n        }\n        let endPoint = getPoint(point.xValue - ((direction === 'Minus' || direction === 'Both') ? (errorbar.type === 'Custom' &&\n            (errorbar.mode === 'Horizontal' || errorbar.mode === 'Both')) ? x1 = errorbar.horizontalNegativeError : x1 : 0), yValue - ((direction === 'Minus' || direction === 'Both') ? (errorbar.type === 'Custom' &&\n            (errorbar.mode === 'Vertical' || errorbar.mode === 'Both')) ? y1 = errorbar.verticalNegativeError : y1 : 0), series.xAxis, series.yAxis, isInverted);\n        location.push(endPoint);\n        // calculate error height for datalabel position alignment\n        point.error = (errorbar.mode === 'Vertical') ? errorbar.verticalError : errorbar.horizontalError;\n        this.negativeHeight = (errorbar.mode === 'Vertical' || errorbar.mode === 'Both') ? (isInverted ? (location[1].x - location[2].x) :\n            (location[2].y - location[1].y)) : 0;\n        this.positiveHeight = (errorbar.mode === 'Vertical' || errorbar.mode === 'Both') ? (isInverted ? (location[0].x - location[1].x) :\n            (location[1].y - location[0].y)) : 0;\n        return this.getErrorDirection(location[0], location[1], location[2], series, isInverted);\n    }\n    // calculations for eror bar types\n    calculateFixedValue(point, series, isInverted, errorX, errorY, xAxis, yAxis) {\n        let errorbar = series.errorBar;\n        return this.findLocation(point, series, isInverted, errorX, errorY);\n    }\n    calculatePercentageValue(point, series, isInverted, errorX, errorY, xAxis, yAxis) {\n        errorX = (errorX / 100) * point.xValue;\n        errorY = (errorY / 100) * point.yValue;\n        return this.findLocation(point, series, isInverted, errorX, errorY);\n    }\n    calculateStandardDeviationValue(point, series, isInverted, errorX, errorY, xAxis, yAxis) {\n        let getMean = this.meanCalculation(series, series.errorBar.mode);\n        errorX = errorX * (getMean.horizontalSquareRoot + getMean.horizontalMean);\n        errorY = errorY * (getMean.verticalSquareRoot + getMean.verticalMean);\n        return this.findLocation(point, series, isInverted, errorX, errorY);\n    }\n    calculateStandardErrorValue(point, series, isInverted, errorX, errorY, xAxis, yAxis) {\n        let length = series.points.length;\n        let getMean = this.meanCalculation(series, series.errorBar.mode);\n        errorX = ((errorX * getMean.horizontalSquareRoot) / Math.sqrt(length));\n        errorY = ((errorY * getMean.verticalSquareRoot) / Math.sqrt(length));\n        return this.findLocation(point, series, isInverted, errorX, errorY);\n    }\n    calculateCustomValue(point, series, isInverted, errorX, errorY, xAxis, yAxis) {\n        let errorbar = series.errorBar;\n        return this.findLocation(point, series, isInverted, errorX, errorY);\n    }\n    getHorizontalDirection(start, mid, end, direction, errorMode, capLength) {\n        let path = '';\n        let capDirection = '';\n        path += ' M ' + start.x + ' ' + mid.y + ' L ' + end.x + ' ' + mid.y;\n        capDirection += (direction === 'Plus' || direction === 'Both') ? ' M ' + (start.x) + ' ' + (mid.y - capLength) + ' L '\n            + (start.x) + ' ' + (mid.y + capLength) : '';\n        capDirection += (direction === 'Minus' || direction === 'Both') ? ' M ' + (end.x) + ' ' + (mid.y - capLength) + ' L '\n            + (end.x) + ' ' + (mid.y + capLength) : ' ';\n        return [path, capDirection];\n    }\n    getVerticalDirection(start, mid, end, direction, errorMode, capLength) {\n        let path = '';\n        let capDirection = '';\n        path += ' M ' + mid.x + ' ' + start.y + ' L ' + mid.x + ' ' + end.y;\n        capDirection += (direction === 'Plus' || direction === 'Both') ? ' M ' + (mid.x - capLength) + ' ' + start.y + ' L '\n            + (mid.x + capLength) + ' ' + start.y : '';\n        capDirection += (direction === 'Minus' || direction === 'Both') ? ' M ' + (mid.x - capLength) + ' ' + end.y + ' L '\n            + (mid.x + capLength) + ' ' + end.y : '';\n        return [path, capDirection];\n    }\n    getBothDirection(start, mid, end, direction, errorMode, capLength) {\n        let capDirection = '';\n        let path = '';\n        let pathH = this.getHorizontalDirection(start, mid, end, direction, errorMode, capLength);\n        let pathV = this.getVerticalDirection(start, mid, end, direction, errorMode, capLength);\n        path = pathH[0].concat(pathV[0]);\n        capDirection = pathH[1].concat(pathV[1]);\n        return [path, capDirection];\n    }\n    getErrorDirection(start, mid, end, series, isInverted) {\n        let direction = series.errorBar.direction;\n        let mode = series.errorBar.mode;\n        let capLength = series.errorBar.errorBarCap.length;\n        let path = '';\n        let paths;\n        let capDirection = '';\n        let errorMode = mode;\n        switch (mode) {\n            case 'Both':\n                errorMode = mode;\n                break;\n            case 'Horizontal':\n                errorMode = (isInverted) ? 'Vertical' : mode;\n                break;\n            case 'Vertical':\n                errorMode = (isInverted) ? 'Horizontal' : mode;\n                break;\n        }\n        switch (errorMode) {\n            case 'Horizontal':\n                paths = this.getHorizontalDirection(start, mid, end, direction, errorMode, capLength);\n                break;\n            case 'Vertical':\n                paths = this.getVerticalDirection(start, mid, end, direction, errorMode, capLength);\n                break;\n            case 'Both':\n                paths = this.getBothDirection(start, mid, end, direction, errorMode, capLength);\n                break;\n        }\n        return [paths[0], paths[1]];\n    }\n    // mean calculation for standard deviation and standard error\n    meanCalculation(series, mode) {\n        let sumOfX = 0;\n        let sumOfY = 0;\n        let verticalMean = 0;\n        let horizontalMean = 0;\n        let horSquareDev;\n        let verStandardMean;\n        let horStandardMean;\n        let verSquareTotal;\n        let horSquareTotal;\n        let verSquareRoot;\n        let horSquareRoot;\n        let length = series.points.length;\n        switch (mode) {\n            case 'Vertical':\n                sumOfY = sum(series.yData);\n                verticalMean = sumOfY / length;\n                break;\n            case 'Horizontal':\n                sumOfX = sum(series.xData);\n                horizontalMean = sumOfX / length;\n                break;\n            case 'Both':\n                sumOfY = sum(series.yData);\n                verticalMean = sumOfY / length;\n                sumOfX = sum(series.xData);\n                horizontalMean = sumOfX / length;\n        }\n        for (let point of series.points) {\n            if (mode === 'Vertical') {\n                sumOfY = sumOfY + Math.pow((point.yValue - verticalMean), 2);\n            }\n            else if (mode === 'Horizontal') {\n                sumOfX = sumOfX + Math.pow((point.xValue - horizontalMean), 2);\n            }\n            else {\n                sumOfY = sumOfY + Math.pow((point.yValue - verticalMean), 2);\n                sumOfX = sumOfX + Math.pow((point.xValue - horizontalMean), 2);\n            }\n        }\n        verStandardMean = sumOfY / (length - 1);\n        verSquareRoot = Math.sqrt(sumOfY / (length - 1));\n        horStandardMean = sumOfX / (length - 1);\n        horSquareRoot = Math.sqrt(sumOfX / (length - 1));\n        return new Mean(verStandardMean, verSquareRoot, horStandardMean, horSquareRoot, verticalMean, horizontalMean);\n    }\n    createElement(series) {\n        let explodeValue = 5;\n        let render = series.chart.renderer;\n        let transform;\n        transform = series.chart.chartAreaType === 'Cartesian' ? 'translate(' + series.clipRect.x + ',' + (series.clipRect.y) + ')' : '';\n        let markerHeight = (series.marker.height + explodeValue) / 2;\n        let markerWidth = (series.marker.width + explodeValue) / 2;\n        if (series.chart.chartAreaType === 'Cartesian') {\n            let errorBarClipRect = render.drawClipPath(new RectOption(this.chart.element.id + '_ChartErrorBarClipRect_' + series.index, 'transparent', { width: 1, color: 'Gray' }, 1, {\n                x: -markerWidth, y: -markerHeight,\n                width: series.clipRect.width + markerWidth * 2, height: series.clipRect.height + markerHeight * 2\n            }));\n            series.errorBarElement = render.createGroup({\n                'id': this.chart.element.id + 'ErrorBarGroup' + series.index,\n                'transform': transform,\n                'clip-path': 'url(#' + this.chart.element.id + '_ChartErrorBarClipRect_' + series.index + ')'\n            });\n            series.errorBarElement.appendChild(errorBarClipRect);\n        }\n    }\n    /**\n     * Animates the series.\n     * @param  {Series} series - Defines the series to animate.\n     * @return {void}\n     */\n    doErrorBarAnimation(series) {\n        let errorBarElements = series.errorBarElement.childNodes;\n        if (!errorBarElements) {\n            return null;\n        }\n        let delay = series.animation.delay + series.animation.duration;\n        let j = 1;\n        while (j < errorBarElements.length) {\n            for (let i = 0; i < series.points.length; i++) {\n                if (!series.points[i].symbolLocations[0]) {\n                    continue;\n                }\n                errorBarElements[j].style.visibility = 'hidden';\n                templateAnimate(errorBarElements[j], delay, 350, series.chart.requireInvertedAxis ? 'SlideLeftIn' : 'SlideBottomIn', false);\n            }\n            j++;\n        }\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        // Returns the module name\n        return 'ErrorBar';\n    }\n    /**\n     * To destroy the errorBar for series.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        // Destroy method performed here\n    }\n}\n","/**\n * Chart legend\n */\nimport { remove, Browser } from '@syncfusion/ej2-base';\nimport { extend } from '@syncfusion/ej2-base';\nimport { LegendOptions, BaseLegend } from '../../common/legend/legend';\nimport { measureText, textTrim } from '../../common/utils/helper';\nimport { legendRender } from '../../common/model/constants';\n/**\n * `Legend` module is used to render legend for the chart.\n */\nexport class Legend extends BaseLegend {\n    constructor(chart) {\n        super(chart);\n        this.library = this;\n        this.addEventListener();\n    }\n    /**\n     * Binding events for legend module.\n     */\n    addEventListener() {\n        if (this.chart.isDestroyed) {\n            return;\n        }\n        this.chart.on(Browser.touchMoveEvent, this.mouseMove, this);\n        this.chart.on('click', this.click, this);\n        this.chart.on(Browser.touchEndEvent, this.mouseEnd, this);\n    }\n    /**\n     * UnBinding events for legend module.\n     */\n    removeEventListener() {\n        if (this.chart.isDestroyed) {\n            return;\n        }\n        this.chart.off(Browser.touchMoveEvent, this.mouseMove);\n        this.chart.off('click', this.click);\n        this.chart.off(Browser.touchEndEvent, this.mouseEnd);\n    }\n    /**\n     * To handle mosue move for legend module\n     */\n    mouseMove(e) {\n        if (this.chart.legendSettings.visible && !this.chart.isTouch) {\n            this.move(e);\n        }\n    }\n    /**\n     * To handle mosue end for legend module\n     */\n    mouseEnd(e) {\n        if (this.chart.legendSettings.visible && this.chart.isTouch) {\n            this.move(e);\n        }\n    }\n    /**\n     * Get the legend options.\n     * @return {void}\n     * @private\n     */\n    getLegendOptions(visibleSeriesCollection, chart) {\n        this.legendCollections = [];\n        let seriesType;\n        for (let series of visibleSeriesCollection) {\n            if (series.category !== 'Indicator') {\n                seriesType = (chart.chartAreaType === 'PolarRadar') ? series.drawType :\n                    series.type;\n                this.legendCollections.push(new LegendOptions(series.name, series.interior, series.legendShape, series.visible, seriesType, series.marker.shape, series.marker.visible));\n            }\n        }\n    }\n    /** @private */\n    getLegendBounds(availableSize, legendBounds, legend) {\n        let padding = legend.padding;\n        let extraHeight = 0;\n        let extraWidth = 0;\n        if (!this.isVertical) {\n            extraHeight = !legend.height ? ((availableSize.height / 100) * 5) : 0;\n        }\n        else {\n            extraWidth = !legend.width ? ((availableSize.width / 100) * 5) : 0;\n        }\n        legendBounds.height += extraHeight;\n        legendBounds.width += extraWidth;\n        let shapeHeight = legend.shapeHeight;\n        let shapeWidth = legend.shapeWidth;\n        let shapePadding = legend.shapePadding;\n        let maximumWidth = 0;\n        let rowWidth = 0;\n        let legendWidth = 0;\n        let columnHeight = 0;\n        let rowCount = 0;\n        let legendEventArgs;\n        this.maxItemHeight = Math.max(measureText('MeasureText', legend.textStyle).height, legend.shapeHeight);\n        let render = false;\n        for (let legendOption of this.legendCollections) {\n            legendEventArgs = {\n                fill: legendOption.fill, text: legendOption.text, shape: legendOption.shape,\n                markerShape: legendOption.markerShape, name: legendRender, cancel: false\n            };\n            this.chart.trigger(legendRender, legendEventArgs);\n            legendOption.render = !legendEventArgs.cancel;\n            legendOption.text = legendEventArgs.text;\n            legendOption.fill = legendEventArgs.fill;\n            legendOption.shape = legendEventArgs.shape;\n            legendOption.markerShape = legendEventArgs.markerShape;\n            legendOption.textSize = measureText(legendOption.text, legend.textStyle);\n            if (legendOption.render && legendOption.text !== '') {\n                render = true;\n                legendWidth = shapeWidth + shapePadding + legendOption.textSize.width + padding;\n                rowWidth = rowWidth + legendWidth;\n                if (legendBounds.width < (padding + rowWidth) || this.isVertical) {\n                    maximumWidth = Math.max(maximumWidth, (rowWidth + padding - (this.isVertical ? 0 : legendWidth)));\n                    if (rowCount === 0 && (legendWidth !== rowWidth)) {\n                        rowCount = 1;\n                    }\n                    rowWidth = this.isVertical ? 0 : legendWidth;\n                    rowCount++;\n                    columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding;\n                }\n            }\n        }\n        columnHeight = Math.max(columnHeight, (this.maxItemHeight + padding) + padding);\n        this.isPaging = legendBounds.height < columnHeight;\n        this.totalPages = rowCount;\n        if (render) {\n            this.setBounds(Math.max((rowWidth + padding), maximumWidth), columnHeight, legend, legendBounds);\n        }\n        else {\n            this.setBounds(0, 0, legend, legendBounds);\n        }\n    }\n    /** @private */\n    getRenderPoint(legendOption, start, textPadding, prevLegend, rect, count, firstLegend) {\n        let padding = this.legend.padding;\n        let previousBound = (prevLegend.location.x + textPadding + prevLegend.textSize.width);\n        if ((previousBound + (legendOption.textSize.width + textPadding)) > (rect.x + rect.width + this.legend.shapeWidth / 2) ||\n            this.isVertical) {\n            legendOption.location.x = start.x;\n            legendOption.location.y = (count === firstLegend) ? prevLegend.location.y :\n                prevLegend.location.y + this.maxItemHeight + padding;\n        }\n        else {\n            legendOption.location.x = (count === firstLegend) ? prevLegend.location.x : previousBound;\n            legendOption.location.y = prevLegend.location.y;\n        }\n        let availwidth = (this.legendBounds.x + this.legendBounds.width) - (legendOption.location.x +\n            textPadding - this.legend.shapeWidth / 2);\n        legendOption.text = textTrim(+availwidth.toFixed(4), legendOption.text, this.legend.textStyle);\n    }\n    /** @private */\n    LegendClick(seriesIndex) {\n        let chart = this.chart;\n        let series = chart.visibleSeries[seriesIndex];\n        let legend = this.legendCollections[seriesIndex];\n        let selectedDataIndexes = [];\n        if (chart.selectionModule) {\n            selectedDataIndexes = extend([], chart.selectionModule.selectedDataIndexes, null, true);\n        }\n        if (chart.legendSettings.toggleVisibility) {\n            if (!series.visible) {\n                series.visible = true;\n            }\n            else {\n                series.visible = false;\n            }\n            legend.visible = (series.visible);\n            if (chart.svgObject.childNodes.length > 0) {\n                while (chart.svgObject.lastChild) {\n                    chart.svgObject.removeChild(chart.svgObject.lastChild);\n                }\n                remove(chart.svgObject);\n            }\n            chart.animateSeries = false;\n            chart.removeSvg();\n            chart.refreshAxis();\n            series.refreshAxisLabel();\n            this.refreshSeries(chart.visibleSeries);\n            chart.refreshBound();\n            if (selectedDataIndexes.length > 0) {\n                chart.selectionModule.selectedDataIndexes = selectedDataIndexes;\n                chart.selectionModule.redrawSelection(chart, chart.selectionMode);\n            }\n        }\n        else if (chart.selectionModule) {\n            chart.selectionModule.legendSelection(chart, seriesIndex);\n        }\n    }\n    refreshSeries(seriesCollection) {\n        for (let series of seriesCollection) {\n            series.position = undefined;\n        }\n    }\n    /**\n     * To show the tooltip for the trimmed text in legend.\n     * @return {void}\n     */\n    click(event) {\n        if (!this.chart.legendSettings.visible) {\n            return;\n        }\n        let targetId = event.target.id;\n        let legendItemsId = [this.legendID + '_text_', this.legendID + '_shape_marker_',\n            this.legendID + '_shape_'];\n        let seriesIndex;\n        for (let id of legendItemsId) {\n            if (targetId.indexOf(id) > -1) {\n                seriesIndex = parseInt(targetId.split(id)[1], 10);\n                this.LegendClick(seriesIndex);\n            }\n        }\n        if (targetId.indexOf(this.legendID + '_pageup') > -1) {\n            this.changePage(event, true);\n        }\n        else if (targetId.indexOf(this.legendID + '_pagedown') > -1) {\n            this.changePage(event, false);\n        }\n    }\n    /**\n     * Get module name\n     */\n    getModuleName() {\n        return 'Legend';\n    }\n    /**\n     * To destroy the Legend.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        this.removeEventListener();\n    }\n}\n","import { createTemplate, measureElementRect, logBase } from '../utils/helper';\nimport { ChartLocation, stringToNumber, appendElement, withIn, Rect } from '../utils/helper';\nimport { getPoint } from '../utils/helper';\nimport { createElement } from '@syncfusion/ej2-base';\nimport { annotationRender } from '../model/constants';\nimport { DataUtil } from '@syncfusion/ej2-data';\n/**\n * Annotation Module handles the Annotation for chart and accumulation series.\n */\nexport class AnnotationBase {\n    /**\n     * Constructor for chart and accumulation annotation\n     * @param control\n     */\n    constructor(control) {\n        this.control = control;\n    }\n    /**\n     * Method to render the annotation for chart and accumulation series.\n     * @private\n     * @param annotation\n     * @param index\n     */\n    render(annotation, index) {\n        this.isChart = this.control.getModuleName() === 'chart';\n        this.annotation = annotation;\n        let childElement = createTemplate(createElement('div', {\n            id: this.control.element.id + '_Annotation_' + index,\n            styles: 'position: absolute;'\n        }), index, annotation.content, this.control);\n        return childElement;\n    }\n    /**\n     * Method to calculate the location for annotation - coordinate unit as pixel.\n     * @private\n     * @param location\n     */\n    setAnnotationPixelValue(location) {\n        let rect;\n        rect = this.annotation.region === 'Chart' ?\n            new Rect(0, 0, this.control.availableSize.width, this.control.availableSize.height) :\n            this.isChart ?\n                this.control.chartAxisLayoutPanel.seriesClipRect :\n                this.control.series[0].accumulationBound;\n        location.x = ((typeof this.annotation.x !== 'string') ?\n            ((typeof this.annotation.x === 'number') ? this.annotation.x : 0) :\n            stringToNumber(this.annotation.x, rect.width)) + rect.x;\n        location.y = ((typeof this.annotation.y === 'number') ? this.annotation.y :\n            stringToNumber(this.annotation.y, rect.height)) + rect.y;\n        return true;\n    }\n    /**\n     * Method to calculate the location for annotation - coordinate unit as point.\n     * @private\n     * @param location\n     */\n    setAnnotationPointValue(location) {\n        let symbolLocation = new ChartLocation(0, 0);\n        if (this.isChart) {\n            let xAxis;\n            let yAxis;\n            let chart = this.control;\n            let annotation = this.annotation;\n            let xValue;\n            let isLog = false;\n            let xAxisName = annotation.xAxisName;\n            let yAxisName = annotation.yAxisName;\n            let isInverted = chart.requireInvertedAxis;\n            for (let axis of chart.axisCollections) {\n                if (xAxisName === axis.name || (xAxisName == null && axis.name === 'primaryXAxis')) {\n                    xAxis = axis;\n                    if (xAxis.valueType.indexOf('Category') > -1) {\n                        let xAnnotation = xAxis.valueType === 'DateTimeCategory' ? (annotation.x.getTime()).toString() :\n                            annotation.x;\n                        if (xAxis.labels.indexOf(xAnnotation) < 0) {\n                            return false;\n                        }\n                        else {\n                            xValue = xAxis.labels.indexOf(xAnnotation);\n                        }\n                    }\n                    else if (xAxis.valueType === 'DateTime') {\n                        let option = { skeleton: 'full', type: 'dateTime' };\n                        xValue = (typeof this.annotation.x === 'object') ?\n                            Date.parse(chart.intl.getDateParser(option)(chart.intl.getDateFormat(option)(new Date(DataUtil.parse.parseJson({ val: annotation.x }).val)))) : 0;\n                    }\n                    else {\n                        xValue = +annotation.x;\n                    }\n                }\n                else if (yAxisName === axis.name || (yAxisName == null && axis.name === 'primaryYAxis')) {\n                    yAxis = axis;\n                    isLog = yAxis.valueType === 'Logarithmic';\n                }\n            }\n            if (xAxis && yAxis && withIn(xAxis.valueType === 'Logarithmic' ? logBase(xValue, xAxis.logBase) : xValue, xAxis.visibleRange)) {\n                symbolLocation = getPoint(xValue, withIn((isLog ? logBase(+this.annotation.y, yAxis.logBase) : +this.annotation.y), yAxis.visibleRange) ? +annotation.y :\n                    isLog ? Math.pow(yAxis.logBase, yAxis.visibleRange.max) :\n                        +annotation.y > yAxis.visibleRange.max ? yAxis.visibleRange.max : yAxis.visibleRange.min, xAxis, yAxis, isInverted);\n                location.x = symbolLocation.x + (isInverted ? yAxis.rect.x : xAxis.rect.x);\n                location.y = symbolLocation.y + (isInverted ? xAxis.rect.y : yAxis.rect.y);\n            }\n            else {\n                return false;\n            }\n            return true;\n        }\n        else {\n            return this.setAccumulationPointValue(location);\n        }\n    }\n    /**\n     * To process the annotation for accumulation chart\n     * @param annotation\n     * @param index\n     * @param parentElement\n     */\n    processAnnotation(annotation, index, parentElement) {\n        let annotationElement;\n        let location;\n        location = new ChartLocation(0, 0);\n        annotationElement = this.render(annotation, index);\n        if (this['setAnnotation' + annotation.coordinateUnits + 'Value'](location)) {\n            this.setElementStyle(location, annotationElement, parentElement);\n        }\n    }\n    /**\n     * Method to calculate the location for annotation - coordinate unit as point in accumulation chart.\n     * @private\n     * @param location\n     */\n    setAccumulationPointValue(location) {\n        let accumulation = this.control;\n        let point;\n        for (let accPoint of accumulation.visibleSeries[0].points) {\n            if (typeof accPoint.x === 'object') {\n                if (Date.parse(accPoint.x) === Date.parse(this.annotation.x) &&\n                    accPoint.y === this.annotation.y) {\n                    point = accPoint;\n                    break;\n                }\n            }\n            else {\n                if (accPoint.x === this.annotation.x && accPoint.y === this.annotation.y) {\n                    point = accPoint;\n                    break;\n                }\n            }\n        }\n        if (point && point.visible) {\n            location.x = point.symbolLocation.x;\n            location.y = point.symbolLocation.y;\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    /**\n     * Method to set the element style for accumulation / chart annotation.\n     * @private\n     * @param location\n     * @param element\n     * @param parentElement\n     */\n    setElementStyle(location, element, parentElement) {\n        let elementRect = measureElementRect(element);\n        let argsData = {\n            cancel: false, name: annotationRender, content: element,\n            location: location\n        };\n        this.control.trigger(annotationRender, argsData);\n        if (!argsData.cancel) {\n            argsData.content.style.left = this.setAlignmentValue(this.annotation.horizontalAlignment, elementRect.width, argsData.location.x) + 'px';\n            argsData.content.style.top = this.setAlignmentValue(this.annotation.verticalAlignment, elementRect.height, argsData.location.y) + 'px';\n            argsData.content.setAttribute('aria-label', this.annotation.description || 'Annotation');\n            appendElement(argsData.content, parentElement);\n        }\n    }\n    /**\n     * Method to calculate the alignment value for annotation.\n     * @private\n     * @param alignment\n     * @param size\n     * @param value\n     */\n    setAlignmentValue(alignment, size, value) {\n        switch (alignment) {\n            case 'Top':\n            case 'Near':\n                value -= size;\n                break;\n            case 'Bottom':\n            case 'Far':\n                value += 0;\n                break;\n            case 'Middle':\n            case 'Center':\n                value -= (size / 2);\n                break;\n        }\n        return value;\n    }\n}\n","import { AnnotationBase } from '../../common/annotation/annotation';\nimport { appendElement } from '../../common/utils/helper';\nimport { createElement } from '@syncfusion/ej2-base';\n/**\n * `ChartAnnotation` module handles the annotation for chart.\n */\nexport class ChartAnnotation extends AnnotationBase {\n    /**\n     * Constructor for chart annotation.\n     * @private.\n     */\n    constructor(control, annotations) {\n        super(control);\n        this.chart = control;\n    }\n    /**\n     * Method to render the annotation for chart\n     * @param element\n     * @private\n     */\n    renderAnnotations(element) {\n        this.annotations = this.chart.annotations;\n        this.parentElement = createElement('div', {\n            id: this.chart.element.id + '_Annotation_Collections'\n        });\n        this.annotations.map((annotation, index) => {\n            this.processAnnotation(annotation, index, this.parentElement);\n        });\n        appendElement(this.parentElement, element);\n    }\n    /**\n     * To destroy the annotation.\n     * @return {void}\n     * @private\n     */\n    destroy(control) {\n        // Destroy method performed here\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        // Returns te module name\n        return 'Annotation';\n    }\n}\n","import { withInRange, PathOption, sum } from '../../common/utils/helper';\nimport { Size, getSaturationColor, getPoint } from '../../common/utils/helper';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { ColumnBase } from './column-base';\nimport { getMedian } from '../../common/utils/helper';\n/**\n * `BoxAndWhiskerSeries` module is used to render the box and whisker series.\n */\nexport class BoxAndWhiskerSeries extends ColumnBase {\n    /**\n     * Render BoxAndWhisker series.\n     * @return {void}\n     * @private\n     */\n    render(series, xAxis, yAxis, isInverted) {\n        let sideBySideInfo = this.getSideBySideInfo(series);\n        let argsData;\n        let centerRegion;\n        let borderWidth = series.border.width || 1;\n        for (let point of series.points) {\n            point.symbolLocations = [];\n            point.regions = [];\n            let centerRegion;\n            if (point.visible && withInRange(series.points[point.index - 1], point, series.points[point.index + 1], series)) {\n                this.findBoxPlotValues(point.y, point, series.boxPlotMode);\n                //region to cover the top and bottom ticks\n                this.updateTipRegion(series, point, sideBySideInfo);\n                //get middle rect\n                centerRegion = this.getRectangle((point.xValue + sideBySideInfo.start), point.upperQuartile, (point.xValue + sideBySideInfo.end), point.lowerQuartile, series);\n                point.regions.push(centerRegion);\n                argsData = this.triggerEvent(series, point, series.interior, {\n                    color: (!isNullOrUndefined(series.border.color) && series.border.color !== 'transparent') ? series.border.color :\n                        getSaturationColor(series.interior, -0.6),\n                    width: series.border.width ? series.border.width : 1\n                });\n                if (!argsData.cancel) {\n                    this.renderBoxAndWhisker(series, point, centerRegion, argsData, this.getPathString(point, series, getPoint(point.xValue, point.median, xAxis, yAxis, isInverted), getPoint(point.xValue + sideBySideInfo.median, point.average, xAxis, yAxis, isInverted)), sideBySideInfo.median);\n                }\n            }\n        }\n        if (series.marker.visible) {\n            series.chart.markerRender.render(series);\n        }\n    }\n    /**\n     * update the tip region fo box plot\n     * @param series\n     * @param point\n     * @param sideBySideInfo\n     */\n    updateTipRegion(series, point, sideBySideInfo) {\n        let tipRegion = this.getRectangle((point.xValue + sideBySideInfo.median), point.maximum, (point.xValue + sideBySideInfo.median), point.minimum, series);\n        this.updateTipSize(series, point, tipRegion, series.chart.requireInvertedAxis);\n    }\n    /**\n     * Update tip size to tip regions\n     * @param series\n     * @param point\n     * @param region\n     * @param isInverted\n     */\n    updateTipSize(series, point, region, isInverted) {\n        let borderWidth = series.border.width || 1;\n        if (!isInverted) {\n            region.x -= borderWidth / 2;\n            region.width = region.width || borderWidth;\n        }\n        else {\n            region.y -= borderWidth / 2;\n            region.height = region.height || borderWidth;\n        }\n        point.regions.push(region);\n    }\n    /**\n     * Calculation for path direction performed here\n     * @param point\n     * @param series\n     * @param median\n     * @param average\n     */\n    getPathString(point, series, median, average) {\n        let topRect = point.regions[0];\n        let midRect = point.regions[1];\n        let direction = '';\n        let width = series.chart.requireInvertedAxis ? topRect.height : topRect.width;\n        let center = series.chart.requireInvertedAxis ? topRect.y + topRect.height / 2 :\n            topRect.x + topRect.width / 2;\n        let midWidth = midRect.x + midRect.width;\n        let midHeight = midRect.y + midRect.height;\n        let topWidth = topRect.x + topRect.width;\n        let topHeight = topRect.y + topRect.height;\n        if (!series.chart.requireInvertedAxis) {\n            this.updateTipSize(series, point, { x: midRect.x, y: topRect.y, width: midWidth - midRect.x, height: 0 }, true);\n            this.updateTipSize(series, point, { x: midRect.x, y: topHeight, width: midWidth - midRect.x, height: 0 }, true);\n            direction += 'M ' + midRect.x + ' ' + topRect.y + ' ' + ' L ' + midWidth + ' ' + topRect.y;\n            direction += ' M ' + center + ' ' + topRect.y + ' ' + ' L ' + center + ' ' + midRect.y;\n            direction += ' M ' + midRect.x + ' ' + midRect.y + ' ' + ' L ' + midWidth + ' ' + midRect.y +\n                ' L ' + midWidth + ' ' + midHeight + ' L ' + midRect.x + ' ' + midHeight + ' Z';\n            direction += ' M ' + center + ' ' + midHeight + ' L ' + center + ' ' + topHeight;\n            direction += ' M ' + midRect.x + ' ' + topHeight + ' L ' + midWidth + ' ' + topHeight;\n            direction += ' M ' + midRect.x + ' ' + median.y + ' L ' + midWidth + ' ' + median.y;\n            direction += series.showMean ?\n                ' M ' + (average.x - 5) + ' ' + (average.y - 5) + ' L ' + (average.x + 5) + ' ' + (average.y + 5) +\n                    ' M ' + (average.x + 5) + ' ' + (average.y - 5) + ' L ' + (average.x - 5) + ' ' + (average.y + 5) : '';\n        }\n        else {\n            this.updateTipSize(series, point, { x: topRect.x, y: midRect.y, width: 0, height: midHeight - midRect.y }, false);\n            this.updateTipSize(series, point, { x: topWidth, y: midRect.y, width: 0, height: midHeight - midRect.y }, true);\n            direction += 'M ' + topRect.x + ' ' + midRect.y + ' L ' + topRect.x + ' ' + midHeight;\n            direction += 'M ' + topRect.x + ' ' + center + ' ' + ' L ' + midRect.x + ' ' + center;\n            direction += ' M ' + midRect.x + ' ' + midRect.y + ' ' + ' L ' + midWidth + ' ' + midRect.y +\n                ' L ' + midWidth + ' ' + midHeight + ' L ' + midRect.x + ' ' + midHeight + ' Z';\n            direction += ' M ' + midWidth + ' ' + center + ' L ' + topWidth + ' ' + center;\n            direction += ' M ' + topWidth + ' ' + midRect.y + ' L ' + topWidth + ' ' + midHeight;\n            direction += ' M ' + median.x + ' ' + midRect.y + ' ' + ' L ' + median.x + ' ' + midHeight;\n            direction += series.showMean ?\n                'M ' + (average.x + 5) + ' ' + (average.y - 5) + ' L ' + (average.x - 5) + ' ' + (average.y + 5) +\n                    'M ' + (average.x - 5) + ' ' + (average.y - 5) + ' L ' + (average.x + 5) + ' ' + (average.y + 5) : '';\n        }\n        return direction;\n    }\n    /**\n     * Rendering for box and whisker append here.\n     * @param series\n     * @param point\n     * @param rect\n     * @param argsData\n     * @param direction\n     */\n    renderBoxAndWhisker(series, point, rect, argsData, direction, median) {\n        let location;\n        let size;\n        let symbolId = series.chart.element.id + '_Series_' + series.index + '_Point_' + point.index;\n        let element = series.chart.renderer.drawPath(new PathOption(symbolId + '_BoxPath', argsData.fill, argsData.border.width, argsData.border.color, series.opacity, series.dashArray, direction));\n        element.setAttribute('aria-label', point.x.toString() + ':' + point.maximum.toString()\n            + ':' + point.minimum.toString() + ':' + point.lowerQuartile.toString() + ':' + point.upperQuartile.toString());\n        let parentElement = series.chart.renderer.createGroup({\n            'id': symbolId\n        });\n        parentElement.appendChild(element);\n        for (let i = 0; i < point.outliers.length; i++) {\n            location = getPoint((point.xValue + median), point.outliers[i], series.xAxis, series.yAxis, series.chart.requireInvertedAxis);\n            size = new Size(series.marker.width, series.marker.height);\n            point.symbolLocations.push(location);\n            this.updateTipSize(series, point, {\n                x: location.x - (size.width / 2), y: location.y - (size.height / 2),\n                width: size.width, height: size.height\n            }, true);\n        }\n        series.seriesElement.appendChild(parentElement);\n    }\n    /**\n     * To find the box plot values\n     * @param yValues\n     * @param point\n     * @param mode\n     */\n    findBoxPlotValues(yValues, point, mode) {\n        let yCount = yValues.length;\n        let quartile = {\n            average: sum(yValues) / yCount,\n            lowerQuartile: 0, upperQuartile: 0,\n            maximum: 0, minimum: 0,\n            median: 0, outliers: []\n        };\n        if (mode === 'Exclusive') {\n            quartile.lowerQuartile = this.getExclusiveQuartileValue(yValues, yCount, 0.25);\n            quartile.upperQuartile = this.getExclusiveQuartileValue(yValues, yCount, 0.75);\n            quartile.median = this.getExclusiveQuartileValue(yValues, yCount, 0.5);\n        }\n        else if (mode === 'Inclusive') {\n            quartile.lowerQuartile = this.getInclusiveQuartileValue(yValues, yCount, 0.25);\n            quartile.upperQuartile = this.getInclusiveQuartileValue(yValues, yCount, 0.75);\n            quartile.median = this.getInclusiveQuartileValue(yValues, yCount, 0.5);\n        }\n        else {\n            quartile.median = getMedian(yValues);\n            this.getQuartileValues(yValues, yCount, quartile);\n        }\n        this.getMinMaxOutlier(yValues, yCount, quartile);\n        point.minimum = quartile.minimum;\n        point.maximum = quartile.maximum;\n        point.lowerQuartile = quartile.lowerQuartile;\n        point.upperQuartile = quartile.upperQuartile;\n        point.median = quartile.median;\n        point.outliers = quartile.outliers;\n        point.average = quartile.average;\n    }\n    /**\n     * to find the exclusive quartile values\n     * @param yValues\n     * @param count\n     * @param percentile\n     */\n    getExclusiveQuartileValue(yValues, count, percentile) {\n        if (count === 0) {\n            return 0;\n        }\n        else if (count === 1) {\n            return yValues[0];\n        }\n        let value = 0;\n        let rank = percentile * (count + 1);\n        let integerRank = Math.floor(Math.abs(rank));\n        let fractionRank = rank - integerRank;\n        if (integerRank === 0) {\n            value = yValues[0];\n        }\n        else if (integerRank > count - 1) {\n            value = yValues[count - 1];\n        }\n        else {\n            value = fractionRank * (yValues[integerRank] - yValues[integerRank - 1]) + yValues[integerRank - 1];\n        }\n        return value;\n    }\n    /**\n     * to find the inclusive quartile values\n     * @param yValues\n     * @param count\n     * @param percentile\n     */\n    getInclusiveQuartileValue(yValues, count, percentile) {\n        if (count === 0) {\n            return 0;\n        }\n        else if (count === 1) {\n            return yValues[0];\n        }\n        let value = 0;\n        let rank = percentile * (count - 1);\n        let integerRank = Math.floor(Math.abs(rank));\n        let fractionRank = rank - integerRank;\n        value = fractionRank * (yValues[integerRank + 1] - yValues[integerRank]) + yValues[integerRank];\n        return value;\n    }\n    /**\n     * To find the quartile values\n     * @param yValues\n     * @param count\n     * @param lowerQuartile\n     * @param upperQuartile\n     */\n    getQuartileValues(yValues, count, quartile) {\n        if (count === 1) {\n            quartile.lowerQuartile = yValues[0];\n            quartile.upperQuartile = yValues[0];\n            return null;\n        }\n        let isEvenList = count % 2 === 0;\n        let halfLength = count / 2;\n        let lowerQuartileArray = yValues.slice(0, halfLength);\n        let upperQuartileArray = yValues.slice(isEvenList ? halfLength : halfLength + 1, count);\n        quartile.lowerQuartile = getMedian(lowerQuartileArray);\n        quartile.upperQuartile = getMedian(upperQuartileArray);\n    }\n    /**\n     * To find the min, max and outlier values\n     * @param yValues\n     * @param lowerQuartile\n     * @param upperQuartile\n     * @param minimum\n     * @param maximum\n     * @param outliers\n     */\n    getMinMaxOutlier(yValues, count, quartile) {\n        let interquartile = quartile.upperQuartile - quartile.lowerQuartile;\n        let rangeIQR = 1.5 * interquartile;\n        for (let i = 0; i < count; i++) {\n            if (yValues[i] < quartile.lowerQuartile - rangeIQR) {\n                quartile.outliers.push(yValues[i]);\n            }\n            else {\n                quartile.minimum = yValues[i];\n                break;\n            }\n        }\n        for (let i = count - 1; i >= 0; i--) {\n            if (yValues[i] > quartile.upperQuartile + rangeIQR) {\n                quartile.outliers.push(yValues[i]);\n            }\n            else {\n                quartile.maximum = yValues[i];\n                break;\n            }\n        }\n    }\n    /**\n     * Animates the series.\n     * @param  {Series} series - Defines the series to animate.\n     * @return {void}\n     */\n    doAnimation(series) {\n        this.animate(series);\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        return 'BoxAndWhiskerSeries';\n        /**\n         * return the module name\n         */\n    }\n    /**\n     * To destroy the candle series.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroys the candle series.\n         */\n    }\n}\n","import { getPoint, withInRange, ChartLocation, PathOption } from '../../common/utils/helper';\nimport { MultiColoredSeries } from './multi-colored-base';\n/**\n * `MultiColoredAreaSeries` module used to render the area series with multi color.\n */\nexport class MultiColoredAreaSeries extends MultiColoredSeries {\n    /**\n     * Render Area series.\n     * @return {void}\n     * @private\n     */\n    render(series, xAxis, yAxis, isInverted) {\n        let firstPoint;\n        let startPoint = null;\n        let direction = '';\n        let origin = Math.max(series.yAxis.visibleRange.min, 0);\n        let options = [];\n        let startRegion;\n        let previous;\n        let color;\n        let rendered;\n        let segments = this.sortSegments(series, series.segments);\n        series.points.map((point, i, seriesPoints) => {\n            point.symbolLocations = [];\n            point.regions = [];\n            rendered = false;\n            if (point.visible && withInRange(seriesPoints[i - 1], point, seriesPoints[i + 1], series)) {\n                direction += this.getAreaPathDirection(point.xValue, origin, series, isInverted, getPoint, startPoint, 'M');\n                startPoint = startPoint || new ChartLocation(point.xValue, origin);\n                firstPoint = getPoint(point.xValue, point.yValue, xAxis, yAxis, isInverted, series);\n                if (previous && this.setPointColor(point, previous, series, series.segmentAxis === 'X', segments)) {\n                    rendered = true;\n                    startRegion = getPoint(startPoint.x, origin, xAxis, yAxis, isInverted, series);\n                    direction += ('L' + ' ' + (firstPoint.x) + ' ' + (firstPoint.y) + ' ');\n                    direction += ('L' + ' ' + (firstPoint.x) + ' ' + (startRegion.y) + ' ');\n                    this.generatePathOption(options, series, previous, direction, '_Point_' + previous.index);\n                    direction = 'M' + ' ' + (firstPoint.x) + ' ' + (startRegion.y) + ' ' + 'L' + ' ' +\n                        (firstPoint.x) + ' ' + (firstPoint.y) + ' ';\n                }\n                else {\n                    direction += ('L' + ' ' + (firstPoint.x) + ' ' + (firstPoint.y) + ' ');\n                    this.setPointColor(point, null, series, series.segmentAxis === 'X', segments);\n                }\n                if (seriesPoints[i + 1] && !seriesPoints[i + 1].visible && series.emptyPointSettings.mode !== 'Drop') {\n                    direction += this.getAreaEmptyDirection({ 'x': point.xValue, 'y': origin }, startPoint, series, isInverted, getPoint);\n                    startPoint = null;\n                }\n                previous = point;\n                this.storePointLocation(point, series, isInverted, getPoint);\n            }\n        });\n        if (!rendered) {\n            direction = series.points.length > 1 ?\n                (direction + this.getAreaPathDirection(previous.xValue, origin, series, isInverted, getPoint, null, 'L')) : '';\n            this.generatePathOption(options, series, previous, direction, '');\n        }\n        this.applySegmentAxis(series, options, segments);\n        this.renderMarker(series);\n    }\n    /**\n     * To Store the path directions of the area\n     */\n    generatePathOption(options, series, point, direction, id) {\n        options.push(new PathOption(series.chart.element.id + '_Series_' + series.index + id, series.setPointColor(point, series.interior), series.border.width, series.border.color, series.opacity, series.dashArray, direction));\n    }\n    /**\n     * To destroy the area series.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy method calling here\n         */\n    }\n    /**\n     * Get module name\n     */\n    getModuleName() {\n        /**\n         * Returns the module name of the series\n         */\n        return 'MultiColoredAreaSeries';\n    }\n    /**\n     * Animates the series.\n     * @param  {Series} series - Defines the series to animate.\n     * @return {void}\n     */\n    doAnimation(series) {\n        this.doLinearAnimation(series, series.animation);\n    }\n}\n","import { withInRange, getPoint, PathOption } from '../../common/utils/helper';\nimport { MultiColoredSeries } from './multi-colored-base';\n/**\n * `MultiColoredLineSeries` used to render the line series with multi color.\n */\nexport class MultiColoredLineSeries extends MultiColoredSeries {\n    /**\n     * Render Line Series.\n     * @return {void}.\n     * @private\n     */\n    render(series, xAxis, yAxis, isInverted) {\n        let previous = null;\n        let startPoint = 'M';\n        let visiblePoints = this.improveChartPerformance(series);\n        let options = [];\n        let direction = '';\n        let segments = this.sortSegments(series, series.segments);\n        for (let point of visiblePoints) {\n            point.regions = [];\n            if (point.visible && withInRange(visiblePoints[point.index - 1], point, visiblePoints[point.index + 1], series)) {\n                direction += this.getLineDirection(previous, point, series, isInverted, getPoint, startPoint);\n                if (previous != null) {\n                    if (this.setPointColor(point, previous, series, series.segmentAxis === 'X', segments)) {\n                        options.push(new PathOption(series.chart.element.id + '_Series_' + series.index + '_Point_' + previous.index, 'none', series.width, series.setPointColor(previous, series.interior), series.opacity, series.dashArray, direction));\n                        startPoint = 'M';\n                        direction = '';\n                    }\n                    else {\n                        startPoint = 'L';\n                    }\n                }\n                else {\n                    this.setPointColor(point, null, series, series.segmentAxis === 'X', segments);\n                }\n                previous = point;\n                this.storePointLocation(point, series, isInverted, getPoint);\n            }\n            else {\n                previous = (series.emptyPointSettings.mode === 'Drop') ? previous : null;\n                startPoint = (series.emptyPointSettings.mode === 'Drop') ? startPoint : 'M';\n                point.symbolLocations = [];\n            }\n        }\n        if (direction !== '') {\n            options.push(new PathOption(series.chart.element.id + '_Series_' + series.index, 'none', series.width, series.setPointColor(visiblePoints[visiblePoints.length - 1], series.interior), series.opacity, series.dashArray, direction));\n        }\n        this.applySegmentAxis(series, options, segments);\n        this.renderMarker(series);\n    }\n    /**\n     * Animates the series.\n     * @param  {Series} series - Defines the series to animate.\n     * @return {void}\n     */\n    doAnimation(series) {\n        this.doLinearAnimation(series, series.animation);\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        /**\n         * Returns the module name of the series\n         */\n        return 'MultiColoredLineSeries';\n    }\n    /**\n     * To destroy the line series.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy method performed here\n         */\n    }\n}\n","import { textWrap, TextOption, PathOption } from '../../common/utils/helper';\nimport { valueToCoefficient, measureText, textTrim, textElement } from '../../common/utils/helper';\nimport { axisMultiLabelRender } from '../../common/model/constants';\n/**\n * `MultiLevelLabel` module is used to render the multi level label in chart.\n */\nexport class MultiLevelLabel {\n    /**\n     * Constructor for the logerithmic module.\n     * @private\n     */\n    constructor(chart) {\n        /** @private */\n        this.xAxisPrevHeight = [];\n        /** @private */\n        this.xAxisMultiLabelHeight = [];\n        /** @private */\n        this.yAxisPrevHeight = [];\n        /** @private */\n        this.yAxisMultiLabelHeight = [];\n        this.chart = chart;\n    }\n    /**\n     * Finds multilevel label height\n     * @return {void}\n     */\n    getMultilevelLabelsHeight(axis) {\n        let value = 0;\n        let multiLevelLabelsHeight = [];\n        let prevHeight = [];\n        let isVertical = axis.orientation === 'Vertical';\n        let axisValue = isVertical ? axis.rect.height : axis.rect.width;\n        let labelSize;\n        let height;\n        let padding = 10;\n        let gap;\n        axis.multiLevelLabels.map((multiLevel, index) => {\n            multiLevel.categories.map((categoryLabel) => {\n                if (categoryLabel.text !== '' && categoryLabel.start !== null && categoryLabel.end !== null) {\n                    labelSize = measureText(categoryLabel.text, multiLevel.textStyle);\n                    height = isVertical ? labelSize.width : labelSize.height;\n                    height += 2 * multiLevel.border.width +\n                        (multiLevel.border.type === 'CurlyBrace' ? padding : 0);\n                    gap = (categoryLabel.maximumTextWidth !== null) ? categoryLabel.maximumTextWidth :\n                        (valueToCoefficient(typeof categoryLabel.end === 'string' ? Number(new Date(categoryLabel.end)) :\n                            categoryLabel.end, axis) * axisValue) -\n                            (valueToCoefficient(typeof categoryLabel.start === 'string' ? Number(new Date(categoryLabel.start)) :\n                                categoryLabel.start, axis) * axisValue);\n                    if ((labelSize.width > gap - padding) && gap > 0 && (multiLevel.overflow === 'Wrap') && !isVertical) {\n                        height = (height * (textWrap(categoryLabel.text, gap - padding, multiLevel.textStyle).length));\n                    }\n                    multiLevelLabelsHeight[index] = !multiLevelLabelsHeight[index] ? height :\n                        ((multiLevelLabelsHeight[index] < height) ? height : multiLevelLabelsHeight[index]);\n                }\n            });\n            prevHeight[index] = value;\n            value += multiLevelLabelsHeight[index] ? (multiLevelLabelsHeight[index] + padding) : 0;\n        });\n        axis.multiLevelLabelHeight = value + ((axis.title !== '' || (this.chart.legendModule && this.chart.legendSettings.visible))\n            ? padding / 2 : 0);\n        if (isVertical) {\n            this.yAxisMultiLabelHeight = multiLevelLabelsHeight;\n            this.yAxisPrevHeight = prevHeight;\n        }\n        else {\n            this.xAxisMultiLabelHeight = multiLevelLabelsHeight;\n            this.xAxisPrevHeight = prevHeight;\n        }\n    }\n    /**\n     * render x axis multi level labels\n     * @private\n     * @return {void}\n     */\n    renderXAxisMultiLevelLabels(axis, index, parent, axisRect) {\n        let x;\n        let y;\n        let padding = 10;\n        let startX;\n        let startY = (axis.labelPosition === axis.tickPosition ? axis.majorTickLines.height : 0) +\n            (axis.maxLabelSize.height) + padding;\n        let endX;\n        let endY;\n        let pathRect = '';\n        let start;\n        let end;\n        let labelSize;\n        let clipY;\n        let isOutside = axis.labelPosition === 'Outside';\n        let gap;\n        let anchor;\n        let isInversed = axis.isInversed;\n        let argsData;\n        let labelElement;\n        let opposedPosition = axis.opposedPosition;\n        clipY = ((opposedPosition && !isOutside) || (!opposedPosition && isOutside)) ?\n            (axisRect.y + startY - axis.majorTickLines.width) : (axisRect.y - startY - axis.multiLevelLabelHeight);\n        this.createClipRect(axisRect.x - axis.majorTickLines.width, clipY, axis.multiLevelLabelHeight + padding, axisRect.width + 2 * axis.majorTickLines.width, this.chart.element.id + '_XAxis_Clippath_' + index, this.chart.element.id + 'XAxisMultiLevelLabel' + index);\n        axis.multiLevelLabels.map((multiLevel, level) => {\n            pathRect = '';\n            multiLevel.categories.map((categoryLabel, i) => {\n                labelElement = this.chart.renderer.createGroup({ id: this.chart.element.id + index + '_MultiLevelLabel' + level });\n                start = typeof categoryLabel.start === 'string' ? Number(new Date(categoryLabel.start)) : categoryLabel.start;\n                end = typeof categoryLabel.end === 'string' ? Number(new Date(categoryLabel.end)) : categoryLabel.end;\n                if (((start >= axis.visibleRange.min && start <= axis.visibleRange.max)\n                    || (end >= axis.visibleRange.min && end <= axis.visibleRange.max))) {\n                    argsData = this.triggerMultiLabelRender(axis, categoryLabel.text, axis.multiLevelLabels[level].textStyle, axis.multiLevelLabels[level].alignment);\n                    if (!argsData.cancel) {\n                        startX = valueToCoefficient(start, axis) * axisRect.width;\n                        endX = valueToCoefficient(end, axis) * axisRect.width;\n                        endX = isInversed ? [startX, startX = endX][0] : endX;\n                        labelSize = measureText(argsData.text, argsData.textStyle);\n                        gap = ((categoryLabel.maximumTextWidth === null) ? endX - startX : categoryLabel.maximumTextWidth) - padding;\n                        x = startX + axisRect.x + padding;\n                        y = ((opposedPosition && !isOutside) || (!opposedPosition && isOutside)) ? (startY + axisRect.y +\n                            labelSize.height / 2 + padding + this.xAxisPrevHeight[level]) : (axisRect.y - startY + labelSize.height / 2 -\n                            this.xAxisMultiLabelHeight[level] - this.xAxisPrevHeight[level]);\n                        if (argsData.alignment === 'Center') {\n                            x += (endX - startX - padding) / 2;\n                            anchor = 'middle';\n                        }\n                        else if (argsData.alignment === 'Far') {\n                            x = x + (endX - startX - padding) - multiLevel.border.width / 2;\n                            anchor = 'end';\n                        }\n                        else {\n                            anchor = 'start';\n                            x += multiLevel.border.width / 2;\n                        }\n                        y = multiLevel.border.type === 'CurlyBrace' ?\n                            (((!opposedPosition && isOutside) || (opposedPosition && !isOutside)) ? y + padding : y - padding / 2) : y;\n                        let options = new TextOption(this.chart.element.id + index + '_Axis_MultiLevelLabel_Level_' + level + '_Text_' + i, x, y, anchor, argsData.text);\n                        if (multiLevel.overflow !== 'None') {\n                            options.text = (multiLevel.overflow === 'Wrap') ?\n                                textWrap(argsData.text, gap, argsData.textStyle) : textTrim(gap, argsData.text, argsData.textStyle);\n                            options.x = options.x - padding / 2;\n                        }\n                        textElement(options, argsData.textStyle, argsData.textStyle.color || this.chart.themeStyle.axisLabel, labelElement);\n                        if (multiLevel.border.width > 0 && multiLevel.border.type !== 'WithoutBorder') {\n                            pathRect = this.renderXAxisLabelBorder(level, endX - startX - padding, axis, startX, startY, labelSize, options, axisRect, argsData.alignment, pathRect, isOutside, opposedPosition);\n                        }\n                        this.multiElements.appendChild(labelElement);\n                    }\n                }\n            });\n            if (pathRect !== '') {\n                this.createBorderElement(level, index, axis, pathRect);\n            }\n        });\n        parent.appendChild(this.multiElements);\n    }\n    /**\n     * render x axis multi level labels border\n     * @private\n     * @return {void}\n     */\n    renderXAxisLabelBorder(labelIndex, gap, axis, startX, startY, labelSize, textOptions, axisRect, alignment, path, isOutside, opposedPosition) {\n        let padding = 10;\n        let padding1;\n        let padding2;\n        let value;\n        let value1;\n        let groupLabel = axis.multiLevelLabels[labelIndex];\n        let width = gap + padding;\n        let height = this.xAxisMultiLabelHeight[labelIndex] + padding;\n        let x = startX + axisRect.x;\n        let y = ((!opposedPosition && isOutside) || (opposedPosition && !isOutside)) ?\n            (startY + axisRect.y + this.xAxisPrevHeight[labelIndex]) : (axisRect.y - startY - this.xAxisPrevHeight[labelIndex]);\n        switch (groupLabel.border.type) {\n            case 'WithoutTopandBottomBorder':\n            case 'Rectangle':\n            case 'WithoutTopBorder':\n                height = ((!opposedPosition && isOutside) || (opposedPosition && !isOutside)) ? height : -height;\n                path += 'M' + x + ' ' + y + 'L' + x + ' ' + (y + height) +\n                    'M' + (x + width) + ' ' + y + 'L' + (x + width) + ' ' + (y + height);\n                path += (groupLabel.border.type !== 'WithoutTopandBottomBorder') ? ('L' + ' ' + (x) + ' ' + (y + height) + ' ') : ' ';\n                path += groupLabel.border.type === 'Rectangle' ? ('M' + x + ' ' + y + 'L' + (x + width) + ' ' + y) : ' ';\n                break;\n            case 'Brace':\n                if (alignment === 'Near') {\n                    value = textOptions.x;\n                    value1 = textOptions.x + labelSize.width + 2;\n                }\n                else if (alignment === 'Center') {\n                    value = textOptions.x - labelSize.width / 2 - 2;\n                    value1 = textOptions.x + labelSize.width / 2 + 2;\n                }\n                else {\n                    value = textOptions.x - labelSize.width - 2;\n                    value1 = textOptions.x;\n                }\n                height = ((!opposedPosition && isOutside) || (opposedPosition && !isOutside)) ? height : -height;\n                path += 'M' + x + ' ' + y + 'L' + x + ' ' + (y + height / 2) +\n                    'M' + x + ' ' + (y + height / 2) + 'L' + (value - 2) + ' ' + (y + height / 2) +\n                    'M' + (value1) + ' ' + (y + height / 2) + 'L' + (x + width) + ' ' + (y + height / 2) +\n                    'M' + (x + width) + ' ' + (y + height / 2) + 'L' + (x + width) + ' ' + (y);\n                break;\n            case 'CurlyBrace':\n                if ((!opposedPosition && isOutside) || (opposedPosition && !isOutside)) {\n                    padding = 10;\n                    padding1 = 15;\n                    padding2 = 5;\n                }\n                else {\n                    padding = -10;\n                    padding1 = -15;\n                    padding2 = -5;\n                }\n                if (alignment === 'Center') {\n                    path += 'M' + x + ' ' + y + ' C ' + x + ' ' + y + ' ' + (x + 5) + ' ' + (y + padding) + ' ' + (x + 10) + ' ' +\n                        (y + padding) + 'L' + (x + width / 2 - 5) + ' ' + (y + padding) + 'L' + (x + width / 2) + ' ' + (y + padding1) +\n                        'L' + (x + width / 2 + 5) + ' ' + (y + padding) + 'L' + (x + width - 10) + ' ' + (y + padding) + ' C ' +\n                        (x + width - 10) + ' ' + (y + padding) + ' ' + (x + width) + ' ' + (y + padding2) + ' ' + (x + width) + ' ' + (y);\n                }\n                else if (alignment === 'Near') {\n                    path += 'M' + x + ' ' + y + ' C ' + x + ' ' + y + ' ' + (x + 5) + ' ' + (y + padding) + ' ' + (x + 10) + ' ' +\n                        (y + padding) + 'L' + (x + 15) + ' ' + (y + padding1) + 'L' + (x + 20) + ' ' + (y + padding) + 'L' +\n                        (x + width - 10) + ' ' + (y + padding) + ' C ' + (x + width - 10) + ' ' + (y + padding) + ' ' + (x + width) + ' '\n                        + (y + padding2) + ' ' + (x + width) + ' ' + (y);\n                }\n                else {\n                    path += 'M' + x + ' ' + y + ' C ' + x + ' ' + y + ' ' + (x + 5) + ' ' + (y + padding) + ' ' + (x + 10) + ' ' +\n                        (y + padding) + 'L' + (x + width - 20) + ' ' + (y + padding) + 'L' + (x + width - 15) + ' ' + (y + padding1) +\n                        'L' + (x + width - 10) + ' ' + (y + padding) + 'L' + (x + width - 10) + ' ' + (y + padding) + ' C '\n                        + (x + width - 10) + ' ' + (y + padding) + ' ' + (x + width) + ' ' + (y + padding2) + ' ' + (x + width) + ' ' + (y);\n                }\n                break;\n        }\n        return path;\n    }\n    /**\n     * render y axis multi level labels\n     * @private\n     * @return {void}\n     */\n    renderYAxisMultiLevelLabels(axis, index, parent, rect) {\n        let labelSize;\n        let clipX;\n        let isOutside = axis.labelPosition === 'Outside';\n        let x;\n        let y;\n        let padding = 10;\n        let startX = (axis.tickPosition === axis.labelPosition ? axis.majorTickLines.height : 0) +\n            (axis.maxLabelSize.width) + padding;\n        let startY;\n        let path = '';\n        let labelElement;\n        let endY;\n        let argsData;\n        let isInversed = axis.isInversed;\n        let start;\n        let end;\n        let gap;\n        let anchor = 'middle';\n        let opposedPosition = axis.opposedPosition;\n        clipX = ((opposedPosition && !isOutside) || (!opposedPosition && isOutside)) ?\n            (rect.x - axis.multiLevelLabelHeight - startX - padding) : (rect.x + startX);\n        this.createClipRect(clipX, rect.y - axis.majorTickLines.width, rect.height + 2 * axis.majorTickLines.width, axis.multiLevelLabelHeight + padding, this.chart.element.id + '_YAxis_Clippath_' + index, this.chart.element.id + 'YAxisMultiLevelLabel' + index);\n        axis.multiLevelLabels.map((multiLevel, level) => {\n            path = '';\n            multiLevel.categories.map((categoryLabel, i) => {\n                labelElement = this.chart.renderer.createGroup({ id: this.chart.element.id + index + '_MultiLevelLabel' + level });\n                end = typeof categoryLabel.end === 'string' ? Number(new Date(categoryLabel.end)) : categoryLabel.end;\n                start = typeof categoryLabel.start === 'string' ? Number(new Date(categoryLabel.start)) : categoryLabel.start;\n                if (((start >= axis.visibleRange.min && start <= axis.visibleRange.max)\n                    || (end >= axis.visibleRange.min && end <= axis.visibleRange.max))) {\n                    startY = valueToCoefficient((start), axis) * (rect.height);\n                    endY = valueToCoefficient((end), axis) * (rect.height);\n                    endY = isInversed ? [startY, startY = endY][0] : endY;\n                    argsData = this.triggerMultiLabelRender(axis, categoryLabel.text, multiLevel.textStyle, multiLevel.alignment);\n                    if (!argsData.cancel) {\n                        labelSize = measureText(argsData.text, argsData.textStyle);\n                        gap = endY - startY;\n                        x = rect.x - startX - this.yAxisPrevHeight[level] -\n                            (this.yAxisMultiLabelHeight[level] / 2) - padding / 2;\n                        y = rect.height + rect.y - startY - (gap / 2);\n                        if (opposedPosition) {\n                            x = isOutside ? rect.x + startX + padding / 2 + (this.yAxisMultiLabelHeight[level] / 2) +\n                                this.yAxisPrevHeight[level] : rect.x - startX - (this.yAxisMultiLabelHeight[level] / 2) -\n                                this.yAxisPrevHeight[level] - padding / 2;\n                        }\n                        else {\n                            x = isOutside ? x : rect.x + startX + padding / 2 + (this.yAxisMultiLabelHeight[level] / 2) +\n                                this.yAxisPrevHeight[level];\n                        }\n                        if (argsData.alignment === 'Center') {\n                            y += labelSize.height / 4;\n                        }\n                        else if (argsData.alignment === 'Far') {\n                            y += gap / 2 - labelSize.height / 2;\n                        }\n                        else {\n                            y = y - gap / 2 + labelSize.height;\n                        }\n                        x = multiLevel.border.type === 'CurlyBrace' ? (((!opposedPosition && isOutside) ||\n                            (opposedPosition && !isOutside)) ? x - padding : x + padding) : x;\n                        let options = new TextOption(this.chart.element.id + index + '_Axis_MultiLevelLabel_Level_' + level + '_Text_' + i, x, y, anchor, argsData.text);\n                        options.text = (multiLevel.overflow === 'Trim') ?\n                            textTrim((categoryLabel.maximumTextWidth === null ? this.yAxisMultiLabelHeight[level] :\n                                categoryLabel.maximumTextWidth), argsData.text, argsData.textStyle) : options.text;\n                        textElement(options, argsData.textStyle, argsData.textStyle.color || this.chart.themeStyle.axisLabel, labelElement);\n                        if (multiLevel.border.width > 0 && multiLevel.border.type !== 'WithoutBorder') {\n                            path = this.renderYAxisLabelBorder(level, gap, axis, endY, startX, startY, labelSize, options, rect, argsData.alignment, path, isOutside, opposedPosition);\n                        }\n                        this.multiElements.appendChild(labelElement);\n                    }\n                }\n            });\n            if (path !== '') {\n                this.createBorderElement(level, index, axis, path);\n            }\n        });\n        parent.appendChild(this.multiElements);\n    }\n    /**\n     * render y axis multi level labels border\n     * @private\n     * @return {void}\n     */\n    renderYAxisLabelBorder(labelIndex, gap, axis, endY, startX, startY, labelSize, textOptions, rect, alignment, path, isOutside, opposedPosition) {\n        let height = endY - startY;\n        let padding = 10;\n        let padding1;\n        let padding2;\n        let groupLabel = axis.multiLevelLabels[labelIndex];\n        let y = rect.y + rect.height - endY;\n        let width = this.yAxisMultiLabelHeight[labelIndex] + padding;\n        let x = ((!opposedPosition && isOutside) || (opposedPosition && !isOutside)) ? rect.x - startX -\n            this.yAxisPrevHeight[labelIndex] : rect.x + startX + this.yAxisPrevHeight[labelIndex];\n        switch (groupLabel.border.type) {\n            case 'WithoutTopandBottomBorder':\n            case 'Rectangle':\n            case 'WithoutTopBorder':\n                width = ((!opposedPosition && isOutside) || (opposedPosition && !isOutside)) ? -width : width;\n                path += 'M' + x + ' ' + y + 'L' + (x + width) + ' ' + y +\n                    'M' + x + ' ' + (y + height) + 'L' + (x + width) + ' ' + (y + height);\n                path += (groupLabel.border.type !== 'WithoutTopandBottomBorder') ? ('L' + ' ' + (x + width) + ' ' + y + ' ') : ' ';\n                path += (groupLabel.border.type === 'Rectangle') ? ('M' + (x) + ' ' + (y + height) + 'L' + ' ' + (x) + ' ' + y + ' ') : ' ';\n                break;\n            case 'Brace':\n                width = ((!opposedPosition && isOutside) || (opposedPosition && !isOutside)) ? width : -width;\n                path += 'M ' + (x) + ' ' + y + ' L ' + (x - width / 2) + ' ' + y + ' L ' + (x - width / 2) + ' ' +\n                    (textOptions.y - labelSize.height / 2 - 4) + ' M ' + (x - width / 2) + ' ' +\n                    (textOptions.y + labelSize.height / 4 + 2) +\n                    ' L ' + (x - width / 2) + ' ' + (y + height) + ' L ' + (x) + ' ' + (y + height);\n                break;\n            case 'CurlyBrace':\n                if ((!opposedPosition && isOutside) || (opposedPosition && !isOutside)) {\n                    padding = -10;\n                    padding1 = -15;\n                    padding2 = -5;\n                }\n                else {\n                    padding = 10;\n                    padding1 = 15;\n                    padding2 = 5;\n                }\n                if (alignment === 'Center') {\n                    path += 'M ' + x + ' ' + y + ' C ' + x + ' ' + y + ' ' + (x + padding) + ' ' + y + ' ' + (x + padding) + ' ' + (y + 10)\n                        + ' L ' + (x + padding) + ' ' + (y + (height - 10) / 2) + ' L ' + (x + padding1) + ' ' + (y + (height - 10) / 2 + 5)\n                        + ' L ' + (x + padding) + ' ' + (y + (height - 10) / 2 + 10) + ' L ' + (x + padding) + ' ' + (y + (height - 10)) +\n                        ' C ' + (x + padding) + ' ' + (y + (height - 10)) + ' ' + (x + padding2) + ' ' + (y + height) + ' '\n                        + x + ' ' + (y + height);\n                }\n                else if (alignment === 'Far') {\n                    path += 'M ' + x + ' ' + y + ' C ' + x + ' ' + y + ' ' + (x + padding) + ' ' + y + ' ' + (x + padding) + ' ' + (y + 10)\n                        + ' L ' + (x + padding) + ' ' + (y + height - 20) + ' ' + ' L ' + (x + padding1) + ' ' + (y + (height - 15)) +\n                        ' L ' + (x + padding) + ' ' + (y + (height - 10)) + ' L ' + (x + padding) + ' ' + (y + (height - 10)) +\n                        ' C' + (x + padding) + ' ' + (y + (height - 10)) + ' ' + (x + padding) + ' ' + (y + height) + ' ' + x + ' '\n                        + (y + height);\n                }\n                else {\n                    path += 'M ' + x + ' ' + y + ' C ' + x + ' ' + y + ' ' + (x + padding) + ' ' + y + ' ' + (x + padding) + ' ' + (y + 10)\n                        + ' L ' + (x + padding1) + ' ' + (y + 15) +\n                        ' L ' + (x + padding) + ' ' + (y + 20) + ' L ' + (x + padding) + ' ' + (y + (height - 10)) +\n                        ' C' + (x + padding) + ' ' + (y + (height - 10)) + ' ' + (x + padding2) + ' ' + (y + height) + ' ' + x +\n                        ' ' + (y + height);\n                }\n                break;\n        }\n        return path;\n    }\n    /**\n     * create cliprect\n     * @return {void}\n     * @private\n     */\n    createClipRect(x, y, height, width, clipId, axisId) {\n        this.multiElements = this.chart.renderer.createGroup({\n            'id': axisId,\n            'clip-path': 'url(#' + clipId + ')'\n        });\n        this.multiElements.appendChild(this.chart.renderer.drawClipPath({\n            'id': clipId,\n            'x': x,\n            'y': y,\n            'width': width,\n            'height': height,\n            'fill': 'white',\n            'stroke-width': 1, 'stroke': 'Gray'\n        }));\n    }\n    /**\n     * create borer element\n     * @return {void}\n     * @private\n     */\n    createBorderElement(borderIndex, axisIndex, axis, path) {\n        let borderElement = this.chart.renderer.drawPath(new PathOption(this.chart.element.id + axisIndex + '_Axis_MultiLevelLabel_Rect_' + borderIndex, 'Transparent', axis.multiLevelLabels[borderIndex].border.width, axis.multiLevelLabels[borderIndex].border.color || this.chart.themeStyle.axisLine, 1, '', path));\n        borderElement.setAttribute('style', 'pointer-events: none');\n        this.multiElements.appendChild(borderElement);\n    }\n    /**\n     * Triggers the event.\n     * @return {void}\n     * @private\n     */\n    triggerMultiLabelRender(axis, text, textStyle, textAlignment) {\n        let argsData;\n        argsData = {\n            cancel: false, name: axisMultiLabelRender, axis: axis,\n            text: text, textStyle: textStyle, alignment: textAlignment\n        };\n        this.chart.trigger(axisMultiLabelRender, argsData);\n        return argsData;\n    }\n    /**\n     * To get the module name for `MultiLevelLabel`.\n     * @private\n     */\n    getModuleName() {\n        return 'MultiLevelLabel';\n    }\n    /**\n     * To destroy the `MultiLevelLabel` module.\n     * @private\n     */\n    destroy() {\n        // destroy peform here\n    }\n}\n","/**\n * Chart component exported items\n */\nexport * from './chart';\nexport * from './axis/axis';\nexport * from './axis/date-time-axis';\nexport * from './axis/category-axis';\nexport * from './axis/logarithmic-axis';\nexport * from './axis/date-time-category-axis';\nexport * from './axis/axis-helper';\nexport * from './axis/strip-line';\nexport * from '../common/model/base';\nexport * from './series/line-series';\nexport * from './series/column-series';\nexport * from './series/area-series';\nexport * from './series/bar-series';\nexport * from './series/polar-series';\nexport * from './series/radar-series';\nexport * from './series/stacking-bar-series';\nexport * from './series/candle-series';\nexport * from './series/stacking-column-series';\nexport * from './series/step-line-series';\nexport * from './series/step-area-series';\nexport * from './series/stacking-area-series';\nexport * from './series/scatter-series';\nexport * from './series/range-column-series';\nexport * from './series/waterfall-series';\nexport * from './series/hilo-series';\nexport * from './series/hilo-open-close-series';\nexport * from './series/range-area-series';\nexport * from './series/bubble-series';\nexport * from './series/spline-series';\nexport * from './series/spline-area-series';\nexport * from './technical-indicators/technical-indicator';\nexport * from './technical-indicators/sma-indicator';\nexport * from './technical-indicators/ema-indicator';\nexport * from './technical-indicators/tma-indicator';\nexport * from './technical-indicators/ad-indicator';\nexport * from './technical-indicators/atr-indicator';\nexport * from './technical-indicators/momentum-indicator';\nexport * from './technical-indicators/rsi-indicator';\nexport * from './technical-indicators/stochastic-indicator';\nexport * from './technical-indicators/bollinger-bands';\nexport * from './technical-indicators/macd-indicator';\nexport * from './trend-lines/trend-line';\nexport * from '../common/utils/helper';\nexport * from './user-interaction/crosshair';\nexport * from './user-interaction/tooltip';\nexport * from './user-interaction/zooming';\nexport * from './user-interaction/selection';\nexport * from './series/data-label';\nexport * from './series/error-bar';\nexport * from './series/chart-series';\nexport * from './legend/legend';\nexport * from './annotation/annotation';\nexport * from './model/chart-base';\nexport * from './series/box-and-whisker-series';\nexport * from './series/multi-colored-area-series';\nexport * from './series/multi-colored-line-series';\nexport * from './series/multi-colored-base';\nexport * from './axis/multi-level-labels';\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * AccumulationChart base file\n */\nimport { Property, ChildProperty, Complex, createElement } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport { Border, Font, Animation, EmptyPointSettings, Connector } from '../../common/model/base';\nimport { Rect, stringToNumber, PathOption } from '../../common/utils/helper';\nimport { seriesRender, pointRender } from '../../common/model/constants';\nimport { getSeriesColor } from '../../common/model/theme';\nimport { getElement, firstToLowerCase } from '../../common/utils/helper';\n/**\n * Annotation for accumulation series\n */\nexport class AccumulationAnnotationSettings extends ChildProperty {\n}\n__decorate([\n    Property(null)\n], AccumulationAnnotationSettings.prototype, \"content\", void 0);\n__decorate([\n    Property('0')\n], AccumulationAnnotationSettings.prototype, \"x\", void 0);\n__decorate([\n    Property('0')\n], AccumulationAnnotationSettings.prototype, \"y\", void 0);\n__decorate([\n    Property('Pixel')\n], AccumulationAnnotationSettings.prototype, \"coordinateUnits\", void 0);\n__decorate([\n    Property('Chart')\n], AccumulationAnnotationSettings.prototype, \"region\", void 0);\n__decorate([\n    Property('Middle')\n], AccumulationAnnotationSettings.prototype, \"verticalAlignment\", void 0);\n__decorate([\n    Property('Center')\n], AccumulationAnnotationSettings.prototype, \"horizontalAlignment\", void 0);\n__decorate([\n    Property(null)\n], AccumulationAnnotationSettings.prototype, \"description\", void 0);\n/**\n * Configures the dataLabel in accumulation chart.\n */\nexport class AccumulationDataLabelSettings extends ChildProperty {\n}\n__decorate([\n    Property(false)\n], AccumulationDataLabelSettings.prototype, \"visible\", void 0);\n__decorate([\n    Property(null)\n], AccumulationDataLabelSettings.prototype, \"name\", void 0);\n__decorate([\n    Property('transparent')\n], AccumulationDataLabelSettings.prototype, \"fill\", void 0);\n__decorate([\n    Property('Inside')\n], AccumulationDataLabelSettings.prototype, \"position\", void 0);\n__decorate([\n    Property(5)\n], AccumulationDataLabelSettings.prototype, \"rx\", void 0);\n__decorate([\n    Property(5)\n], AccumulationDataLabelSettings.prototype, \"ry\", void 0);\n__decorate([\n    Complex({ width: null, color: null }, Border)\n], AccumulationDataLabelSettings.prototype, \"border\", void 0);\n__decorate([\n    Complex({ size: '11px', color: null }, Font)\n], AccumulationDataLabelSettings.prototype, \"font\", void 0);\n__decorate([\n    Complex({}, Connector)\n], AccumulationDataLabelSettings.prototype, \"connectorStyle\", void 0);\n__decorate([\n    Property(null)\n], AccumulationDataLabelSettings.prototype, \"template\", void 0);\n/**\n * Points model for the series.\n */\nexport class AccPoints {\n    constructor() {\n        this.visible = true;\n        this.symbolLocation = null;\n        /** @private */\n        this.region = null;\n        /** @private */\n        this.labelRegion = null;\n        /** @private */\n        this.labelVisible = true;\n        this.regions = null;\n    }\n}\n/**\n *  Configures the series in accumulation chart.\n */\nexport class AccumulationSeries extends ChildProperty {\n    constructor() {\n        /**\n         * Specifies the dataSource for the series. It can be an array of JSON objects or an instance of DataManager.\n         * ```html\n         * <div id='Pie'></div>\n         * ```\n         * ```typescript\n         * let dataManager: DataManager = new DataManager({\n         *         url: 'http://mvc.syncfusion.com/Services/Northwnd.svc/Tasks/'\n         * });\n         * let query: Query = new Query().take(50).where('Estimate', 'greaterThan', 0, false);\n         * let pie: AccumulationChart = new AccumulationChart({\n         * ...\n         *     series: [{\n         *        dataSource: dataManager,\n         *        xName: 'Id',\n         *        yName: 'Estimate',\n         *        query: query\n         *    }],\n         * ...\n         * });\n         * pie.appendTo('#Pie');\n         * ```\n         * @default ''\n         */\n        super(...arguments);\n        /** @private */\n        this.points = [];\n        /** @private */\n        this.sumOfPoints = 0;\n        /** @private */\n        this.isRectSeries = true;\n        /** @private */\n        this.clipRect = new Rect(0, 0, 0, 0);\n    }\n    /** @private To refresh the Datamanager for series */\n    refreshDataManager(accumulation) {\n        if (isNullOrUndefined(this.query)) {\n            this.dataManagerSuccess({ result: this.dataSource, count: this.dataSource.length }, accumulation);\n            return;\n        }\n        let dataManager = this.dataModule.getData(this.dataModule.generateQuery().requiresCount());\n        dataManager.then((e) => this.dataManagerSuccess(e, accumulation));\n    }\n    /**\n     * To get points on dataManager is success\n     * @private\n     */\n    dataManagerSuccess(e, accumulation) {\n        let argsData = {\n            name: seriesRender, series: this, data: e.result,\n        };\n        accumulation.trigger(seriesRender, argsData);\n        this.resultData = e.result;\n        this.getPoints(e.result, accumulation);\n        if (++accumulation.seriesCounts === accumulation.visibleSeries.length) {\n            accumulation.refreshChart();\n        }\n    }\n    /** @private To find points from result data */\n    getPoints(result, accumulation) {\n        let length = Object.keys(result).length;\n        this.sumOfPoints = 0;\n        if (length === 0) {\n            return null;\n        }\n        this.findSumOfPoints(result);\n        this.points = [];\n        this.sumOfClub = 0;\n        let point;\n        let colors = this.palettes.length ? this.palettes : getSeriesColor(accumulation.theme);\n        let clubValue = stringToNumber(this.groupTo, this.sumOfPoints);\n        for (let i = 0; i < length; i++) {\n            point = this.setPoints(result, i, colors);\n            let currentY = point.y;\n            if (!this.isClub(point, clubValue)) {\n                if (isNullOrUndefined(point.y)) {\n                    point.visible = false;\n                }\n                this.pushPoints(point, colors);\n            }\n        }\n        this.lastGroupTo = this.groupTo;\n        if (this.sumOfClub > 0) {\n            let clubPoint = new AccPoints();\n            clubPoint.x = 'Others';\n            clubPoint.y = this.sumOfClub;\n            clubPoint.text = clubPoint.originalText = clubPoint.x + ': ' + this.sumOfClub;\n            this.pushPoints(clubPoint, colors);\n        }\n    }\n    /**\n     * Method to set point index and color\n     */\n    pushPoints(point, colors) {\n        point.index = this.points.length;\n        point.color = point.color || colors[point.index % colors.length];\n        this.points.push(point);\n    }\n    /**\n     * Method to find club point\n     */\n    isClub(point, clubValue) {\n        if (Math.abs(point.y) <= clubValue && !isNullOrUndefined(clubValue)) {\n            this.sumOfClub += Math.abs(point.y);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Method to find sum of points in the series\n     */\n    findSumOfPoints(result) {\n        let length = Object.keys(result).length;\n        for (let i = 0; i < length; i++) {\n            if (!isNullOrUndefined(result[i][this.yName])) {\n                this.sumOfPoints += Math.abs(result[i][this.yName]);\n            }\n        }\n    }\n    /**\n     * Method to set points x, y and text from data source\n     */\n    setPoints(data, i, colors) {\n        let point = new AccPoints();\n        point.x = getValue(this.xName, data[i]);\n        point.y = getValue(this.yName, data[i]);\n        point.color = getValue(this.pointColorMapping, data[i]);\n        point.text = point.originalText = getValue(this.dataLabel.name || '', data[i]);\n        this.setAccEmptyPoint(point, i, data, colors);\n        return point;\n    }\n    /**\n     * Method render the series elements for accumulation chart\n     * @private\n     */\n    renderSeries(accumulation) {\n        let seriesGroup = accumulation.renderer.createGroup({ id: accumulation.element.id + '_Series_' + this.index });\n        this.renderPoints(accumulation, seriesGroup);\n        let datalabelGroup;\n        if (accumulation.accumulationDataLabelModule && this.dataLabel.visible) {\n            datalabelGroup = accumulation.renderer.createGroup({ id: accumulation.element.id + '_datalabel_Series_' + this.index });\n            datalabelGroup.style.visibility =\n                (this.animation.enable && accumulation.animateSeries && this.type === 'Pie') ? 'hidden' : 'visible';\n            this.renderDataLabel(accumulation, datalabelGroup);\n        }\n        if (this.type === 'Pie') {\n            this.findMaxBounds(this.labelBound, this.accumulationBound);\n            accumulation.pieSeriesModule.animateSeries(accumulation, this.animation, this, seriesGroup);\n        }\n        if (accumulation.accumulationLegendModule) {\n            this.labelBound.x -= accumulation.explodeDistance;\n            this.labelBound.y -= accumulation.explodeDistance;\n            this.labelBound.height += (accumulation.explodeDistance - this.labelBound.y);\n            this.labelBound.width += (accumulation.explodeDistance - this.labelBound.x);\n        }\n    }\n    /**\n     * Method render the points elements for accumulation chart series.\n     */\n    renderPoints(accumulation, seriesGroup) {\n        let pointId = accumulation.element.id + '_Series_' + this.index + '_Point_';\n        let option;\n        for (let point of this.points) {\n            let argsData = {\n                cancel: false, name: pointRender, series: this, point: point, fill: point.color,\n                border: this.isEmpty(point) ? { width: this.emptyPointSettings.border.width, color: this.emptyPointSettings.border.color } :\n                    { width: this.border.width, color: this.border.color }\n            };\n            accumulation.trigger(pointRender, argsData);\n            point.color = argsData.fill;\n            if (point.visible) {\n                option = new PathOption(pointId + point.index, point.color, argsData.border.width || 1, argsData.border.color || point.color, 1, '', '');\n                accumulation[(firstToLowerCase(this.type) + 'SeriesModule')].\n                    renderPoint(point, this, accumulation, option);\n                seriesGroup.appendChild(accumulation.renderer.drawPath(option));\n            }\n        }\n        accumulation.getSeriesElement().appendChild(seriesGroup);\n    }\n    /**\n     * Method render the datalabel elements for accumulation chart.\n     */\n    renderDataLabel(accumulation, datalabelGroup) {\n        accumulation.accumulationDataLabelModule.findAreaRect();\n        let element = createElement('div', {\n            id: accumulation.element.id + '_Series_0' + '_DataLabelCollections'\n        });\n        for (let point of this.points) {\n            if (point.visible) {\n                accumulation.accumulationDataLabelModule.renderDataLabel(point, this.dataLabel, datalabelGroup, this.points, this.index, element);\n            }\n        }\n        if (this.dataLabel.template !== null && element.childElementCount) {\n            getElement(accumulation.element.id + '_Secondary_Element').appendChild(element);\n        }\n        accumulation.getSeriesElement().appendChild(datalabelGroup);\n    }\n    /**\n     * To find maximum bounds for smart legend placing\n     * @private\n     */\n    findMaxBounds(totalbound, bound) {\n        totalbound.x = bound.x < totalbound.x ? bound.x : totalbound.x;\n        totalbound.y = bound.y < totalbound.y ? bound.y : totalbound.y;\n        totalbound.height = (bound.y + bound.height) > totalbound.height ? (bound.y + bound.height) : totalbound.height;\n        totalbound.width = (bound.x + bound.width) > totalbound.width ? (bound.x + bound.width) : totalbound.width;\n    }\n    /**\n     * To set empty point value for null points\n     * @private\n     */\n    setAccEmptyPoint(point, i, data, colors) {\n        if (!isNullOrUndefined(point.y)) {\n            return null;\n        }\n        point.color = this.emptyPointSettings.fill || point.color;\n        switch (this.emptyPointSettings.mode) {\n            case 'Zero':\n                point.y = 0;\n                point.visible = true;\n                break;\n            case 'Average':\n                let previous = data[i - 1] ? (data[i - 1][this.yName] || 0) : 0;\n                let next = data[i + 1] ? (data[i + 1][this.yName] || 0) : 0;\n                point.y = (Math.abs(previous) + Math.abs(next)) / 2;\n                this.sumOfPoints += point.y;\n                point.visible = true;\n                break;\n            case 'Drop':\n                point.visible = false;\n                break;\n        }\n    }\n    /**\n     * To find point is empty\n     */\n    isEmpty(point) {\n        return point.color === this.emptyPointSettings.fill;\n    }\n}\n__decorate([\n    Property('')\n], AccumulationSeries.prototype, \"dataSource\", void 0);\n__decorate([\n    Property()\n], AccumulationSeries.prototype, \"query\", void 0);\n__decorate([\n    Property('')\n], AccumulationSeries.prototype, \"xName\", void 0);\n__decorate([\n    Property('')\n], AccumulationSeries.prototype, \"name\", void 0);\n__decorate([\n    Property('')\n], AccumulationSeries.prototype, \"yName\", void 0);\n__decorate([\n    Property(true)\n], AccumulationSeries.prototype, \"visible\", void 0);\n__decorate([\n    Complex({ color: null, width: 0 }, Border)\n], AccumulationSeries.prototype, \"border\", void 0);\n__decorate([\n    Complex(null, Animation)\n], AccumulationSeries.prototype, \"animation\", void 0);\n__decorate([\n    Property('SeriesType')\n], AccumulationSeries.prototype, \"legendShape\", void 0);\n__decorate([\n    Property('')\n], AccumulationSeries.prototype, \"pointColorMapping\", void 0);\n__decorate([\n    Property(null)\n], AccumulationSeries.prototype, \"selectionStyle\", void 0);\n__decorate([\n    Property(null)\n], AccumulationSeries.prototype, \"groupTo\", void 0);\n__decorate([\n    Complex({}, AccumulationDataLabelSettings)\n], AccumulationSeries.prototype, \"dataLabel\", void 0);\n__decorate([\n    Property([])\n], AccumulationSeries.prototype, \"palettes\", void 0);\n__decorate([\n    Property(0)\n], AccumulationSeries.prototype, \"startAngle\", void 0);\n__decorate([\n    Property(360)\n], AccumulationSeries.prototype, \"endAngle\", void 0);\n__decorate([\n    Property('80%')\n], AccumulationSeries.prototype, \"radius\", void 0);\n__decorate([\n    Property('0')\n], AccumulationSeries.prototype, \"innerRadius\", void 0);\n__decorate([\n    Property('Pie')\n], AccumulationSeries.prototype, \"type\", void 0);\n__decorate([\n    Property(true)\n], AccumulationSeries.prototype, \"enableTooltip\", void 0);\n__decorate([\n    Property(false)\n], AccumulationSeries.prototype, \"explode\", void 0);\n__decorate([\n    Property('30%')\n], AccumulationSeries.prototype, \"explodeOffset\", void 0);\n__decorate([\n    Property(false)\n], AccumulationSeries.prototype, \"explodeAll\", void 0);\n__decorate([\n    Property(null)\n], AccumulationSeries.prototype, \"explodeIndex\", void 0);\n__decorate([\n    Complex({ mode: 'Drop' }, EmptyPointSettings)\n], AccumulationSeries.prototype, \"emptyPointSettings\", void 0);\n__decorate([\n    Property(0)\n], AccumulationSeries.prototype, \"gapRatio\", void 0);\n__decorate([\n    Property('80%')\n], AccumulationSeries.prototype, \"width\", void 0);\n__decorate([\n    Property('80%')\n], AccumulationSeries.prototype, \"height\", void 0);\n__decorate([\n    Property('20%')\n], AccumulationSeries.prototype, \"neckWidth\", void 0);\n__decorate([\n    Property('20%')\n], AccumulationSeries.prototype, \"neckHeight\", void 0);\n__decorate([\n    Property('Linear')\n], AccumulationSeries.prototype, \"pyramidMode\", void 0);\n__decorate([\n    Property(1)\n], AccumulationSeries.prototype, \"opacity\", void 0);\n/**\n * method to get series from index\n * @private\n */\nexport function getSeriesFromIndex(index, visibleSeries) {\n    for (let series of visibleSeries) {\n        if (index === series.index) {\n            return series;\n        }\n    }\n    return visibleSeries[0];\n}\n/**\n * method to get point from index\n * @private\n */\nexport function pointByIndex(index, points) {\n    for (let point of points) {\n        if (point.index === index) {\n            return point;\n        }\n    }\n    return null;\n}\n","/**\n * Defines the common functionalities of accumulation series\n */\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { degreeToLocation, getElement, indexFinder } from '../../common/utils/helper';\nimport { pointByIndex } from '../model/acc-base';\n/**\n * Accumulation Base used to do some base calculation for accumulation chart.\n */\nexport class AccumulationBase {\n    /** @private */\n    constructor(accumulation) {\n        this.accumulation = accumulation;\n    }\n    /**\n     * Gets the center of the pie\n     * @private\n     */\n    get center() {\n        return this.pieCenter || (this.accumulation.visibleSeries[0].type === 'Pie' ?\n            this.accumulation.pieSeriesModule.center : null);\n    }\n    /**\n     * Sets the center of the pie\n     * @private\n     */\n    set center(value) {\n        this.pieCenter = value;\n    }\n    /**\n     * Gets the radius of the pie\n     * @private\n     */\n    get radius() {\n        return this.pieRadius !== undefined ? this.pieRadius :\n            this.accumulation.pieSeriesModule.radius;\n    }\n    /**\n     * Sets the radius of the pie\n     * @private\n     */\n    set radius(value) {\n        this.pieRadius = value;\n    }\n    /**\n     * Gets the label radius of the pie\n     * @private\n     */\n    get labelRadius() {\n        return this.pieLabelRadius !== undefined ? this.pieLabelRadius :\n            this.accumulation.pieSeriesModule.labelRadius;\n    }\n    /**\n     * Sets the label radius of the pie\n     * @private\n     */\n    set labelRadius(value) {\n        this.pieLabelRadius = value;\n    }\n    /**\n     * Checks whether the series is circular or not\n     * @private\n     */\n    isCircular() {\n        return this.accumulation.type === 'Pie';\n    }\n    /**\n     * To process the explode on accumulation chart loading\n     * @private\n     */\n    processExplode(event) {\n        if (event.target.id.indexOf('_Series_') > -1 || event.target.id.indexOf('_datalabel_') > -1) {\n            let pointIndex = indexFinder(event.target.id).point;\n            if (isNaN(pointIndex) || (event.target.id.indexOf('_datalabel_') > -1 &&\n                this.accumulation.visibleSeries[0].points[pointIndex].labelPosition === 'Outside')) {\n                return null;\n            }\n            this.explodePoints(pointIndex, this.accumulation);\n            this.deExplodeAll(pointIndex);\n        }\n    }\n    /**\n     * To invoke the explode on accumulation chart loading\n     * @private\n     */\n    invokeExplode() {\n        if (this.accumulation.visibleSeries[0].explodeAll) {\n            for (let point of this.accumulation.visibleSeries[0].points) {\n                this.explodePoints(point.index, this.accumulation);\n            }\n        }\n        else if (!isNullOrUndefined(this.accumulation.visibleSeries[0].explodeIndex)) {\n            this.explodePoints(this.accumulation.visibleSeries[0].explodeIndex, this.accumulation);\n        }\n        if (this.accumulation.accumulationSelectionModule && this.accumulation.selectionMode !== 'None' &&\n            this.accumulation.accumulationSelectionModule.selectedDataIndexes.length) {\n            for (let index of this.accumulation.accumulationSelectionModule.selectedDataIndexes) {\n                this.explodePoints(index.point, this.accumulation, true);\n                this.deExplodeAll(index.point);\n            }\n        }\n    }\n    /**\n     * To deExplode all points in the series\n     */\n    deExplodeAll(index) {\n        let pointId = this.accumulation.element.id + '_Series_0_Point_';\n        let points = this.accumulation.visibleSeries[0].points;\n        for (let currentPoint of points) {\n            if (index !== currentPoint.index) {\n                this.deExplodeSlice(currentPoint.index, pointId, this.center);\n            }\n        }\n    }\n    /**\n     * To explode point by index\n     * @private\n     */\n    explodePoints(index, chart, explode = false) {\n        let pointId = this.accumulation.element.id + '_Series_0_Point_';\n        let translate;\n        let points = this.accumulation.visibleSeries[0].points;\n        let point = pointByIndex(index, this.accumulation.visibleSeries[0].points);\n        if (isNullOrUndefined(point)) {\n            return null;\n        }\n        if (!this.isCircular()) {\n            translate = { x: chart.explodeDistance, y: 0 };\n        }\n        else {\n            translate = degreeToLocation(point.midAngle, chart.explodeDistance, this.center);\n        }\n        if (this.isExplode(pointId + index) || explode) {\n            this.explodeSlice(index, translate, pointId, this.center || { x: 0, y: 0 });\n        }\n        else {\n            this.deExplodeSlice(index, pointId, this.center);\n        }\n    }\n    /**\n     * To check point is exploded by id\n     */\n    isExplode(id) {\n        let element = getElement(id);\n        if (element && (element.getAttribute('transform') === 'translate(0, 0)' || element.getAttribute('transform') === null ||\n            element.getAttribute('transform') === 'translate(0)')) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    /**\n     * To deExplode the point by index\n     */\n    deExplodeSlice(index, sliceId, center) {\n        let position = 'translate(0, 0)';\n        this.setTranslate(index, sliceId, position);\n    }\n    /**\n     * To translate the point elements by index and position\n     */\n    setTranslate(index, sliceId, position) {\n        this.setElementTransform(sliceId + index, position);\n        if (this.accumulation.visibleSeries[0].dataLabel.visible) {\n            sliceId = this.accumulation.element.id + '_datalabel_Series_0_';\n            this.setElementTransform(sliceId + 'shape_' + index, position);\n            this.setElementTransform(sliceId + 'text_' + index, position);\n            this.setElementTransform(sliceId + 'connector_' + index, position);\n        }\n    }\n    /**\n     * To translate the point element by id and position\n     */\n    setElementTransform(id, position) {\n        let element = getElement(id);\n        if (element) {\n            element.setAttribute('transform', position);\n        }\n    }\n    /**\n     * To translate the point elements by index position\n     */\n    explodeSlice(index, translate, sliceId, center) {\n        let position = 'translate(' + (translate.x - center.x) + ', ' + (translate.y - center.y) + ')';\n        this.setTranslate(index, sliceId, position);\n    }\n}\n","/**\n * Accumulation charts base file\n */\nimport { Animation } from '@syncfusion/ej2-base';\nimport { stringToNumber, ChartLocation, degreeToLocation, Rect, getAnimationFunction, getElement } from '../../common/utils/helper';\nimport { animationComplete } from '../../common/model/constants';\nimport { AccumulationBase } from './accumulation-base';\n/**\n * PieBase class used to do pie base calculations.\n */\nexport class PieBase extends AccumulationBase {\n    /**\n     * To initialize the property values.\n     * @private\n     */\n    initProperties(chart, series) {\n        this.accumulation = chart;\n        let size = Math.min(chart.initialClipRect.width, chart.initialClipRect.height);\n        this.initAngles(series);\n        this.radius = stringToNumber(series.radius, size / 2);\n        this.innerRadius = stringToNumber(series.innerRadius, this.radius);\n        this.labelRadius = series.dataLabel.position === 'Inside' ? (((this.radius - this.innerRadius) / 2) + this.innerRadius) :\n            (this.radius + stringToNumber(series.dataLabel.connectorStyle.length || '4%', size / 2));\n        chart.explodeDistance = series.explode ? stringToNumber(series.explodeOffset, this.radius) : 0;\n        this.findCenter(chart, series);\n        this.defaultLabelBound(series, series.dataLabel.visible, series.dataLabel.position);\n        this.totalAngle -= 0.001;\n    }\n    /**\n     * To find the center of the accumulation.\n     * @private\n     */\n    findCenter(accumulation, series) {\n        this.accumulation = accumulation;\n        this.center = {\n            x: stringToNumber('50%', accumulation.initialClipRect.width) + (accumulation.initialClipRect.x),\n            y: stringToNumber('50%', accumulation.initialClipRect.height) + (accumulation.initialClipRect.y)\n        };\n        let accumulationRect = this.getSeriesBound(series);\n        let accumulationRectCenter = new ChartLocation(accumulationRect.x + accumulationRect.width / 2, accumulationRect.y + accumulationRect.height / 2);\n        this.center.x += (this.center.x - accumulationRectCenter.x);\n        this.center.y += (this.center.y - accumulationRectCenter.y);\n        this.accumulation.center = this.center;\n    }\n    /**\n     * To find angles from series.\n     */\n    initAngles(series) {\n        this.totalAngle = (series.endAngle - series.startAngle) % 360;\n        this.startAngle = series.startAngle - 90;\n        this.totalAngle = this.totalAngle <= 0 ? (360 + this.totalAngle) : this.totalAngle;\n        this.startAngle = (this.startAngle < 0 ? (this.startAngle + 360) : this.startAngle) % 360;\n    }\n    /**\n     * To calculate data-label bound\n     * @private\n     */\n    defaultLabelBound(series, visible, position) {\n        let accumulationBound = this.getSeriesBound(series);\n        series.accumulationBound = accumulationBound;\n        series.labelBound = new Rect(accumulationBound.x, accumulationBound.y, accumulationBound.width + accumulationBound.x, accumulationBound.height + accumulationBound.y);\n        if (visible && position === 'Outside') {\n            series.labelBound = new Rect(Infinity, Infinity, -Infinity, -Infinity);\n        }\n    }\n    /**\n     * To calculate series bound\n     * @private\n     */\n    getSeriesBound(series) {\n        let rect = new Rect(Infinity, Infinity, -Infinity, -Infinity);\n        this.initAngles(series);\n        let start = this.startAngle;\n        let total = this.totalAngle;\n        let end = (this.startAngle + total) % 360;\n        end = (end === 0) ? 360 : end;\n        series.findMaxBounds(rect, this.getRectFromAngle(start));\n        series.findMaxBounds(rect, this.getRectFromAngle(end));\n        series.findMaxBounds(rect, new Rect(this.center.x, this.center.y, 0, 0));\n        let nextQuandrant = (Math.floor(start / 90) * 90 + 90) % 360;\n        let lastQuadrant = (Math.floor(end / 90) * 90) % 360;\n        lastQuadrant = (lastQuadrant === 0) ? 360 : lastQuadrant;\n        if (total >= 90 || lastQuadrant === nextQuandrant) {\n            series.findMaxBounds(rect, this.getRectFromAngle(nextQuandrant));\n            series.findMaxBounds(rect, this.getRectFromAngle(lastQuadrant));\n        }\n        if (start === 0 || (start + total >= 360)) {\n            series.findMaxBounds(rect, this.getRectFromAngle(0));\n        }\n        let length = nextQuandrant === lastQuadrant ? 0 : Math.floor(total / 90);\n        for (let i = 1; i < length; i++) {\n            nextQuandrant = nextQuandrant + 90;\n            if ((nextQuandrant < lastQuadrant || end < start) || total === 360) {\n                series.findMaxBounds(rect, this.getRectFromAngle(nextQuandrant));\n            }\n        }\n        rect.width -= rect.x;\n        rect.height -= rect.y;\n        return rect;\n    }\n    /**\n     * To get rect location size from angle\n     */\n    getRectFromAngle(angle) {\n        let location = degreeToLocation(angle, this.radius, this.center);\n        return new Rect(location.x, location.y, 0, 0);\n    }\n    /**\n     * To get path arc direction\n     */\n    getPathArc(center, start, end, radius, innerRadius) {\n        let degree = end - start;\n        degree = degree < 0 ? (degree + 360) : degree;\n        let flag = (degree < 180) ? 0 : 1;\n        if (!innerRadius && innerRadius === 0) {\n            return this.getPiePath(center, degreeToLocation(start, radius, center), degreeToLocation(end, radius, center), radius, flag);\n        }\n        else {\n            return this.getDoughnutPath(center, degreeToLocation(start, radius, center), degreeToLocation(end, radius, center), radius, degreeToLocation(start, innerRadius, center), degreeToLocation(end, innerRadius, center), innerRadius, flag);\n        }\n    }\n    /**\n     * To get pie direction\n     */\n    getPiePath(center, start, end, radius, clockWise) {\n        return 'M ' + center.x + ' ' + center.y + ' L ' + start.x + ' ' + start.y + ' A ' + radius + ' ' +\n            radius + ' 0 ' + clockWise + ' 1 ' + end.x + ' ' + end.y + ' Z';\n    }\n    /**\n     * To get doughnut direction\n     */\n    getDoughnutPath(center, start, end, radius, innerStart, innerEnd, innerRadius, clockWise) {\n        return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' + clockWise +\n            ' 1 ' + end.x + ' ' + end.y + ' L ' + innerEnd.x + ' ' + innerEnd.y + ' A ' + innerRadius +\n            ' ' + innerRadius + ' 0 ' + clockWise + ',0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n    }\n    /**\n     * Method to start animation for pie series.\n     */\n    doAnimation(slice, series) {\n        let startAngle = series.startAngle - 85;\n        let value;\n        let radius = Math.max(this.accumulation.availableSize.height, this.accumulation.availableSize.width) * 0.75;\n        radius += radius * (0.414); // formula r + r / 2 * (1.414 -1)\n        let effect = getAnimationFunction('Linear'); // need to check animation type\n        new Animation({}).animate(slice, {\n            duration: series.animation.duration,\n            delay: series.animation.delay,\n            progress: (args) => {\n                value = effect(args.timeStamp, startAngle, this.totalAngle, args.duration);\n                slice.setAttribute('d', this.getPathArc(this.center, startAngle, value, radius, 0));\n            },\n            end: (args) => {\n                slice.setAttribute('d', this.getPathArc(this.center, 0, 359.99999, radius, 0));\n                this.accumulation.trigger(animationComplete, { series: series, accumulation: this.accumulation });\n                let datalabelGroup = getElement(this.accumulation.element.id + '_datalabel_Series_' + series.index);\n                datalabelGroup.style.visibility = this.accumulation.isDestroyed ? 'hidden' : 'visible';\n            }\n        });\n    }\n}\n","import { PathOption, degreeToLocation } from '../../common/utils/helper';\nimport { PieBase } from '../renderer/pie-base';\n/**\n * PieSeries module used to render `Pie` Series.\n */\nexport class PieSeries extends PieBase {\n    /**\n     * To get path option, degree, symbolLocation from the point.\n     * @private\n     */\n    renderPoint(point, series, chart, option) {\n        let sum = series.sumOfPoints;\n        let degree = (sum) ? ((Math.abs(point.y) / sum) * (this.totalAngle)) : null;\n        option.d = this.getPathOption(point, degree);\n        point.midAngle = (this.startAngle - (degree / 2)) % 360;\n        point.endAngle = this.startAngle % 360;\n        point.symbolLocation = degreeToLocation(point.midAngle, (this.radius + this.innerRadius) / 2, this.center);\n        return option;\n    }\n    /**\n     * To get path option from the point.\n     */\n    getPathOption(point, degree) {\n        if (degree === null || !point.y) {\n            return '';\n        }\n        let path = this.getPathArc(this.center, this.startAngle % 360, (this.startAngle + degree) % 360, this.radius, this.innerRadius);\n        this.startAngle += degree;\n        return path;\n    }\n    /**\n     * To animate the pie series.\n     * @private\n     */\n    animateSeries(accumulation, option, series, slice) {\n        let groupId = accumulation.element.id + 'SeriesGroup' + series.index;\n        if (series.animation.enable && accumulation.animateSeries) {\n            let clippath = accumulation.renderer.createClipPath({ id: groupId + '_clipPath' });\n            let path = new PathOption(groupId + '_slice', 'transparent', 1, 'transparent', 1, '', '');\n            let clipslice = accumulation.renderer.drawPath(path);\n            clippath.appendChild(clipslice);\n            accumulation.svgObject.appendChild(clippath);\n            slice.setAttribute('style', 'clip-path:url(#' + clippath.id + ')');\n            this.doAnimation(clipslice, series);\n        }\n    }\n    /**\n     * To get the module name of the Pie series.\n     */\n    getModuleName() {\n        return 'PieSeries';\n    }\n    /**\n     * To destroy the pie series.\n     * @return {void}\n     * @private\n     */\n    destroy(accumulation) {\n        /**\n         * Destroy method calling here\n         */\n    }\n}\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * AccumulationChart file\n */\nimport { Property, Component, Complex, Collection, NotifyPropertyChanges } from '@syncfusion/ej2-base';\nimport { Internationalization, Event, Browser, EventHandler, Touch } from '@syncfusion/ej2-base';\nimport { remove, extend, isNullOrUndefined, createElement } from '@syncfusion/ej2-base';\nimport { Font, Margin, Border, TooltipSettings, Indexes } from '../common/model/base';\nimport { AccumulationSeries } from './model/acc-base';\nimport { Theme, getThemeColor } from '../common/model/theme';\nimport { load, pointClick } from '../common/model/constants';\nimport { pointMove, chartMouseClick, chartMouseDown } from '../common/model/constants';\nimport { chartMouseLeave, chartMouseMove, chartMouseUp, resized } from '../common/model/constants';\nimport { LegendSettings } from '../common/legend/legend';\nimport { Rect, Size, subtractRect, indexFinder } from '../common/utils/helper';\nimport { measureText, RectOption, showTooltip } from '../common/utils/helper';\nimport { textElement, TextOption, createSvg, calculateSize, removeElement, firstToLowerCase } from '../common/utils/helper';\nimport { getElement, titlePositionX } from '../common/utils/helper';\nimport { Data } from '../common/model/data';\nimport { AccumulationBase } from './renderer/accumulation-base';\nimport { PieSeries } from './renderer/pie-series';\nimport { AccumulationAnnotationSettings } from './model/acc-base';\nimport { ExportUtils } from '../common/utils/export';\nimport { getTitle } from '../common/utils/helper';\n/**\n * Represents the AccumulationChart control.\n * ```html\n * <div id=\"accumulation\"/>\n * <script>\n *   var accObj = new AccumulationChart({ });\n *   accObj.appendTo(\"#accumulation\");\n * </script>\n * ```\n */\nlet AccumulationChart = class AccumulationChart extends Component {\n    /**\n     * Constructor for creating the AccumulationChart widget\n     * @private\n     */\n    constructor(options, element) {\n        super(options, element);\n        /** @private explode radius internal property */\n        this.explodeDistance = 0;\n    }\n    /** @private */\n    get type() {\n        if (this.series && this.series.length) {\n            return this.series[0].type;\n        }\n        return 'Pie';\n    }\n    // accumulation chart methods\n    /**\n     *  To create svg object, renderer and binding events for the container.\n     */\n    preRender() {\n        this.unWireEvents();\n        this.setCulture();\n        this.animateSeries = true;\n        calculateSize(this);\n        this.wireEvents();\n    }\n    /**\n     * Themeing for chart goes here\n     */\n    setTheme() {\n        /*! Set theme for accumulation chart */\n        this.themeStyle = getThemeColor(this.theme);\n    }\n    /**\n     * To render the accumulation chart elements\n     */\n    render() {\n        this.trigger(load, { accumulation: this });\n        this.setTheme();\n        this.accBaseModule = new AccumulationBase(this);\n        this.pieSeriesModule = new PieSeries(this);\n        this.calculateVisibleSeries();\n        this.processData();\n    }\n    /**\n     * Method to unbind events for accumulation chart\n     */\n    unWireEvents() {\n        /*! Find the Events type */\n        let isIE11Pointer = Browser.isPointer;\n        let start = Browser.touchStartEvent;\n        let move = Browser.touchMoveEvent;\n        let stop = Browser.touchEndEvent;\n        let cancel = isIE11Pointer ? 'pointerleave' : 'mouseleave';\n        /*! UnBind the Event handler */\n        EventHandler.remove(this.element, move, this.accumulationMouseMove);\n        EventHandler.remove(this.element, stop, this.accumulationMouseEnd);\n        EventHandler.remove(this.element, start, this.accumulationMouseStart);\n        EventHandler.remove(this.element, 'click', this.accumulationOnMouseClick);\n        EventHandler.remove(this.element, 'contextmenu', this.accumulationRightClick);\n        EventHandler.remove(this.element, cancel, this.accumulationMouseLeave);\n        window.removeEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.accumulationResize);\n    }\n    /**\n     * Method to bind events for the accumulation chart\n     */\n    wireEvents() {\n        /*! Find the Events type */\n        let isIE11Pointer = Browser.isPointer;\n        let start = Browser.touchStartEvent;\n        let stop = Browser.touchEndEvent;\n        let move = Browser.touchMoveEvent;\n        let cancel = isIE11Pointer ? 'pointerleave' : 'mouseleave';\n        /*! Bind the Event handler */\n        EventHandler.add(this.element, move, this.accumulationMouseMove, this);\n        EventHandler.add(this.element, stop, this.accumulationMouseEnd, this);\n        EventHandler.add(this.element, start, this.accumulationMouseStart, this);\n        EventHandler.add(this.element, 'click', this.accumulationOnMouseClick, this);\n        EventHandler.add(this.element, 'contextmenu', this.accumulationRightClick, this);\n        EventHandler.add(this.element, cancel, this.accumulationMouseLeave, this);\n        window.addEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.accumulationResize.bind(this));\n        new Touch(this.element); // To avoid geasture blocking for browser\n        /*! Apply the style for chart */\n        this.setStyle(this.element);\n    }\n    /**\n     * Method to set mouse x, y from events\n     */\n    setMouseXY(e) {\n        let pageX;\n        let pageY;\n        if (e.type.indexOf('touch') > -1) {\n            this.isTouch = true;\n            let touchArg = e;\n            pageY = touchArg.changedTouches[0].clientY;\n            pageX = touchArg.changedTouches[0].clientX;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch' || e.pointerType === '2';\n            pageX = e.clientX;\n            pageY = e.clientY;\n        }\n        let rect = this.element.getBoundingClientRect();\n        let svgRect = getElement(this.element.id + '_svg').getBoundingClientRect();\n        this.mouseX = (pageX - rect.left) - Math.max(svgRect.left - rect.left, 0);\n        this.mouseY = (pageY - rect.top) - Math.max(svgRect.top - rect.top, 0);\n    }\n    /**\n     * Handles the mouse end.\n     * @return {boolean}\n     * @private\n     */\n    accumulationMouseEnd(e) {\n        this.setMouseXY(e);\n        this.trigger(chartMouseUp, { target: e.target.id, x: this.mouseX, y: this.mouseY });\n        if (this.isTouch) {\n            this.titleTooltip(e, this.mouseX, this.mouseY, this.isTouch);\n            if (this.accumulationDataLabelModule && this.visibleSeries[0].dataLabel.visible) {\n                this.accumulationDataLabelModule.move(e, this.mouseX, this.mouseY, this.isTouch);\n            }\n            if (this.accumulationLegendModule && this.legendSettings.visible) {\n                this.accumulationLegendModule.move(e);\n            }\n        }\n        this.notify(Browser.touchEndEvent, e);\n        return false;\n    }\n    /*public removeSvgOffset(x: number, y: number): ChartLocation {\n        let rect: ClientRect = this.element.getBoundingClientRect();\n        let svgRect: ClientRect = getElement(this.element.id + '_svg').getBoundingClientRect();\n        return { x: (x - rect.left) - Math.max(svgRect.left - rect.left, 0), y: (y - rect.top) - Math.max(svgRect.top - rect.top, 0)};\n    }*/\n    /**\n     * Handles the mouse start.\n     * @return {boolean}\n     * @private\n     */\n    accumulationMouseStart(e) {\n        this.setMouseXY(e);\n        this.trigger(chartMouseDown, { target: e.target.id, x: this.mouseX, y: this.mouseY });\n        return false;\n    }\n    /**\n     * Handles the accumulation chart resize.\n     * @return {boolean}\n     * @private\n     */\n    accumulationResize(e) {\n        this.animateSeries = false;\n        let args = {\n            accumulation: this,\n            previousSize: new Size(this.availableSize.width, this.availableSize.height),\n            name: resized,\n            currentSize: new Size(0, 0)\n        };\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(() => {\n            if (this.isDestroyed) {\n                clearTimeout(this.resizeTo);\n                return;\n            }\n            calculateSize(this);\n            args.currentSize = this.availableSize;\n            this.trigger(resized, args);\n            this.refreshSeries();\n            this.refreshChart();\n        }, 500);\n        return false;\n    }\n    /**\n     * Handles the export method for chart control.\n     */\n    export(type, fileName, orientation) {\n        let exportChart = new ExportUtils(this);\n        exportChart.export(type, fileName, orientation);\n    }\n    /**\n     * Handles the print method for accumulation chart control.\n     */\n    print(id) {\n        let exportChart = new ExportUtils(this);\n        exportChart.print(id);\n    }\n    /**\n     * Applying styles for accumulation chart element\n     */\n    setStyle(element) {\n        element.style.touchAction = 'element';\n        element.style.msTouchAction = 'element';\n        element.style.msContentZooming = 'none';\n        element.style.msUserSelect = 'none';\n        element.style.webkitUserSelect = 'none';\n        element.style.position = 'relative';\n    }\n    /**\n     * Method to set the annotation content dynamically for accumulation.\n     */\n    setAnnotationValue(annotationIndex, content) {\n        let annotation = this.annotations[annotationIndex];\n        let element;\n        let parentNode = getElement(this.element.id + '_Annotation_Collections');\n        if (content) {\n            annotation.content = content;\n            if (parentNode) {\n                element = createElement('div');\n                removeElement(this.element.id + '_Annotation_' + annotationIndex);\n                this.annotationModule.processAnnotation(annotation, annotationIndex, element);\n                parentNode.appendChild(element.children[0]);\n            }\n            else {\n                this.annotationModule.renderAnnotations(getElement(this.element.id + '_Secondary_Element'));\n            }\n        }\n    }\n    /**\n     * Handles the mouse move on accumulation chart.\n     * @return {boolean}\n     * @private\n     */\n    accumulationMouseMove(e) {\n        this.setMouseXY(e);\n        this.trigger(chartMouseMove, { target: e.target.id, x: this.mouseX, y: this.mouseY });\n        if (this.pointMove) {\n            this.triggerPointEvent(pointMove, e.target);\n        }\n        if (this.accumulationLegendModule && this.legendSettings.visible) {\n            this.accumulationLegendModule.move(e);\n        }\n        if (this.accumulationDataLabelModule && this.visibleSeries[0] && this.visibleSeries[0].dataLabel.visible) {\n            this.accumulationDataLabelModule.move(e, this.mouseX, this.mouseY);\n        }\n        if (!this.isTouch) {\n            this.titleTooltip(e, this.mouseX, this.mouseY);\n        }\n        this.notify(Browser.touchMoveEvent, e);\n        return false;\n    }\n    titleTooltip(event, x, y, isTouch) {\n        let targetId = event.target.id;\n        if ((event.target.textContent.indexOf('...') > -1) && (targetId === (this.element.id + '_title'))) {\n            showTooltip(this.title, x, y, this.element.offsetWidth, this.element.id + '_EJ2_Title_Tooltip', getElement(this.element.id + '_Secondary_Element'), isTouch);\n        }\n        else {\n            removeElement(this.element.id + '_EJ2_Title_Tooltip');\n        }\n    }\n    /**\n     * Handles the mouse click on accumulation chart.\n     * @return {boolean}\n     * @private\n     */\n    accumulationOnMouseClick(e) {\n        this.setMouseXY(e);\n        if (this.accumulationLegendModule && this.legendSettings.visible) {\n            this.accumulationLegendModule.click(e);\n        }\n        if (this.selectionMode !== 'None' && this.accumulationSelectionModule) {\n            this.accumulationSelectionModule.calculateSelectedElements(this, e);\n        }\n        if (this.visibleSeries[0].explode) {\n            this.accBaseModule.processExplode(e);\n        }\n        this.trigger(chartMouseClick, { target: e.target.id, x: this.mouseX, y: this.mouseY });\n        if (this.pointClick) {\n            this.triggerPointEvent(pointClick, e.target);\n        }\n        return false;\n    }\n    triggerPointEvent(event, element) {\n        let indexes = indexFinder(element.id, true);\n        if (indexes.series >= 0 && indexes.point >= 0) {\n            this.trigger(event, { series: this.series[indexes.series],\n                point: this.series[indexes.series].points[indexes.point],\n                seriesIndex: indexes.series, pointIndex: indexes.point,\n                x: this.mouseX, y: this.mouseY });\n        }\n    }\n    /**\n     * Handles the mouse right click on accumulation chart.\n     * @return {boolean}\n     * @private\n     */\n    accumulationRightClick(event) {\n        if (event.buttons === 2 || event.pointerType === 'touch') {\n            event.preventDefault();\n            event.stopPropagation();\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Handles the mouse leave on accumulation chart.\n     * @return {boolean}\n     * @private\n     */\n    accumulationMouseLeave(e) {\n        this.setMouseXY(e);\n        this.trigger(chartMouseLeave, { target: e.target.id, x: this.mouseX, y: this.mouseY });\n        this.notify(Browser.isPointer ? 'pointerleave' : 'mouseleave', e);\n        return false;\n    }\n    /**\n     * Method to set culture for chart\n     */\n    setCulture() {\n        this.intl = new Internationalization();\n    }\n    /**\n     * Method to create SVG element for accumulation chart.\n     */\n    createPieSvg() {\n        this.removeSvg();\n        createSvg(this);\n    }\n    /**\n     * To Remove the SVG from accumulation chart.\n     * @return {boolean}\n     * @private\n     */\n    removeSvg() {\n        removeElement(this.element.id + '_Secondary_Element');\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n        removeElement('EJ2_legend_tooltip');\n        removeElement('EJ2_datalabel_tooltip');\n    }\n    /**\n     * Method to create the secondary element for tooltip, datalabel and annotaitons.\n     */\n    createSecondaryElement() {\n        this.element.appendChild(createElement('div', {\n            id: this.element.id + '_Secondary_Element',\n            styles: 'position: relative'\n        }));\n    }\n    /**\n     * Method to find visible series based on series types\n     */\n    calculateVisibleSeries() {\n        this.visibleSeries = [];\n        for (let i = 0, length = this.series.length; i < length; i++) {\n            this.series[i].index = i;\n            if (this.series[i].type === this.type && this.visibleSeries.length === 0) {\n                this.visibleSeries.push(this.series[i]);\n                break;\n            }\n        }\n    }\n    /**\n     * To find points from dataSource\n     */\n    processData() {\n        this.seriesCounts = 0;\n        for (let series of this.visibleSeries) {\n            series.dataModule = new Data(series.dataSource, series.query);\n            series.refreshDataManager(this);\n        }\n    }\n    /**\n     * To refresh the accumulation chart\n     * @private\n     */\n    refreshChart() {\n        this.doGrouppingProcess();\n        this.createPieSvg();\n        this.calculateBounds();\n        this.renderElements();\n    }\n    /**\n     * Method to find groupped points\n     */\n    doGrouppingProcess() {\n        let series = this.visibleSeries[0];\n        if (!isNullOrUndefined(series.resultData) && ((!isNullOrUndefined(series.lastGroupTo) &&\n            series.lastGroupTo !== series.groupTo))) {\n            series.getPoints(series.resultData, this);\n        }\n    }\n    /**\n     * Method to calculate bounds for accumulation chart\n     */\n    calculateBounds() {\n        this.initialClipRect = new Rect(this.margin.left, this.margin.top, this.availableSize.width, this.availableSize.height);\n        this.titleCollection = [];\n        this.titleCollection = getTitle(this.title, this.titleStyle, this.initialClipRect.width);\n        subtractRect(this.initialClipRect, new Rect(0, (measureText(this.title, this.titleStyle).height * this.titleCollection.length), this.margin.right + this.margin.left, this.margin.bottom + this.margin.top));\n        this.calculateLegendBounds();\n    }\n    /*\n     * Method to calculate legend bounds for accumulation chart\n     */\n    calculateLegendBounds() {\n        if (!this.accumulationLegendModule || !this.legendSettings.visible) {\n            return null;\n        }\n        this.accumulationLegendModule.getLegendOptions(this, this.visibleSeries);\n        this.accumulationLegendModule.calculateLegendBounds(this.initialClipRect, this.availableSize);\n    }\n    /**\n     * To render elements for accumulation chart\n     * @private\n     */\n    renderElements() {\n        this.renderBorder();\n        this.renderTitle();\n        this.createSecondaryElement();\n        this.renderSeries();\n        this.renderLegend();\n        this.element.appendChild(this.svgObject);\n        this.processSelection();\n        this.processExplode();\n        this.renderAnnotation();\n        this.setSecondaryElementPosition();\n        this.trigger('loaded', { accumulation: this });\n        this.animateSeries = false;\n    }\n    /**\n     * To set the left and top position for data label template for center aligned chart\n     */\n    setSecondaryElementPosition() {\n        let tooltipParent = getElement(this.element.id + '_Secondary_Element');\n        if (!tooltipParent) {\n            return;\n        }\n        let rect = this.element.getBoundingClientRect();\n        let svgRect = getElement(this.element.id + '_svg').getBoundingClientRect();\n        tooltipParent.style.left = Math.max(svgRect.left - rect.left, 0) + 'px';\n        tooltipParent.style.top = Math.max(svgRect.top - rect.top, 0) + 'px';\n    }\n    /**\n     * To render the annotaitions for accumulation series.\n     */\n    renderAnnotation() {\n        if (this.annotationModule) {\n            this.annotationModule.renderAnnotations(getElement(this.element.id + '_Secondary_Element'));\n        }\n    }\n    /**\n     * Method to process the explode in accumulation chart\n     */\n    processExplode() {\n        if (!this.visibleSeries[0].explode) {\n            return null;\n        }\n        this.accBaseModule.invokeExplode();\n    }\n    /**\n     * Method to render series for accumulation chart\n     */\n    renderSeries() {\n        this.svgObject.appendChild(this.renderer.createGroup({ id: this.element.id + '_SeriesCollection' }));\n        for (let series of this.visibleSeries) {\n            if (series.visible && this[(firstToLowerCase(series.type) + 'SeriesModule')]) {\n                this[(firstToLowerCase(series.type) + 'SeriesModule')].initProperties(this, series);\n                series.renderSeries(this);\n            }\n        }\n    }\n    /**\n     * Method to render border for accumulation chart\n     */\n    renderBorder() {\n        let padding = this.border.width;\n        this.svgObject.appendChild(this.renderer.drawRectangle(new RectOption(this.element.id + '_border', this.background || this.themeStyle.background, this.border, 1, new Rect(padding / 2, padding / 2, this.availableSize.width - padding, this.availableSize.height - padding))));\n    }\n    /**\n     * Method to render legend for accumulation chart\n     */\n    renderLegend() {\n        if (!this.accumulationLegendModule || !this.legendSettings.visible) {\n            return null;\n        }\n        if (this.accumulationLegendModule.legendCollections.length) {\n            if (this.visibleSeries[0].type === 'Pie') {\n                this.accumulationLegendModule.getSmartLegendLocation(this.visibleSeries[0].labelBound, this.accumulationLegendModule.legendBounds, this.margin);\n            }\n            this.accumulationLegendModule.renderLegend(this, this.legendSettings, this.accumulationLegendModule.legendBounds);\n        }\n    }\n    /**\n     * To process the selection in accumulation chart\n     */\n    processSelection() {\n        if (!this.accumulationSelectionModule || this.selectionMode === 'None') {\n            return null;\n        }\n        let selectedDataIndexes = extend([], this.accumulationSelectionModule.selectedDataIndexes, null, true);\n        this.accumulationSelectionModule.invokeSelection(this);\n        if (selectedDataIndexes.length > 0) {\n            this.accumulationSelectionModule.selectedDataIndexes = selectedDataIndexes;\n            this.accumulationSelectionModule.redrawSelection(this, this.selectionMode);\n        }\n    }\n    /**\n     * To render title for accumulation chart\n     */\n    renderTitle() {\n        if (!this.title) {\n            return null;\n        }\n        let titleSize = measureText(this.title, this.titleStyle);\n        let anchor = this.titleStyle.textAlignment === 'Near' ? 'start' :\n            this.titleStyle.textAlignment === 'Far' ? 'end' : 'middle';\n        textElement(new TextOption(this.element.id + '_title', titlePositionX(this.availableSize, this.margin.left, this.margin.left, this.titleStyle), this.margin.top + (titleSize.height * 3 / 4), anchor, this.titleCollection, '', 'auto'), this.titleStyle, this.titleStyle.color || this.themeStyle.chartTitle, this.svgObject);\n    }\n    /**\n     * To get the series parent element\n     * @private\n     */\n    getSeriesElement() {\n        return this.svgObject.getElementsByTagName('g')[0];\n    }\n    /**\n     * To refresh the all visible series points\n     * @private\n     */\n    refreshSeries() {\n        for (let series of this.visibleSeries) {\n            this.refreshPoints(series.points);\n        }\n    }\n    /**\n     * To refresh points label region and visible\n     * @private\n     */\n    refreshPoints(points) {\n        for (let point of points) {\n            point.labelPosition = null;\n            point.labelRegion = null;\n            point.labelVisible = true;\n        }\n    }\n    /**\n     * To get Module name\n     *  @private\n     */\n    getModuleName() {\n        return 'accumulationchart';\n    }\n    /**\n     * To destroy the accumulationcharts\n     * @private\n     */\n    destroy() {\n        this.unWireEvents();\n        super.destroy();\n        this.element.classList.remove('e-accumulationchart');\n    }\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    requiredModules() {\n        let modules = [];\n        let enableAnnotation = false;\n        modules.push({\n            member: this.type + 'Series',\n            args: [this]\n        });\n        if (this.legendSettings.visible) {\n            modules.push({\n                member: 'AccumulationLegend',\n                args: [this]\n            });\n        }\n        if (this.findDatalabelVisibility()) {\n            modules.push({\n                member: 'AccumulationDataLabel',\n                args: [this]\n            });\n        }\n        if (this.tooltip.enable) {\n            modules.push({\n                member: 'AccumulationTooltip',\n                args: [this]\n            });\n        }\n        if (this.selectionMode !== 'None') {\n            modules.push({\n                member: 'AccumulationSelection',\n                args: [this]\n            });\n        }\n        enableAnnotation = this.annotations.some((value) => {\n            return (value.content !== null);\n        });\n        if (enableAnnotation) {\n            modules.push({\n                member: 'Annotation',\n                args: [this]\n            });\n        }\n        return modules;\n    }\n    /**\n     * To find datalabel visibility in series\n     */\n    findDatalabelVisibility() {\n        for (let series of this.series) {\n            if (series.dataLabel.visible) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @private\n     */\n    getPersistData() {\n        return '';\n    }\n    /**\n     * Called internally if any of the property value changed.\n     * @private\n     */\n    onPropertyChanged(newProp, oldProp) {\n        let update = {\n            refreshElements: false, refreshBounds: false\n        };\n        for (let prop of Object.keys(newProp)) {\n            switch (prop) {\n                case 'theme':\n                    this.animateSeries = true;\n                    break;\n                case 'title':\n                case 'height':\n                case 'width':\n                case 'margin':\n                    update.refreshBounds = true;\n                    break;\n                case 'titleStyle':\n                    if (newProp.titleStyle && (newProp.titleStyle.size || newProp.titleStyle.textOverflow)) {\n                        update.refreshBounds = true;\n                    }\n                    else {\n                        update.refreshElements = true;\n                    }\n                    break;\n                case 'legendSettings':\n                    update.refreshBounds = true;\n                    update.refreshElements = true;\n                    break;\n                case 'locale':\n                case 'currencyCode':\n                    super.refresh();\n                    break;\n                case 'background':\n                case 'border':\n                case 'annotations':\n                case 'enableSmartLabels':\n                    update.refreshElements = true;\n                    break;\n                case 'isMultiSelect':\n                case 'selectedDataIndexes':\n                case 'selectionMode':\n                    if (this.accumulationSelectionModule) {\n                        if (isNullOrUndefined(this.accumulationSelectionModule.selectedDataIndexes)) {\n                            this.accumulationSelectionModule.invokeSelection(this);\n                        }\n                        else {\n                            this.accumulationSelectionModule.redrawSelection(this, oldProp.selectionMode);\n                        }\n                    }\n                    break;\n            }\n        }\n        if (!update.refreshBounds && update.refreshElements) {\n            this.createPieSvg();\n            this.renderElements();\n        }\n        else if (update.refreshBounds) {\n            this.refreshSeries();\n            this.createPieSvg();\n            this.calculateBounds();\n            this.renderElements();\n        }\n    }\n};\n__decorate([\n    Property(null)\n], AccumulationChart.prototype, \"width\", void 0);\n__decorate([\n    Property(null)\n], AccumulationChart.prototype, \"height\", void 0);\n__decorate([\n    Property(null)\n], AccumulationChart.prototype, \"title\", void 0);\n__decorate([\n    Complex(Theme.chartTitleFont, Font)\n], AccumulationChart.prototype, \"titleStyle\", void 0);\n__decorate([\n    Complex({}, LegendSettings)\n], AccumulationChart.prototype, \"legendSettings\", void 0);\n__decorate([\n    Complex({}, TooltipSettings)\n], AccumulationChart.prototype, \"tooltip\", void 0);\n__decorate([\n    Property('None')\n], AccumulationChart.prototype, \"selectionMode\", void 0);\n__decorate([\n    Property(false)\n], AccumulationChart.prototype, \"isMultiSelect\", void 0);\n__decorate([\n    Collection([], Indexes)\n], AccumulationChart.prototype, \"selectedDataIndexes\", void 0);\n__decorate([\n    Complex({}, Margin)\n], AccumulationChart.prototype, \"margin\", void 0);\n__decorate([\n    Property(true)\n], AccumulationChart.prototype, \"enableSmartLabels\", void 0);\n__decorate([\n    Complex({ color: '#DDDDDD', width: 0 }, Border)\n], AccumulationChart.prototype, \"border\", void 0);\n__decorate([\n    Property(null)\n], AccumulationChart.prototype, \"background\", void 0);\n__decorate([\n    Collection([{}], AccumulationSeries)\n], AccumulationChart.prototype, \"series\", void 0);\n__decorate([\n    Collection([{}], AccumulationAnnotationSettings)\n], AccumulationChart.prototype, \"annotations\", void 0);\n__decorate([\n    Property('Material')\n], AccumulationChart.prototype, \"theme\", void 0);\n__decorate([\n    Event()\n], AccumulationChart.prototype, \"loaded\", void 0);\n__decorate([\n    Event()\n], AccumulationChart.prototype, \"load\", void 0);\n__decorate([\n    Event()\n], AccumulationChart.prototype, \"seriesRender\", void 0);\n__decorate([\n    Event()\n], AccumulationChart.prototype, \"legendRender\", void 0);\n__decorate([\n    Event()\n], AccumulationChart.prototype, \"textRender\", void 0);\n__decorate([\n    Event()\n], AccumulationChart.prototype, \"tooltipRender\", void 0);\n__decorate([\n    Event()\n], AccumulationChart.prototype, \"pointRender\", void 0);\n__decorate([\n    Event()\n], AccumulationChart.prototype, \"annotationRender\", void 0);\n__decorate([\n    Event()\n], AccumulationChart.prototype, \"beforePrint\", void 0);\n__decorate([\n    Event()\n], AccumulationChart.prototype, \"chartMouseMove\", void 0);\n__decorate([\n    Event()\n], AccumulationChart.prototype, \"chartMouseClick\", void 0);\n__decorate([\n    Event()\n], AccumulationChart.prototype, \"pointClick\", void 0);\n__decorate([\n    Event()\n], AccumulationChart.prototype, \"pointMove\", void 0);\n__decorate([\n    Event()\n], AccumulationChart.prototype, \"animationComplete\", void 0);\n__decorate([\n    Event()\n], AccumulationChart.prototype, \"chartMouseDown\", void 0);\n__decorate([\n    Event()\n], AccumulationChart.prototype, \"chartMouseLeave\", void 0);\n__decorate([\n    Event()\n], AccumulationChart.prototype, \"chartMouseUp\", void 0);\n__decorate([\n    Event()\n], AccumulationChart.prototype, \"resized\", void 0);\n__decorate([\n    Property('USD')\n], AccumulationChart.prototype, \"currencyCode\", void 0);\nAccumulationChart = __decorate([\n    NotifyPropertyChanges\n], AccumulationChart);\nexport { AccumulationChart };\n","/**\n * Defines the common behavior of funnel and pyramid series\n */\nimport { Size, stringToNumber, Rect } from '../../common/utils/helper';\nimport { AccumulationBase } from './accumulation-base';\n/**\n * TriangularBase is used to calculate base functions for funnel/pyramid series.\n */\nexport class TriangularBase extends AccumulationBase {\n    /**\n     * Initializes the properties of funnel/pyramid series\n     * @private\n     */\n    initProperties(chart, series) {\n        let actualChartArea = chart.initialClipRect;\n        series.triangleSize = new Size(stringToNumber(series.width, actualChartArea.width), stringToNumber(series.height, actualChartArea.height));\n        series.neckSize = new Size(stringToNumber(series.neckWidth, actualChartArea.width), stringToNumber(series.neckHeight, actualChartArea.height));\n        this.defaultLabelBound(series, series.dataLabel.visible, series.dataLabel.position, chart);\n        if (series.explodeOffset === '30%') {\n            series.explodeOffset = '25px';\n        }\n        chart.explodeDistance = stringToNumber(series.explodeOffset, actualChartArea.width);\n        let points = series.points;\n        this.initializeSizeRatio(points, series);\n    }\n    /**\n     * Initializes the size of the pyramid/funnel segments\n     * @private\n     */\n    initializeSizeRatio(points, series, reverse = false) {\n        let sumOfPoints = series.sumOfPoints;\n        //Limiting the ratio within the range of 0 to 1\n        let gapRatio = Math.min(Math.max(series.gapRatio, 0), 1);\n        //% equivalence of a value 1\n        let coEff = 1 / (sumOfPoints * (1 + gapRatio / (1 - gapRatio)));\n        let spacing = gapRatio / (points.length - 1);\n        let y = 0;\n        //starting from bottom\n        for (let i = points.length - 1; i >= 0; i--) {\n            let index = reverse ? points.length - 1 - i : i;\n            if (points[index].visible) {\n                let height = coEff * points[index].y;\n                points[index].yRatio = y;\n                points[index].heightRatio = height;\n                y += height + spacing;\n            }\n        }\n    }\n    /**\n     * Marks the label location from the set of points that forms a pyramid/funnel segment\n     * @private\n     */\n    setLabelLocation(series, point, points) {\n        let last = points.length - 1;\n        let bottom = series.type === 'Funnel' ? points.length - 2 : points.length - 1;\n        let x = (points[0].x + points[bottom].x) / 2;\n        let right = (points[1].x + points[bottom - 1].x) / 2;\n        point.region = new Rect(x, points[0].y, right - x, points[bottom].y - points[0].y);\n        point.symbolLocation = {\n            x: point.region.x + point.region.width / 2,\n            y: point.region.y + point.region.height / 2\n        };\n        point.labelOffset = {\n            x: point.symbolLocation.x - (points[0].x + points[last].x) / 2,\n            y: point.symbolLocation.y - (points[0].y + points[last].y) / 2\n        };\n    }\n    /**\n     * Finds the path to connect the list of points\n     * @private\n     */\n    findPath(locations) {\n        let path = 'M';\n        for (let i = 0; i < locations.length; i++) {\n            path += locations[i].x + ' ' + locations[i].y;\n            if (i !== locations.length - 1) {\n                path += ' L';\n            }\n        }\n        return path;\n    }\n    /**\n     * To calculate data-label bounds\n     * @private\n     */\n    defaultLabelBound(series, visible, position, chart) {\n        let x = (chart.initialClipRect.width - series.triangleSize.width) / 2;\n        let y = (chart.initialClipRect.height - series.triangleSize.height) / 2;\n        let accumulationBound = new Rect(x, y, series.triangleSize.width, series.triangleSize.height);\n        series.labelBound = new Rect(accumulationBound.x, accumulationBound.y, accumulationBound.width + accumulationBound.x, accumulationBound.height + accumulationBound.y);\n        series.accumulationBound = accumulationBound;\n        if (visible && position === 'Outside') {\n            series.labelBound = new Rect(Infinity, Infinity, -Infinity, -Infinity);\n        }\n    }\n}\n","/**\n * Defines the behavior of a funnel series\n */\nimport { TriangularBase } from './triangular-base';\n/**\n * FunnelSeries module used to render `Funnel` Series.\n */\nexport class FunnelSeries extends TriangularBase {\n    /**\n     * Defines the path of a funnel segment\n     */\n    getSegmentData(point, series, chart) {\n        let lineWidth;\n        let topRadius;\n        let bottomRadius;\n        let endTop;\n        let endBottom;\n        let minRadius;\n        let endMin;\n        let bottomY;\n        let area = series.triangleSize;\n        let offset = 0;\n        let extraSpace = (chart.initialClipRect.width - series.triangleSize.width) / 2;\n        let emptySpaceAtLeft = extraSpace + chart.initialClipRect.x;\n        let seriesTop = chart.initialClipRect.y + (chart.initialClipRect.height - area.height) / 2;\n        //defines the top and bottom of a segment\n        let top = point.yRatio * area.height;\n        let bottom = top + point.heightRatio * area.height;\n        let neckSize = series.neckSize;\n        lineWidth = neckSize.width + (area.width - neckSize.width) * ((area.height - neckSize.height - top) /\n            (area.height - neckSize.height));\n        topRadius = (area.width / 2) - lineWidth / 2;\n        //Calculating the middle slope change and bottom\n        endTop = topRadius + lineWidth;\n        if (bottom > area.height - neckSize.height || area.height === neckSize.height) {\n            lineWidth = neckSize.width;\n        }\n        else {\n            lineWidth = neckSize.width + (area.width - neckSize.width) *\n                ((area.height - neckSize.height - bottom) / (area.height - neckSize.height));\n        }\n        bottomRadius = (area.width / 2) - (lineWidth / 2);\n        endBottom = bottomRadius + lineWidth;\n        if (top >= area.height - neckSize.height) {\n            topRadius = bottomRadius = minRadius = (area.width / 2) - neckSize.width / 2;\n            endTop = endBottom = endMin = (area.width / 2) + neckSize.width / 2;\n        }\n        else if (bottom > (area.height - neckSize.height)) {\n            minRadius = bottomRadius = (area.width / 2) - lineWidth / 2;\n            endMin = endBottom = minRadius + lineWidth;\n            bottomY = area.height - neckSize.height;\n        }\n        let points = [];\n        top += seriesTop;\n        bottom += seriesTop;\n        bottomY += seriesTop;\n        let line1 = { x: emptySpaceAtLeft + offset + topRadius, y: top };\n        let line2 = { x: emptySpaceAtLeft + offset + endTop, y: top };\n        let line4 = { x: emptySpaceAtLeft + offset + endBottom, y: bottom };\n        let line5 = { x: emptySpaceAtLeft + offset + bottomRadius, y: bottom };\n        let line3 = { x: emptySpaceAtLeft + offset + endBottom, y: bottom };\n        let line6 = { x: emptySpaceAtLeft + offset + bottomRadius, y: bottom };\n        if (bottomY) {\n            line3 = { x: emptySpaceAtLeft + offset + endMin, y: bottomY };\n            line6 = { x: emptySpaceAtLeft + offset + minRadius, y: bottomY };\n        }\n        let polygon = [line1, line2, line3, line4, line5, line6];\n        this.setLabelLocation(series, point, polygon);\n        let direction = this.findPath(polygon);\n        return direction;\n    }\n    /**\n     * Renders a funnel segment\n     * @private\n     */\n    renderPoint(point, series, chart, options) {\n        let direction = this.getSegmentData(point, series, chart);\n        point.midAngle = 0;\n        options.d = direction;\n    }\n    /**\n     * To get the module name of the funnel series.\n     */\n    getModuleName() {\n        return 'FunnelSeries';\n    }\n    /**\n     * To destroy the funnel series.\n     * @return {void}\n     * @private\n     */\n    destroy(accumulation) {\n        /**\n         * Destroys the funnel series\n         */\n    }\n}\n","/**\n * Defines the behavior of a pyramid series\n */\nimport { TriangularBase } from './triangular-base';\n/**\n * PyramidSeries module used to render `Pyramid` Series.\n */\nexport class PyramidSeries extends TriangularBase {\n    /**\n     * Defines the path of a pyramid segment\n     */\n    getSegmentData(point, series, chart) {\n        let area = series.triangleSize;\n        //top of th series\n        let seriesTop = chart.initialClipRect.y + (chart.initialClipRect.height - area.height) / 2;\n        let points = [];\n        //consider, if the point is exploded\n        let offset = 0;\n        let extraSpace = (chart.initialClipRect.width - series.triangleSize.width) / 2;\n        let emptySpaceAtLeft = extraSpace + chart.initialClipRect.x;\n        //top and bottom\n        let top = point.yRatio;\n        let bottom = point.yRatio + point.heightRatio;\n        //width of the top and bottom edge\n        let topRadius = 0.5 * (1 - point.yRatio);\n        let bottomRadius = 0.5 * (1 - bottom);\n        top += seriesTop / area.height;\n        bottom += seriesTop / area.height;\n        let line1 = {\n            x: emptySpaceAtLeft + offset + topRadius * area.width,\n            y: top * area.height\n        };\n        let line2 = {\n            x: emptySpaceAtLeft + offset + (1 - topRadius) * area.width,\n            y: top * area.height\n        };\n        let line3 = {\n            x: emptySpaceAtLeft + offset + (1 - bottomRadius) * area.width,\n            y: bottom * area.height\n        };\n        let line4 = {\n            x: emptySpaceAtLeft + offset + bottomRadius * area.width,\n            y: bottom * area.height\n        };\n        let polygon = [line1, line2, line3, line4];\n        this.setLabelLocation(series, point, polygon);\n        let direction = this.findPath(polygon);\n        return direction;\n    }\n    /**\n     * Initializes the size of the pyramid segments\n     * @private\n     */\n    initializeSizeRatio(points, series) {\n        if (series.pyramidMode === 'Linear') {\n            super.initializeSizeRatio(points, series, true);\n        }\n        else {\n            this.calculateSurfaceSegments(series);\n        }\n    }\n    /**\n     * Defines the size of the pyramid segments, the surface of that will reflect the values\n     */\n    calculateSurfaceSegments(series) {\n        let count = series.points.length;\n        let sumOfValues = series.sumOfPoints;\n        let yRatio = 0;\n        let y = [];\n        let height = [];\n        let gapRatio = Math.min(0, Math.max(series.gapRatio, 1));\n        let gapHeight = gapRatio / (count - 1);\n        let preSum = this.getSurfaceHeight(0, sumOfValues);\n        let currY = 0;\n        for (let i = 0; i < count; i++) {\n            if (series.points[i].visible) {\n                y[i] = currY;\n                height[i] = this.getSurfaceHeight(currY, Math.abs(series.points[i].y));\n                currY += height[i] + gapHeight * preSum;\n            }\n        }\n        let coef = 1 / (currY - gapHeight * preSum);\n        for (let i = 0; i < count; i++) {\n            if (series.points[i].visible) {\n                series.points[i].yRatio = coef * y[i];\n                series.points[i].heightRatio = coef * height[i];\n            }\n        }\n    }\n    /**\n     * Finds the height of pyramid segment\n     */\n    getSurfaceHeight(y, surface) {\n        let result = this.solveQuadraticEquation(1, 2 * y, -surface);\n        return result;\n    }\n    /**\n     * Solves quadratic equation\n     */\n    solveQuadraticEquation(a, b, c) {\n        let root1;\n        let root2;\n        let d = b * b - 4 * a * c;\n        if (d >= 0) {\n            let sd = Math.sqrt(d);\n            root1 = (-b - sd) / (2 * a);\n            root2 = (-b + sd) / (2 * a);\n            return Math.max(root1, root2);\n        }\n        return 0;\n    }\n    /**\n     * Renders a pyramid segment\n     */\n    renderPoint(point, series, chart, options) {\n        let direction = this.getSegmentData(point, series, chart);\n        point.midAngle = 0;\n        options.d = direction;\n    }\n    /**\n     * To get the module name of the Pyramid series.\n     */\n    getModuleName() {\n        return 'PyramidSeries';\n    }\n    /**\n     * To destroy the pyramid series\n     * @return {void}\n     * @private\n     */\n    destroy(accumulation) {\n        /**\n         * Destroys the pyramid series\n         */\n    }\n}\n","/**\n * AccumulationChart legend\n */\nimport { extend, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { pointByIndex } from '../model/acc-base';\nimport { BaseLegend, LegendOptions } from '../../common/legend/legend';\nimport { Rect, measureText, textTrim } from '../../common/utils/helper';\n/**\n * AccumulationLegend module used to render `Legend` for Accumulation chart.\n */\nexport class AccumulationLegend extends BaseLegend {\n    /**\n     * Constructor for Accumulation Legend.\n     * @param chart\n     */\n    constructor(chart) {\n        super(chart);\n        this.library = this;\n        this.titleRect = new Rect(0, chart.margin.top, 0, 0);\n    }\n    /**\n     * Get the legend options.\n     * @return {void}\n     * @private\n     */\n    getLegendOptions(chart, series) {\n        this.legendCollections = [];\n        for (let i = 0; i < 1; i++) {\n            let seriesType = series[i].type;\n            if (seriesType === 'Pie' || seriesType === 'Doughnut') {\n                seriesType = (series[i].innerRadius !== '0' && series[i].innerRadius !== '0%') ?\n                    'Doughnut' : 'Pie';\n            }\n            for (let point of series[i].points) {\n                if (!isNullOrUndefined(point.x) && !isNullOrUndefined(point.y)) {\n                    this.legendCollections.push(new LegendOptions(point.x.toString(), point.color, series[i].legendShape, point.visible, seriesType, null, null, point.index, series[i].index));\n                }\n            }\n        }\n    }\n    /**\n     * To find legend bounds for accumulation chart.\n     * @private\n     */\n    getLegendBounds(availableSize, legendBounds, legend) {\n        let extraWidth = 0;\n        let extraHeight = 0;\n        let padding = legend.padding;\n        if (!this.isVertical) {\n            extraHeight = !legend.height ? ((availableSize.height / 100) * 5) : 0;\n        }\n        else {\n            extraWidth = !legend.width ? ((availableSize.width / 100) * 5) : 0;\n        }\n        legendBounds.width += extraWidth;\n        legendBounds.height += extraHeight;\n        let shapePadding = legend.shapePadding;\n        let maximumWidth = 0;\n        let shapeWidth = legend.shapeWidth;\n        let rowWidth = 0;\n        let rowCount = 0;\n        let columnWidth = [];\n        let columnHeight = 0;\n        let legendWidth = 0;\n        this.maxItemHeight = Math.max(measureText('MeasureText', legend.textStyle).height, legend.shapeHeight);\n        let legendEventArgs;\n        let render = false;\n        for (let legendOption of this.legendCollections) {\n            legendEventArgs = { fill: legendOption.fill, text: legendOption.text, shape: legendOption.shape,\n                name: 'legendRender', cancel: false };\n            this.chart.trigger('legendRender', legendEventArgs);\n            legendOption.render = !legendEventArgs.cancel;\n            legendOption.text = legendEventArgs.text;\n            legendOption.fill = legendEventArgs.fill;\n            legendOption.shape = legendEventArgs.shape;\n            legendOption.textSize = measureText(legendOption.text, legend.textStyle);\n            if (legendOption.render && legendOption.text !== '') {\n                render = true;\n                legendWidth = shapeWidth + shapePadding + legendOption.textSize.width + padding;\n                if (this.isVertical) {\n                    ++rowCount;\n                    columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding;\n                    if ((rowCount * (this.maxItemHeight + padding)) + padding > legendBounds.height) {\n                        columnHeight = Math.max(columnHeight, (rowCount * (this.maxItemHeight + padding)) + padding);\n                        rowWidth = rowWidth + maximumWidth;\n                        columnWidth.push(maximumWidth);\n                        this.totalPages = Math.max(rowCount, this.totalPages || 1);\n                        maximumWidth = 0;\n                        rowCount = 1;\n                    }\n                    maximumWidth = Math.max(legendWidth, maximumWidth);\n                }\n                else {\n                    rowWidth = rowWidth + legendWidth;\n                    if (legendBounds.width < (padding + rowWidth)) {\n                        maximumWidth = Math.max(maximumWidth, (rowWidth + padding - legendWidth));\n                        if (rowCount === 0 && (legendWidth !== rowWidth)) {\n                            rowCount = 1;\n                        }\n                        rowWidth = legendWidth;\n                        rowCount++;\n                        columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding;\n                    }\n                }\n            }\n        }\n        if (this.isVertical) {\n            rowWidth = rowWidth + maximumWidth;\n            this.isPaging = legendBounds.width < (rowWidth + padding);\n            columnHeight = Math.max(columnHeight, ((this.totalPages || 1) * (this.maxItemHeight + padding)) + padding);\n            this.isPaging = this.isPaging && (this.totalPages > 1);\n            if (columnWidth[columnWidth.length - 1] !== maximumWidth) {\n                columnWidth.push(maximumWidth);\n            }\n        }\n        else {\n            this.isPaging = legendBounds.height < columnHeight;\n            this.totalPages = this.totalRowCount = rowCount;\n            columnHeight = Math.max(columnHeight, (this.maxItemHeight + padding) + padding);\n        }\n        this.maxColumns = 0; // initialization for max columns\n        let width = this.isVertical ? this.getMaxColumn(columnWidth, legendBounds.width, padding, rowWidth + padding) :\n            Math.max(rowWidth + padding, maximumWidth);\n        if (render) {\n            this.setBounds(width, columnHeight, legend, legendBounds);\n        }\n        else {\n            this.setBounds(0, 0, legend, legendBounds);\n        }\n    }\n    /**\n     * To find maximum column size for legend\n     */\n    getMaxColumn(columns, width, padding, rowWidth) {\n        let maxPageColumn = padding;\n        this.maxColumnWidth = Math.max.apply(null, columns);\n        for (let column of columns) {\n            maxPageColumn += this.maxColumnWidth;\n            this.maxColumns++;\n            if (maxPageColumn + padding > width) {\n                maxPageColumn -= this.maxColumnWidth;\n                this.maxColumns--;\n                break;\n            }\n        }\n        this.isPaging = (maxPageColumn < rowWidth) && (this.totalPages > 1);\n        if (maxPageColumn === padding) {\n            maxPageColumn = width;\n        }\n        this.maxColumns = Math.max(1, this.maxColumns);\n        this.maxWidth = maxPageColumn;\n        return maxPageColumn;\n    }\n    /**\n     * To find available width from legend x position.\n     */\n    getAvailWidth(tx, width, legendX) {\n        if (this.isVertical) {\n            width = this.maxWidth;\n        }\n        return width - ((this.legend.padding * 2) + this.legend.shapeWidth + this.legend.shapePadding);\n    }\n    /**\n     * To find legend rendering locations from legend options.\n     * @private\n     */\n    getRenderPoint(legendOption, start, textPadding, prevLegend, rect, count, firstLegend) {\n        let padding = this.legend.padding;\n        if (this.isVertical) {\n            if (count === firstLegend || (prevLegend.location.y + (this.maxItemHeight * 1.5) + (padding * 2) > rect.y + rect.height)) {\n                legendOption.location.x = prevLegend.location.x + ((count === firstLegend) ? 0 : this.maxColumnWidth);\n                legendOption.location.y = start.y;\n                this.pageXCollections.push(legendOption.location.x - (this.legend.shapeWidth / 2) - padding);\n                this.totalPages++;\n            }\n            else {\n                legendOption.location.x = prevLegend.location.x;\n                legendOption.location.y = prevLegend.location.y + this.maxItemHeight + padding;\n            }\n        }\n        else {\n            let previousBound = (prevLegend.location.x + textPadding + prevLegend.textSize.width);\n            if ((previousBound + (legendOption.textSize.width + textPadding)) > (rect.x + rect.width + this.legend.shapeWidth / 2)) {\n                legendOption.location.y = (count === firstLegend) ? prevLegend.location.y :\n                    prevLegend.location.y + this.maxItemHeight + padding;\n                legendOption.location.x = start.x;\n            }\n            else {\n                legendOption.location.y = prevLegend.location.y;\n                legendOption.location.x = (count === firstLegend) ? prevLegend.location.x : previousBound;\n            }\n            this.totalPages = this.totalRowCount;\n        }\n        let availablewidth = this.getAvailWidth(legendOption.location.x, this.legendBounds.width, this.legendBounds.x);\n        legendOption.text = textTrim(+availablewidth.toFixed(4), legendOption.text, this.legend.textStyle);\n    }\n    /**\n     * finding the smart legend place according to positions.\n     * @return {void}\n     * @private\n     */\n    getSmartLegendLocation(labelBound, legendBound, margin) {\n        let space;\n        switch (this.position) {\n            case 'Left':\n                space = ((labelBound.x - legendBound.width) - margin.left) / 2;\n                legendBound.x = (labelBound.x - legendBound.width) < margin.left ? legendBound.x :\n                    (labelBound.x - legendBound.width) - space;\n                break;\n            case 'Right':\n                space = ((this.chart.availableSize.width - margin.right) - (labelBound.x + labelBound.width + legendBound.width)) / 2;\n                legendBound.x = (labelBound.x + labelBound.width + legendBound.width) > (this.chart.availableSize.width - margin.right) ?\n                    legendBound.x : (labelBound.x + labelBound.width + space);\n                break;\n            case 'Top':\n                this.getTitleRect(this.chart);\n                space = ((labelBound.y - legendBound.height) - (this.titleRect.y + this.titleRect.height)) / 2;\n                legendBound.y = (labelBound.y - legendBound.height) < margin.top ? legendBound.y :\n                    (labelBound.y - legendBound.height) - space;\n                break;\n            case 'Bottom':\n                space = ((this.chart.availableSize.height - margin.bottom) - (labelBound.y + labelBound.height + legendBound.height)) / 2;\n                legendBound.y = labelBound.y + labelBound.height + legendBound.height > (this.chart.availableSize.height - margin.bottom) ?\n                    legendBound.y : (labelBound.y + labelBound.height) + space;\n                break;\n        }\n    }\n    /**\n     * To get title rect.\n     */\n    getTitleRect(accumulation) {\n        if (!accumulation.title) {\n            return null;\n        }\n        let titleSize = measureText(accumulation.title, accumulation.titleStyle);\n        this.titleRect = new Rect(accumulation.availableSize.width / 2 - titleSize.width / 2, accumulation.margin.top, titleSize.width, titleSize.height);\n    }\n    /**\n     * To get legend by index\n     */\n    legendByIndex(index, legendCollections) {\n        for (let legend of legendCollections) {\n            if (legend.pointIndex === index) {\n                return legend;\n            }\n        }\n        return null;\n    }\n    /**\n     * To show or hide the legend on clicking the legend.\n     * @return {void}\n     */\n    click(event) {\n        let targetId = event.target.id;\n        let legendItemsId = [this.legendID + '_text_', this.legendID + '_shape_',\n            this.legendID + '_shape_marker_'];\n        let selectedDataIndexes = [];\n        if (this.chart.accumulationSelectionModule) {\n            selectedDataIndexes = extend([], this.chart.accumulationSelectionModule.selectedDataIndexes, null, true);\n        }\n        for (let id of legendItemsId) {\n            if (targetId.indexOf(id) > -1) {\n                let pointIndex = parseInt(targetId.split(id)[1], 10);\n                let currentSeries = this.chart.visibleSeries[0];\n                let point = pointByIndex(pointIndex, currentSeries.points);\n                let legendOption = this.legendByIndex(pointIndex, this.legendCollections);\n                if (this.chart.legendSettings.toggleVisibility) {\n                    point.visible = !point.visible;\n                    legendOption.visible = point.visible;\n                    this.chart.removeSvg();\n                    if (point.visible) {\n                        currentSeries.sumOfPoints += point.y;\n                    }\n                    else {\n                        currentSeries.sumOfPoints -= point.y;\n                    }\n                    this.chart.refreshPoints(currentSeries.points);\n                    this.chart.renderElements();\n                }\n                else if (this.chart.accumulationSelectionModule) {\n                    this.chart.accumulationSelectionModule.legendSelection(this.chart, 0, pointIndex);\n                }\n            }\n        }\n        if (targetId.indexOf(this.legendID + '_pageup') > -1) {\n            this.changePage(event, true);\n        }\n        else if (targetId.indexOf(this.legendID + '_pagedown') > -1) {\n            this.changePage(event, false);\n        }\n    }\n    /**\n     * Get module name\n     */\n    getModuleName() {\n        return 'AccumulationLegend';\n    }\n    /**\n     * To destroy the Legend.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy method calling here\n         */\n    }\n}\n","/**\n * AccumulationChart DataLabel module file\n */\nimport { extend, createElement } from '@syncfusion/ej2-base';\nimport { ChartLocation, degreeToLocation, Rect, isOverlap, stringToNumber, getAngle, TextOption } from '../../common/utils/helper';\nimport { textTrim, subtractThickness, Thickness, getElement } from '../../common/utils/helper';\nimport { removeElement, measureText, RectOption, textElement, showTooltip } from '../../common/utils/helper';\nimport { PathOption, colorNameToHex, convertHexToColor, containsRect } from '../../common/utils/helper';\nimport { getSeriesFromIndex } from '../model/acc-base';\nimport { textRender } from '../../common/model/constants';\nimport { getFontStyle, createTemplate, measureElementRect, templateAnimate } from '../../common/utils/helper';\nimport { AccumulationBase } from './accumulation-base';\n/**\n * AccumulationDataLabel module used to render `dataLabel`.\n */\nexport class AccumulationDataLabel extends AccumulationBase {\n    constructor(accumulation) {\n        super(accumulation);\n        this.id = accumulation.element.id + '_datalabel_Series_';\n        if (accumulation.title) {\n            let titleSize = measureText(accumulation.title, accumulation.titleStyle);\n            this.titleRect = new Rect(accumulation.availableSize.width / 2 - titleSize.width / 2, accumulation.margin.top, titleSize.width, titleSize.height);\n        }\n    }\n    /**\n     * Method to get datalabel text location.\n     * @private\n     */\n    getDataLabelPosition(point, dataLabel, textSize, points, parent, id) {\n        let radius = this.isCircular() ? this.labelRadius : this.getLabelDistance(point, dataLabel);\n        this.getLabelRegion(point, dataLabel.position, textSize, radius, this.marginValue);\n        point.labelAngle = point.midAngle;\n        point.labelPosition = dataLabel.position;\n        if (this.accumulation.enableSmartLabels) {\n            this.getSmartLabel(point, dataLabel, textSize, points, parent, id);\n        }\n    }\n    /**\n     * Method to get datalabel bound.\n     */\n    getLabelRegion(point, position, textSize, labelRadius, margin, endAngle = 0) {\n        let labelAngle = endAngle || point.midAngle;\n        let space = 10;\n        let location = degreeToLocation(labelAngle, labelRadius, this.isCircular() ? this.center :\n            this.getLabelLocation(point, position));\n        location.y = (position === 'Inside') ? (location.y - textSize.height / 2) : location.y;\n        location.x = (position === 'Inside') ? (location.x - textSize.width / 2) : location.x;\n        point.labelRegion = new Rect(location.x, location.y, textSize.width + (margin * 2), textSize.height + (margin * 2));\n        if (position === 'Outside') {\n            point.labelRegion.y -= point.labelRegion.height / 2;\n            if (labelAngle >= 90 && labelAngle <= 270) {\n                point.labelRegion.x -= (point.labelRegion.width + space);\n            }\n            else {\n                point.labelRegion.x += space;\n            }\n        }\n    }\n    /**\n     * Method to get datalabel smart position.\n     */\n    getSmartLabel(point, dataLabel, textSize, points, parent, id) {\n        let circular = this.isCircular();\n        let labelRadius = circular ? this.radius : this.getLabelDistance(point, dataLabel);\n        let connectorLength = circular ? (dataLabel.connectorStyle.length || '4%') :\n            '0px';\n        labelRadius += stringToNumber(connectorLength, labelRadius);\n        let previousPoint = this.findPreviousPoint(points, point.index, point.labelPosition);\n        if (dataLabel.position === 'Inside') {\n            if (previousPoint && previousPoint.labelRegion && (isOverlap(point.labelRegion, previousPoint.labelRegion)\n                || this.isOverlapping(point, points)) || !circular && !containsRect(point.region, point.labelRegion)) {\n                point.labelPosition = 'Outside';\n                if (!circular) {\n                    labelRadius = this.getLabelDistance(point, dataLabel);\n                }\n                this.getLabelRegion(point, point.labelPosition, textSize, labelRadius, this.marginValue);\n                previousPoint = this.findPreviousPoint(points, point.index, point.labelPosition);\n                if (previousPoint && (isOverlap(point.labelRegion, previousPoint.labelRegion) ||\n                    this.isConnectorLineOverlapping(point, previousPoint))) {\n                    this.setOuterSmartLabel(previousPoint, point, dataLabel.border.width, labelRadius, textSize, this.marginValue);\n                }\n            }\n        }\n        else {\n            if (previousPoint && previousPoint.labelRegion && (isOverlap(point.labelRegion, previousPoint.labelRegion)\n                || this.isOverlapping(point, points) || this.isConnectorLineOverlapping(point, previousPoint))) {\n                this.setOuterSmartLabel(previousPoint, point, dataLabel.border.width, labelRadius, textSize, this.marginValue);\n            }\n        }\n        if (this.isOverlapping(point, points) || (this.titleRect && point.labelRegion && isOverlap(point.labelRegion, this.titleRect))) {\n            this.setPointVisibileFalse(point);\n        }\n        if (this.accumulation.accumulationLegendModule && point.labelVisible && point.labelRegion) {\n            let rect = this.accumulation.accumulationLegendModule.legendBounds;\n            let padding = this.accumulation.legendSettings.border.width / 2;\n            this.textTrimming(point, new Rect(rect.x - padding, rect.y - padding, rect.width + (2 * padding), rect.height + (2 * padding)), dataLabel.font, this.accumulation.accumulationLegendModule.position);\n        }\n        if (point.labelVisible && point.labelRegion) {\n            let position = this.isCircular() ? (point.labelRegion.x >= this.center.x) ? 'InsideRight' : 'InsideLeft' :\n                'InsideRight';\n            this.textTrimming(point, this.areaRect, dataLabel.font, position);\n        }\n        if (point.labelVisible && point.labelRegion && ((point.labelRegion.y + point.labelRegion.height >\n            this.areaRect.y + this.areaRect.height || point.labelRegion.y < this.areaRect.y) || (point.labelRegion.x < this.areaRect.x ||\n            point.labelRegion.x + point.labelRegion.width > this.areaRect.x + this.areaRect.width))) {\n            this.setPointVisibileFalse(point);\n        }\n    }\n    /**\n     * To find trimmed datalabel tooltip needed.\n     * @return {void}\n     * @private\n     */\n    move(e, x, y, isTouch) {\n        if (e.target.textContent.indexOf('...') > -1) {\n            let targetId = e.target.id.split(this.id);\n            if (targetId.length === 2) {\n                let seriesIndex = parseInt(targetId[1].split('_text_')[0], 10);\n                let pointIndex = parseInt(targetId[1].split('_text_')[1], 10);\n                if (!isNaN(seriesIndex) && !isNaN(pointIndex)) {\n                    if (isTouch) {\n                        removeElement(this.accumulation.element.id + '_EJ2_Datalabel_Tooltip');\n                    }\n                    let point = getSeriesFromIndex(seriesIndex, (this.accumulation).visibleSeries).points[pointIndex];\n                    showTooltip(point.text || point.y.toString(), x, y, this.areaRect.width, this.accumulation.element.id + '_EJ2_Datalabel_Tooltip', getElement(this.accumulation.element.id + '_Secondary_Element'));\n                }\n            }\n        }\n        else {\n            removeElement(this.accumulation.element.id + '_EJ2_Datalabel_Tooltip');\n        }\n        if (isTouch) {\n            clearTimeout(this.clearTooltip);\n            this.clearTooltip = setTimeout(() => { removeElement(this.accumulation.element.id + '_EJ2_Datalabel_Tooltip'); }, 1000);\n        }\n    }\n    /**\n     * To find previous valid label point\n     */\n    findPreviousPoint(points, index, position) {\n        let point = points[0];\n        for (let i = index - 1; i >= 0; i--) {\n            point = points[i];\n            if (point.visible && point.labelVisible && point.labelRegion && point.labelPosition === position) {\n                return point;\n            }\n        }\n        return null;\n    }\n    /**\n     * To find current point datalabel is overlapping with other points\n     */\n    isOverlapping(currentPoint, points) {\n        for (let i = currentPoint.index - 1; i >= 0; i--) {\n            if (points[i].visible && points[i].labelVisible && points[i].labelRegion && currentPoint.labelRegion &&\n                currentPoint.labelVisible && isOverlap(currentPoint.labelRegion, points[i].labelRegion)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * To get text trimmed while exceeds the accumulation chart area.\n     */\n    textTrimming(point, rect, font, position) {\n        if (isOverlap(point.labelRegion, rect)) {\n            let size = point.labelRegion.width;\n            if (position === 'Right') {\n                size = rect.x - point.labelRegion.x;\n            }\n            else if (position === 'Left') {\n                size = point.labelRegion.x - (rect.x + rect.width);\n                if (size < 0) {\n                    size += point.labelRegion.width;\n                    point.labelRegion.x = rect.x + rect.width;\n                }\n            }\n            else if (position === 'InsideRight') {\n                size = (rect.x + rect.width) - point.labelRegion.x;\n            }\n            else if (position === 'InsideLeft') {\n                size = (point.labelRegion.x + point.labelRegion.width) - rect.x;\n                if (size < point.labelRegion.width) {\n                    point.labelRegion.x = rect.x;\n                }\n            }\n            else {\n                this.setPointVisibileFalse(point);\n            }\n            if (point.labelVisible && point.labelRegion) {\n                if (size < point.labelRegion.width) {\n                    point.label = textTrim(size - (this.marginValue * 2), point.label, font);\n                    point.labelRegion.width = size;\n                }\n                if (point.label.length === 3 && point.label.indexOf('...') > -1) {\n                    this.setPointVisibileFalse(point);\n                }\n            }\n        }\n    }\n    /**\n     * To set point label visible and region to disable.\n     */\n    setPointVisibileFalse(point) {\n        point.labelVisible = false;\n        point.labelRegion = null;\n    }\n    /**\n     * To set datalabel angle position for outside labels\n     */\n    setOuterSmartLabel(previousPoint, point, border, labelRadius, textsize, margin) {\n        if (!this.isCircular()) {\n            this.setSmartLabelForSegments(point, previousPoint, labelRadius, textsize, margin);\n        }\n        else {\n            let labelAngle = this.getOverlappedAngle(previousPoint.labelRegion, point.labelRegion, point.midAngle, border * 2);\n            this.getLabelRegion(point, 'Outside', textsize, labelRadius, margin, labelAngle);\n            if (labelAngle > point.endAngle) {\n                this.setPointVisibileFalse(point);\n            }\n            point.labelAngle = labelAngle;\n            while (point.labelVisible && (isOverlap(previousPoint.labelRegion, point.labelRegion) || labelAngle <= previousPoint.labelAngle\n                || this.isConnectorLineOverlapping(point, previousPoint))) {\n                if (labelAngle > point.endAngle) {\n                    this.setPointVisibileFalse(point);\n                    break;\n                }\n                point.labelAngle = labelAngle;\n                this.getLabelRegion(point, 'Outside', textsize, labelRadius, margin, labelAngle);\n                labelAngle += 0.1;\n            }\n        }\n    }\n    /**\n     * Sets smart label positions for funnel and pyramid series\n     */\n    setSmartLabelForSegments(point, prevPoint, distance, textSize, margin) {\n        let textRegion = point.labelRegion;\n        //let overlapWidth: number = prevPoint.labelRegion.x + prevPoint.labelRegion.width - textRegion.x;\n        let overlapHeight = this.accumulation.type === 'Funnel' ?\n            prevPoint.labelRegion.y - (textRegion.y + textRegion.height) :\n            point.labelRegion.y - (prevPoint.labelRegion.y + prevPoint.labelRegion.height);\n        if (overlapHeight < 0) {\n            point.labelRegion.y += this.accumulation.type === 'Funnel' ? overlapHeight : -overlapHeight;\n        }\n    }\n    /**\n     * To find connector line overlapping.\n     */\n    isConnectorLineOverlapping(point, previous) {\n        let start = this.getLabelLocation(point);\n        let end = new ChartLocation(0, 0);\n        this.getEdgeOfLabel(point.labelRegion, point.labelAngle, end);\n        let previousstart = this.getLabelLocation(previous);\n        let previousend = new ChartLocation(0, 0);\n        this.getEdgeOfLabel(previous.labelRegion, previous.labelAngle, previousend);\n        return this.isLineRectangleIntersect(start, end, point.labelRegion) ||\n            this.isLineRectangleIntersect(start, end, previous.labelRegion) ||\n            this.isLineRectangleIntersect(previousstart, previousend, point.labelRegion);\n    }\n    /**\n     * To find two rectangle intersect\n     */\n    isLineRectangleIntersect(line1, line2, rect) {\n        let rectPoints = [\n            new ChartLocation(Math.round(rect.x), Math.round(rect.y)),\n            new ChartLocation(Math.round((rect.x + rect.width)), Math.round(rect.y)),\n            new ChartLocation(Math.round((rect.x + rect.width)), Math.round((rect.y + rect.height))),\n            new ChartLocation(Math.round(rect.x), Math.round((rect.y + rect.height)))\n        ];\n        line1.x = Math.round(line1.x);\n        line1.y = Math.round(line1.y);\n        line2.x = Math.round(line2.x);\n        line2.y = Math.round(line2.y);\n        for (let i = 0; i < rectPoints.length; i++) {\n            if (this.isLinesIntersect(line1, line2, rectPoints[i], rectPoints[(i + 1) % rectPoints.length])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * To find two line intersect\n     */\n    isLinesIntersect(point1, point2, point11, point12) {\n        let a1 = point2.y - point1.y;\n        let b1 = point1.x - point2.x;\n        let c1 = a1 * point1.x + b1 * point1.y;\n        let a2 = point12.y - point11.y;\n        let b2 = point11.x - point12.x;\n        let c2 = a2 * point11.x + b2 * point11.y;\n        let delta = a1 * b2 - a2 * b1;\n        if (delta !== 0) {\n            let x = (b2 * c1 - b1 * c2) / delta;\n            let y = (a1 * c2 - a2 * c1) / delta;\n            let lies = Math.min(point1.x, point2.x) <= x && x <= Math.max(point1.x, point2.x);\n            lies = lies && Math.min(point1.y, point2.y) <= y && y <= Math.max(point1.y, point2.y);\n            lies = lies && Math.min(point11.x, point12.x) <= x && x <= Math.max(point11.x, point12.x);\n            lies = lies && Math.min(point11.y, point12.y) <= y && y <= Math.max(point11.y, point12.y);\n            return lies;\n        }\n        return false;\n    }\n    /**\n     * To get two rectangle overlapping angles.\n     */\n    getOverlappedAngle(first, second, angle, padding) {\n        let x = first.x;\n        if (angle >= 90 && angle <= 270) {\n            second.y = first.y - (padding + second.height / 2);\n            x = first.x + first.width;\n        }\n        else {\n            second.y = first.y + first.height + padding;\n        }\n        return getAngle(this.center, new ChartLocation(x, second.y));\n    }\n    /**\n     * To get connector line path\n     */\n    getConnectorPath(label, point, dataLabel, end = 0) {\n        let connector = dataLabel.connectorStyle;\n        let labelRadius = this.isCircular() ? this.labelRadius : this.getLabelDistance(point, dataLabel);\n        let start = this.getConnectorStartPoint(point, connector);\n        let labelAngle = end || point.midAngle;\n        let middle = new ChartLocation(0, 0);\n        let endPoint = this.getEdgeOfLabel(label, labelAngle, middle, connector.width);\n        if (connector.type === 'Curve') {\n            if (this.isCircular()) {\n                let r = labelRadius - this.radius;\n                middle = degreeToLocation(labelAngle, labelRadius - (r / 2), this.center);\n                return 'M ' + start.x + ' ' + start.y + ' Q' + middle.x + ',' + middle.y + ' ' + endPoint.x + ',' + endPoint.y;\n            }\n            else {\n                return this.getPolyLinePath(start, endPoint);\n            }\n        }\n        else {\n            return 'M ' + start.x + ' ' + start.y + ' L ' + middle.x + ' ' + middle.y + ' L ' + endPoint.x + ' ' + endPoint.y;\n        }\n    }\n    /**\n     * Finds the curved path for funnel/pyramid data label connectors\n     */\n    getPolyLinePath(start, end) {\n        let controlPoints = [start, end];\n        if (start.y === end.y) {\n            return 'M ' + start.x + ' ' + start.y + ' L ' + end.x + ' ' + end.y;\n        }\n        let path = 'M';\n        for (let i = 0; i <= 16; i++) {\n            let t = i / 16;\n            let points = this.getBezierPoint(t, controlPoints, 0, 2);\n            path += points.x + ',' + points.y;\n            if (i !== 16) {\n                path += ' L';\n            }\n        }\n        return path;\n    }\n    /**\n     * Finds the bezier point for funnel/pyramid data label connectors\n     */\n    getBezierPoint(t, controlPoints, index, count) {\n        if (count === 1) {\n            return controlPoints[index];\n        }\n        let p0 = this.getBezierPoint(t, controlPoints, index, count - 1);\n        let p1 = this.getBezierPoint(t, controlPoints, index + 1, count - 1);\n        let x = (p0.x) ? p0.x : p0.x;\n        let y = (p0.y) ? p0.y : p0.y;\n        let x1 = (p1.x) ? p1.x : p1.x;\n        let y1 = (p1.y) ? p1.y : p1.y;\n        let x2 = (1 - t) * x + t * x1;\n        let y2 = (1 - t) * y + t * y1;\n        if (p0.x) {\n            return { x: x2, y: y2 };\n        }\n        else {\n            return { x: x2, y: y2 };\n        }\n    }\n    /**\n     * To get label edges based on the center and label rect position.\n     */\n    getEdgeOfLabel(labelshape, angle, middle, border = 1) {\n        let edge = new ChartLocation(labelshape.x, labelshape.y);\n        if (angle >= 90 && angle <= 270) {\n            edge.x += labelshape.width + border / 2;\n            edge.y += labelshape.height / 2;\n            middle.x = edge.x + 10;\n            middle.y = edge.y;\n        }\n        else {\n            edge.x -= border / 2;\n            edge.y += labelshape.height / 2;\n            middle.x = edge.x - 10;\n            middle.y = edge.y;\n        }\n        return edge;\n    }\n    /**\n     * Finds the distance between the label position and the edge/center of the funnel/pyramid\n     */\n    getLabelDistance(point, dataLabel) {\n        if (point.labelPosition && dataLabel.position !== point.labelPosition || dataLabel.connectorStyle.length) {\n            let length = stringToNumber(dataLabel.connectorStyle.length || '70px', this.accumulation.initialClipRect.width);\n            if (length < this.accumulation.initialClipRect.width) {\n                return length;\n            }\n        }\n        let position = point.labelPosition || dataLabel.position;\n        let series = this.accumulation.visibleSeries[0];\n        let extraSpace = (this.accumulation.initialClipRect.width - series.triangleSize.width) / 2;\n        let labelLocation;\n        switch (position) {\n            case 'Inside':\n                return 0;\n            case 'Outside':\n                labelLocation = point.symbolLocation.x + point.labelOffset.x;\n                return this.accumulation.initialClipRect.width - labelLocation - extraSpace;\n        }\n    }\n    /**\n     * Finds the label position / beginning of the connector(ouside funnel labels)\n     */\n    getLabelLocation(point, position = 'Outside') {\n        if (this.accumulation.type !== 'Pie') {\n            position = point.labelPosition || position;\n            let location = {\n                x: point.symbolLocation.x,\n                y: point.symbolLocation.y - point.labelOffset.y\n            };\n            switch (position) {\n                case 'Inside':\n                    location.y = point.region.y + point.region.height / 2;\n                    break;\n                case 'Outside':\n                    location.x += point.labelOffset.x;\n            }\n            return location;\n        }\n        else {\n            return degreeToLocation(point.midAngle, this.radius, this.center);\n        }\n    }\n    /**\n     * Finds the beginning of connector line\n     */\n    getConnectorStartPoint(point, connector) {\n        return this.isCircular() ? degreeToLocation(point.midAngle, this.radius - connector.width, this.center) :\n            this.getLabelLocation(point);\n    }\n    /**\n     * To find area rect based on margin, available size.\n     * @private\n     */\n    findAreaRect() {\n        this.areaRect = new Rect(0, 0, this.accumulation.availableSize.width, this.accumulation.availableSize.height);\n        let margin = this.accumulation.margin;\n        subtractThickness(this.areaRect, new Thickness(margin.left, margin.right, margin.top, margin.bottom));\n    }\n    /**\n     * To render the data labels from series points.\n     */\n    renderDataLabel(point, dataLabel, parent, points, series, templateElement) {\n        let id = this.accumulation.element.id + '_datalabel_Series_' + series + '_';\n        let datalabelGroup = this.accumulation.renderer.createGroup({ id: id + 'g_' + point.index });\n        point.label = point.originalText || point.y.toString();\n        let border = { width: dataLabel.border.width, color: dataLabel.border.color };\n        let argsData = {\n            cancel: false, name: textRender, series: this.accumulation.visibleSeries[0], point: point,\n            text: point.label, border: border, color: dataLabel.fill, template: dataLabel.template\n        };\n        this.accumulation.trigger(textRender, argsData);\n        let isTemplate = argsData.template !== null;\n        point.labelVisible = !argsData.cancel;\n        point.text = point.label = argsData.text;\n        this.marginValue = argsData.border.width ? (5 + argsData.border.width) : 1;\n        // Template element\n        let childElement = createElement('div', {\n            id: this.accumulation.element.id + '_Series_' + 0 + '_DataLabel_' + point.index,\n            styles: 'position: absolute;background-color:' + argsData.color + ';' +\n                getFontStyle(dataLabel.font) + ';border:' + argsData.border.width + 'px solid ' + argsData.border.color + ';'\n        });\n        let textSize = isTemplate ? this.getTemplateSize(childElement, point, argsData) :\n            measureText(point.label, dataLabel.font);\n        textSize.height += 4; // 4 for calculation with padding for smart label shape\n        textSize.width += 4;\n        this.getDataLabelPosition(point, dataLabel, textSize, points, datalabelGroup, id);\n        if (point.labelVisible) {\n            this.correctLabelRegion(point.labelRegion, textSize);\n            if (isTemplate) {\n                this.setTemplateStyle(childElement, point, templateElement, dataLabel.font.color, argsData.color);\n            }\n            else {\n                datalabelGroup.appendChild(this.accumulation.renderer.drawRectangle(new RectOption(id + 'shape_' + point.index, argsData.color, argsData.border, 1, point.labelRegion, dataLabel.rx, dataLabel.ry)));\n                textElement(new TextOption(id + 'text_' + point.index, point.labelRegion.x + this.marginValue, point.labelRegion.y + (textSize.height * 3 / 4) + this.marginValue, 'start', point.label, '', 'auto'), dataLabel.font, dataLabel.font.color || this.getSaturatedColor(point, argsData.color), datalabelGroup);\n            }\n            if (this.accumulation.accumulationLegendModule && (dataLabel.position === 'Outside' || this.accumulation.enableSmartLabels)) {\n                this.accumulation.visibleSeries[0].findMaxBounds(this.accumulation.visibleSeries[0].labelBound, point.labelRegion);\n            }\n            if (point.labelPosition === 'Outside') {\n                let path = this.getConnectorPath(extend({}, point.labelRegion, null, true), point, dataLabel, point.labelAngle);\n                let pathElement = this.accumulation.renderer.drawPath(new PathOption(id + 'connector_' + point.index, 'transparent', dataLabel.connectorStyle.width, dataLabel.connectorStyle.color || point.color, 1, '', path));\n                datalabelGroup.appendChild(pathElement);\n            }\n            parent.appendChild(datalabelGroup);\n        }\n    }\n    /**\n     * To find the template element size\n     * @param element\n     * @param point\n     * @param argsData\n     */\n    getTemplateSize(element, point, argsData) {\n        let clientRect;\n        element = createTemplate(element, point.index, argsData.template, this.accumulation, point, this.accumulation.visibleSeries[0]);\n        clientRect = measureElementRect(element);\n        return { width: clientRect.width, height: clientRect.height };\n    }\n    /**\n     * To set the template element style\n     * @param childElement\n     * @param point\n     * @param parent\n     * @param labelColor\n     * @param fill\n     */\n    setTemplateStyle(childElement, point, parent, labelColor, fill) {\n        childElement.style.left = (point.labelRegion.x) + 'px';\n        childElement.style.top = (point.labelRegion.y) + 'px';\n        childElement.style.color = labelColor ||\n            this.getSaturatedColor(point, fill);\n        if (childElement.childElementCount) {\n            parent.appendChild(childElement);\n            this.doTemplateAnimation(this.accumulation, childElement);\n        }\n    }\n    /**\n     * To find saturated color for datalabel\n     */\n    getSaturatedColor(point, color) {\n        let saturatedColor;\n        if (this.marginValue >= 1) {\n            saturatedColor = color === 'transparent' ? this.getLabelBackground(point) : color;\n        }\n        else {\n            saturatedColor = this.getLabelBackground(point);\n        }\n        saturatedColor = (saturatedColor === 'transparent') ? window.getComputedStyle(document.body, null).backgroundColor : saturatedColor;\n        let rgbValue = convertHexToColor(colorNameToHex(saturatedColor));\n        let contrast = Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000);\n        return contrast >= 128 ? 'black' : 'white';\n    }\n    /**\n     * Animates the data label template.\n     * @return {void}.\n     * @private\n     */\n    doTemplateAnimation(accumulation, element) {\n        let series = accumulation.visibleSeries[0];\n        let delay = series.animation.delay + series.animation.duration;\n        if (series.animation.enable && accumulation.animateSeries) {\n            element.style.visibility = 'hidden';\n            templateAnimate(element, delay, 200, 'ZoomIn');\n        }\n    }\n    /**\n     * To find background color for the datalabel\n     */\n    getLabelBackground(point) {\n        return point.labelPosition === 'Outside' ?\n            this.accumulation.background || this.accumulation.themeStyle.background : point.color;\n    }\n    /**\n     * To correct the padding between datalabel regions.\n     */\n    correctLabelRegion(labelRegion, textSize, padding = 4) {\n        labelRegion.height -= padding;\n        labelRegion.width -= padding;\n        labelRegion.x += padding / 2;\n        labelRegion.y += padding / 2;\n        textSize.height -= padding;\n        textSize.width -= padding;\n    }\n    /**\n     * To get the dataLabel module name\n     */\n    getModuleName() {\n        return 'AccumulationDataLabel';\n    }\n    /**\n     * To destroy the data label.\n     * @return {void}\n     * @private\n     */\n    destroy(accumulation) {\n        /**\n         * Destroy method performed here\n         */\n    }\n}\n","/**\n * AccumulationChart Tooltip file\n */\nimport { Browser, Animation } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { AccPointData, withInBounds, ChartLocation, PathOption, drawSymbol, Size, indexFinder } from '../../common/utils/helper';\nimport { BaseTooltip } from '../../common/user-interaction/tooltip';\n/**\n * `AccumulationTooltip` module is used to render tooltip for accumulation chart.\n */\nexport class AccumulationTooltip extends BaseTooltip {\n    constructor(accumulation) {\n        super(accumulation);\n        this.accumulation = accumulation;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    addEventListener() {\n        if (this.accumulation.isDestroyed) {\n            return;\n        }\n        this.accumulation.on(Browser.isPointer ? 'pointerleave' : 'mouseleave', this.mouseLeaveHandler, this);\n        this.accumulation.on(Browser.touchMoveEvent, this.mouseMoveHandler, this);\n        this.accumulation.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    }\n    mouseLeaveHandler(e) {\n        this.removeTooltip(1000);\n    }\n    mouseUpHandler(e) {\n        let control = this.accumulation;\n        if (control.tooltip.enable && control.isTouch && withInBounds(control.mouseX, control.mouseY, control.initialClipRect)) {\n            this.tooltip(e);\n            this.removeTooltip(2000);\n        }\n    }\n    mouseMoveHandler(e) {\n        let control = this.accumulation;\n        // Tooltip for chart series.    \n        if (control.tooltip.enable && withInBounds(control.mouseX, control.mouseY, control.initialClipRect)) {\n            this.tooltip(e);\n        }\n    }\n    /**\n     * Renders the tooltip.\n     * @param  {PointerEvent} event - Mouse move event.\n     * @return {void}\n     */\n    tooltip(event) {\n        let isTooltip = this.getElement(this.element.id + '_tooltip');\n        let tooltipDiv = this.getTooltipElement(isTooltip);\n        this.renderSeriesTooltip(event, this.accumulation, !isTooltip, tooltipDiv);\n    }\n    renderSeriesTooltip(e, chart, isFirst, tooltipDiv) {\n        let data = this.getPieData(e, chart, chart.mouseX, chart.mouseY);\n        let rect = chart.initialClipRect;\n        this.currentPoints = [];\n        let markerSide;\n        if (data.point && (!this.previousPoints[0] || (this.previousPoints[0].point !== data.point))) {\n            if (this.pushData(data, isFirst, tooltipDiv, false)) {\n                let text = this.getTooltipText(data, chart.tooltip);\n                if (!chart.tooltip.template) {\n                    if (this.header !== '') {\n                        this.findHeader(data);\n                    }\n                    markerSide = this.renderTooltip(data, rect, data.point.symbolLocation, text, isFirst, false);\n                    if (markerSide) {\n                        this.drawMarker(markerSide.isBottom, 10);\n                    }\n                }\n                else {\n                    this.renderTemplate(data, rect, data.point.symbolLocation, this.getTemplateText(data), isFirst);\n                }\n                this.isRemove = true;\n            }\n            this.previousPoints = extend([], this.currentPoints, null, true);\n        }\n        else {\n            if (!data.point && this.isRemove) {\n                this.removeTooltip(1000);\n                this.isRemove = false;\n            }\n        }\n    }\n    drawMarker(isBottom, size) {\n        let count = 0;\n        let shapeOption;\n        let groupElement = this.getElement(this.element.id + '_tooltip_group');\n        let markerGroup = this.chart.renderer.createGroup({ id: this.element.id + '_tooltip_trackball_group' });\n        let x = (this.padding * 2) + (size / 2);\n        let y;\n        let series;\n        for (let data of this.currentPoints) {\n            series = data.series;\n            y = this.markerPoint[count] - this.padding + (isBottom ? this.arrowPadding : 0);\n            shapeOption = new PathOption(this.element.id + '_Tooltip_Trackball_' + series.index, data.point.color, 1, '#cccccc', series.opacity, null);\n            markerGroup.appendChild(drawSymbol(new ChartLocation(x, y), 'Circle', new Size(size, size), null, shapeOption, null));\n            count++;\n        }\n        groupElement.appendChild(markerGroup);\n    }\n    getPieData(e, chart, x, y) {\n        let target = e.target;\n        let id = indexFinder(target.id, true);\n        if (!isNaN(id.series)) {\n            let seriesIndex = id.series;\n            let pointIndex = id.point;\n            if (!isNullOrUndefined(seriesIndex) && !isNaN(seriesIndex) && !isNullOrUndefined(pointIndex) && !isNaN(pointIndex)) {\n                let series = this.getSeriesFromIndex(seriesIndex, chart.visibleSeries);\n                if (series.enableTooltip) {\n                    return new AccPointData(series.points[pointIndex], series);\n                }\n            }\n        }\n        return new AccPointData(null, null);\n    }\n    /**\n     * To get series from index\n     */\n    getSeriesFromIndex(index, visibleSeries) {\n        return visibleSeries[0];\n    }\n    getTemplateText(data) {\n        let point = extend({}, data.point);\n        return point;\n    }\n    getTooltipText(data, tooltip) {\n        let series = data.series;\n        let format = tooltip.format ? tooltip.format : '${point.x} : <b>${point.y}</b>';\n        return this.parseTemplate(data.point, series, format);\n    }\n    findHeader(data) {\n        this.header = this.parseTemplate(data.point, data.series, this.header);\n        if (this.header.replace(/<b>/g, '').replace(/<\\/b>/g, '').trim() !== '') {\n            this.formattedText = this.formattedText.concat(this.header);\n        }\n    }\n    parseTemplate(point, series, format) {\n        let value;\n        let textValue;\n        for (let dataValue of Object.keys(point)) {\n            value = new RegExp('${point' + '.' + dataValue + '}', 'gm');\n            format = format.replace(value.source, point[dataValue]);\n        }\n        for (let dataValue of Object.keys(Object.getPrototypeOf(series))) {\n            value = new RegExp('${series' + '.' + dataValue + '}', 'gm');\n            textValue = series[dataValue];\n            format = format.replace(value.source, textValue);\n        }\n        return format;\n    }\n    /**\n     * Removes the tooltip on mouse leave.\n     * @return {void}\n     * @private\n     */\n    removeTooltip(duration) {\n        let chart = this.control;\n        let tooltipElement = this.getElement(this.element.id + '_tooltip');\n        this.stopAnimation();\n        if (tooltipElement && this.previousPoints.length > 0) {\n            let data = this.previousPoints;\n            this.toolTipInterval = setTimeout(() => {\n                let series = data[0].series;\n                let tooltipGroup = tooltipElement.firstChild;\n                let opacity = parseFloat(tooltipGroup.getAttribute('opacity')) || 1;\n                let element = this.getElement(chart.element.id + '_Series_' + data[0].series.index\n                    + '_Point_' + data[0].point.index);\n                let rectOpacity;\n                if (element) {\n                    rectOpacity = parseFloat(element.getAttribute('opacity'));\n                }\n                new Animation({}).animate(tooltipGroup, {\n                    duration: 200,\n                    progress: (args) => {\n                        this.progressAnimation(element, tooltipGroup, series, opacity, rectOpacity, (args.timeStamp / args.duration), series.isRectSeries, false);\n                    },\n                    end: (model) => {\n                        this.previousPoints = [];\n                        this.endAnimation(element, tooltipGroup, series, false);\n                    }\n                });\n            }, duration);\n        }\n    }\n    /**\n     * Get module name\n     */\n    getModuleName() {\n        return 'AccumulationTooltip';\n    }\n    /**\n     * To destroy the Tooltip.\n     * @return {void}\n     * @private\n     */\n    destroy(chart) {\n        /**\n         * Destroy method calling here\n         */\n    }\n}\n","import { extend } from '@syncfusion/ej2-base';\nimport { indexFinder } from '../../common/utils/helper';\nimport { pointByIndex } from '../model/acc-base';\nimport { Index } from '../../common/model/base';\nimport { BaseSelection } from '../../common/user-interaction/selection';\n/**\n * `AccumulationSelection` module handles the selection for accumulation chart.\n * @private\n */\nexport class AccumulationSelection extends BaseSelection {\n    constructor(accumulation) {\n        super(accumulation);\n        this.renderer = accumulation.renderer;\n    }\n    /**\n     * To initialize the private variables\n     */\n    initPrivateVariables(accumulation) {\n        this.styleId = accumulation.element.id + '_ej2_chart_selection';\n        this.unselected = accumulation.element.id + '_ej2_deselected';\n        this.selectedDataIndexes = [];\n        this.rectPoints = null;\n    }\n    /**\n     * Invoke selection for rendered chart.\n     * @param  {AccumulationChart} chart - Define the chart to invoke the selection.\n     * @return {void}\n     */\n    invokeSelection(accumulation) {\n        this.initPrivateVariables(accumulation);\n        this.series = extend({}, accumulation.visibleSeries, null, true);\n        this.seriesStyles();\n        this.selectDataIndex(this.concatIndexes(accumulation.selectedDataIndexes, this.selectedDataIndexes), accumulation);\n    }\n    /**\n     * To get series selection style by series.\n     */\n    generateStyle(series) {\n        return (series.selectionStyle || this.styleId + '_series_' + series.index);\n    }\n    /**\n     * To get elements by index, series\n     */\n    findElements(accumulation, series, index) {\n        return [this.getElementByIndex(index)];\n    }\n    /**\n     * To get series point element by index\n     */\n    getElementByIndex(index) {\n        let elementId = this.control.element.id + '_Series_' + index.series + '_Point_' + index.point;\n        return document.getElementById(elementId);\n    }\n    /**\n     * To calculate selected elements on mouse click or touch\n     * @private\n     */\n    calculateSelectedElements(accumulation, event) {\n        if (event.target.id.indexOf(accumulation.element.id + '_') === -1) {\n            return;\n        }\n        if (event.target.id.indexOf('_Series_') > -1 || event.target.id.indexOf('_datalabel_') > -1) {\n            this.performSelection(indexFinder(event.target.id), accumulation, event.target);\n        }\n    }\n    /**\n     * To perform the selection process based on index and element.\n     */\n    performSelection(index, accumulation, element) {\n        element = element.id.indexOf('datalabel') > -1 ?\n            accumulation.getSeriesElement().childNodes[index.series].childNodes[index.point]\n            : element;\n        switch (accumulation.selectionMode) {\n            case 'Point':\n                if (!isNaN(index.point)) {\n                    this.selection(accumulation, index, [element]);\n                    this.blurEffect(accumulation.element.id, accumulation.visibleSeries);\n                }\n                break;\n        }\n    }\n    /**\n     * To select the element by index. Adding or removing selection style class name.\n     */\n    selection(accumulation, index, selectedElements) {\n        if (!accumulation.isMultiSelect) {\n            this.removeMultiSelectEelments(accumulation, this.selectedDataIndexes, index, accumulation.series);\n        }\n        let className = selectedElements[0] && (selectedElements[0].getAttribute('class') || '');\n        if (selectedElements[0] && className.indexOf(this.getSelectionClass(selectedElements[0].id)) > -1) {\n            this.removeStyles(selectedElements, index);\n            this.addOrRemoveIndex(this.selectedDataIndexes, index);\n        }\n        else {\n            this.applyStyles(selectedElements, index);\n            this.addOrRemoveIndex(this.selectedDataIndexes, index, true);\n        }\n    }\n    /**\n     * To redraw the selection process on accumulation chart refresh.\n     * @private\n     */\n    redrawSelection(accumulation, oldMode) {\n        let selectedDataIndexes = extend([], this.selectedDataIndexes, null, true);\n        this.removeSelectedElements(accumulation, this.selectedDataIndexes);\n        this.blurEffect(accumulation.element.id, accumulation.visibleSeries);\n        this.selectDataIndex(selectedDataIndexes, accumulation);\n    }\n    /**\n     * To remove the selected elements style classes by indexes.\n     */\n    removeSelectedElements(accumulation, indexes) {\n        let seriesgroup = accumulation.getSeriesElement();\n        for (let index of indexes) {\n            this.removeStyles([this.getElementByIndex(index)], index);\n        }\n    }\n    /**\n     * To perform the selection for legend elements.\n     * @private\n     */\n    legendSelection(accumulation, series, pointIndex) {\n        let element = accumulation.getSeriesElement().childNodes[series].childNodes[pointIndex];\n        let seriesStyle = this.generateStyle(accumulation.visibleSeries[series]);\n        let seriesElements = accumulation.getSeriesElement().childNodes[series].childNodes[pointIndex];\n        this.selection(accumulation, new Index(series, pointIndex), [seriesElements]);\n        this.blurEffect(accumulation.element.id, accumulation.visibleSeries);\n    }\n    /**\n     * To select the element by selected data indexes.\n     */\n    selectDataIndex(indexes, accumulation) {\n        let element;\n        for (let index of indexes) {\n            element = this.getElementByIndex(index);\n            if (element) {\n                this.performSelection(index, accumulation, element);\n            }\n        }\n    }\n    /**\n     * To remove the selection styles for multi selection process.\n     */\n    removeMultiSelectEelments(accumulation, index, currentIndex, seriesCollection) {\n        let series;\n        for (let i = 0; i < index.length; i++) {\n            series = seriesCollection[index[i].series];\n            if (!this.checkEquals(index[i], currentIndex)) {\n                this.removeStyles(this.findElements(accumulation, series, index[i]), index[i]);\n                index.splice(i, 1);\n                i--;\n            }\n        }\n    }\n    /**\n     * To apply the opacity effect for accumulation chart series elements.\n     */\n    blurEffect(pieId, visibleSeries) {\n        let visibility = this.checkPointVisibility(this.selectedDataIndexes); // legend click scenario\n        for (let series of visibleSeries) {\n            if (series.visible) {\n                this.checkSelectionElements(document.getElementById(pieId + '_SeriesCollection'), this.generateStyle(series), visibility);\n            }\n        }\n    }\n    /**\n     * To check selection elements by style class name.\n     */\n    checkSelectionElements(element, className, visibility) {\n        let children = (element.childNodes[0].childNodes);\n        let legendShape;\n        let elementClass;\n        let parentClass;\n        for (let i = 0; i < children.length; i++) {\n            elementClass = children[i].getAttribute('class') || '';\n            parentClass = children[i].parentNode.getAttribute('class') || '';\n            if (elementClass.indexOf(className) === -1 && parentClass.indexOf(className) === -1 && visibility) {\n                this.addSvgClass(children[i], this.unselected);\n            }\n            else {\n                this.removeSvgClass(children[i], this.unselected);\n            }\n            if (this.control.accumulationLegendModule && this.control.legendSettings.visible) {\n                legendShape = document.getElementById(this.control.element.id + '_chart_legend_shape_' + i);\n                if (legendShape) {\n                    if (elementClass.indexOf(className) === -1 && parentClass.indexOf(className) === -1 && visibility) {\n                        this.addSvgClass(legendShape, this.unselected);\n                    }\n                    else {\n                        this.removeSvgClass(legendShape, this.unselected);\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * To apply selection style for elements.\n     */\n    applyStyles(elements, index) {\n        for (let element of elements) {\n            let legendShape;\n            if (element) {\n                if (this.control.accumulationLegendModule && this.control.legendSettings.visible) {\n                    legendShape = document.getElementById(this.control.element.id + '_chart_legend_shape_' + index.point);\n                    this.removeSvgClass(legendShape, this.unselected);\n                    this.addSvgClass(legendShape, this.getSelectionClass(legendShape.id));\n                }\n                this.removeSvgClass(element.parentNode, this.unselected);\n                this.removeSvgClass(element, this.unselected);\n                this.addSvgClass(element, this.getSelectionClass(element.id));\n            }\n        }\n    }\n    /**\n     * To get selection style class name by id\n     */\n    getSelectionClass(id) {\n        return this.generateStyle(this.control.series[indexFinder(id).series]);\n    }\n    /**\n     * To remove selection style for elements.\n     */\n    removeStyles(elements, index) {\n        let legendShape;\n        for (let element of elements) {\n            if (element) {\n                if (this.control.accumulationLegendModule && this.control.legendSettings.visible) {\n                    legendShape = document.getElementById(this.control.element.id + '_chart_legend_shape_' + index.point);\n                    this.removeSvgClass(legendShape, this.getSelectionClass(legendShape.id));\n                }\n                this.removeSvgClass(element, this.getSelectionClass(element.id));\n            }\n        }\n    }\n    /**\n     * To apply or remove selected elements index.\n     */\n    addOrRemoveIndex(indexes, index, add) {\n        for (let i = 0; i < indexes.length; i++) {\n            if (this.checkEquals(indexes[i], index)) {\n                indexes.splice(i, 1);\n                i--;\n            }\n        }\n        if (add) {\n            indexes.push(index);\n        }\n    }\n    /**\n     * To check two index, point and series are equal\n     */\n    checkEquals(first, second) {\n        return ((first.point === second.point) && (first.series === second.series));\n    }\n    /**\n     * To check selected points are visibility\n     */\n    checkPointVisibility(selectedDataIndexes) {\n        let visible = false;\n        for (let data of selectedDataIndexes) {\n            if (pointByIndex(data.point, this.control.visibleSeries[0].points).visible) {\n                visible = true;\n                break;\n            }\n        }\n        return visible;\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        return 'AccumulationSelection';\n    }\n    /**\n     * To destroy the selection.\n     * @return {void}\n     * @private\n     */\n    destroy(accumulation) {\n        // Destroy method performed here\n    }\n}\n","/**\n * AccumulationChart annotation properties\n */\nimport { AnnotationBase } from '../../common/annotation/annotation';\nimport { appendElement } from '../../common/utils/helper';\nimport { createElement } from '@syncfusion/ej2-base';\n/**\n * `AccumulationAnnotation` module handles the annotation for accumulation chart.\n */\nexport class AccumulationAnnotation extends AnnotationBase {\n    /**\n     * Constructor for accumulation chart annotation.\n     * @private.\n     */\n    constructor(control) {\n        super(control);\n        this.pie = control;\n    }\n    /**\n     * Method to render the annotation for accumulation chart\n     * @param element\n     */\n    renderAnnotations(element) {\n        this.annotations = this.pie.annotations;\n        this.parentElement = createElement('div', {\n            id: this.pie.element.id + '_Annotation_Collections'\n        });\n        this.annotations.map((annotation, index) => {\n            this.processAnnotation(annotation, index, this.parentElement);\n        });\n        appendElement(this.parentElement, element);\n    }\n    /**\n     * Get module name.\n     */\n    getModuleName() {\n        // Returns te module name\n        return 'Annotation';\n    }\n    /**\n     * To destroy the annotation.\n     * @return {void}\n     * @private\n     */\n    destroy(control) {\n        // Destroy method performed here\n    }\n}\n","/**\n * Pie Component items exported\n */\nexport * from './accumulation';\nexport * from './model/acc-base';\nexport * from './renderer/pie-series';\nexport * from './renderer/funnel-series';\nexport * from './renderer/pyramid-series';\nexport * from './renderer/legend';\nexport * from './renderer/dataLabel';\nexport * from './user-interaction/tooltip';\nexport * from './user-interaction/selection';\nexport * from './annotation/annotation';\n","/**\n * Chart and accumulation common files\n */\nexport * from './model/base';\nexport * from './model/constants';\nexport * from './model/theme';\n","/**\n * Chart components exported.\n */\nexport * from './chart/index';\nexport * from './accumulation-chart/index';\nexport * from './common/index';\n"],"names":["__decorate","this","Animation","templateComplier","axisPadding","remove","printWindow","sum","inside"],"mappings":"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"}